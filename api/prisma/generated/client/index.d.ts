
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model blogcomment
 * 
 */
export type blogcomment = $Result.DefaultSelection<Prisma.$blogcommentPayload>
/**
 * Model blog
 * 
 */
export type blog = $Result.DefaultSelection<Prisma.$blogPayload>
/**
 * Model blogcategory
 * 
 */
export type blogcategory = $Result.DefaultSelection<Prisma.$blogcategoryPayload>
/**
 * Model meta
 * 
 */
export type meta = $Result.DefaultSelection<Prisma.$metaPayload>
/**
 * Model offer
 * 
 */
export type offer = $Result.DefaultSelection<Prisma.$offerPayload>
/**
 * Model newsletter
 * 
 */
export type newsletter = $Result.DefaultSelection<Prisma.$newsletterPayload>
/**
 * Model contact
 * 
 */
export type contact = $Result.DefaultSelection<Prisma.$contactPayload>
/**
 * Model page
 * 
 */
export type page = $Result.DefaultSelection<Prisma.$pagePayload>
/**
 * Model servicecategory
 * 
 */
export type servicecategory = $Result.DefaultSelection<Prisma.$servicecategoryPayload>
/**
 * Model service
 * 
 */
export type service = $Result.DefaultSelection<Prisma.$servicePayload>
/**
 * Model entrance
 * 
 */
export type entrance = $Result.DefaultSelection<Prisma.$entrancePayload>
/**
 * Model apiclient
 * 
 */
export type apiclient = $Result.DefaultSelection<Prisma.$apiclientPayload>
/**
 * Model refreshtoken
 * 
 */
export type refreshtoken = $Result.DefaultSelection<Prisma.$refreshtokenPayload>
/**
 * Model revokedtoken
 * 
 */
export type revokedtoken = $Result.DefaultSelection<Prisma.$revokedtokenPayload>
/**
 * Model role
 * 
 */
export type role = $Result.DefaultSelection<Prisma.$rolePayload>
/**
 * Model notification
 * 
 */
export type notification = $Result.DefaultSelection<Prisma.$notificationPayload>
/**
 * Model permission
 * 
 */
export type permission = $Result.DefaultSelection<Prisma.$permissionPayload>
/**
 * Model rolepermission
 * 
 */
export type rolepermission = $Result.DefaultSelection<Prisma.$rolepermissionPayload>
/**
 * Model user
 * 
 */
export type user = $Result.DefaultSelection<Prisma.$userPayload>
/**
 * Model userpermission
 * 
 */
export type userpermission = $Result.DefaultSelection<Prisma.$userpermissionPayload>
/**
 * Model userrole
 * 
 */
export type userrole = $Result.DefaultSelection<Prisma.$userrolePayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Blogcomments
 * const blogcomments = await prisma.blogcomment.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Blogcomments
   * const blogcomments = await prisma.blogcomment.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.blogcomment`: Exposes CRUD operations for the **blogcomment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Blogcomments
    * const blogcomments = await prisma.blogcomment.findMany()
    * ```
    */
  get blogcomment(): Prisma.blogcommentDelegate<ExtArgs>;

  /**
   * `prisma.blog`: Exposes CRUD operations for the **blog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Blogs
    * const blogs = await prisma.blog.findMany()
    * ```
    */
  get blog(): Prisma.blogDelegate<ExtArgs>;

  /**
   * `prisma.blogcategory`: Exposes CRUD operations for the **blogcategory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Blogcategories
    * const blogcategories = await prisma.blogcategory.findMany()
    * ```
    */
  get blogcategory(): Prisma.blogcategoryDelegate<ExtArgs>;

  /**
   * `prisma.meta`: Exposes CRUD operations for the **meta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Metas
    * const metas = await prisma.meta.findMany()
    * ```
    */
  get meta(): Prisma.metaDelegate<ExtArgs>;

  /**
   * `prisma.offer`: Exposes CRUD operations for the **offer** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Offers
    * const offers = await prisma.offer.findMany()
    * ```
    */
  get offer(): Prisma.offerDelegate<ExtArgs>;

  /**
   * `prisma.newsletter`: Exposes CRUD operations for the **newsletter** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Newsletters
    * const newsletters = await prisma.newsletter.findMany()
    * ```
    */
  get newsletter(): Prisma.newsletterDelegate<ExtArgs>;

  /**
   * `prisma.contact`: Exposes CRUD operations for the **contact** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Contacts
    * const contacts = await prisma.contact.findMany()
    * ```
    */
  get contact(): Prisma.contactDelegate<ExtArgs>;

  /**
   * `prisma.page`: Exposes CRUD operations for the **page** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pages
    * const pages = await prisma.page.findMany()
    * ```
    */
  get page(): Prisma.pageDelegate<ExtArgs>;

  /**
   * `prisma.servicecategory`: Exposes CRUD operations for the **servicecategory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Servicecategories
    * const servicecategories = await prisma.servicecategory.findMany()
    * ```
    */
  get servicecategory(): Prisma.servicecategoryDelegate<ExtArgs>;

  /**
   * `prisma.service`: Exposes CRUD operations for the **service** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Services
    * const services = await prisma.service.findMany()
    * ```
    */
  get service(): Prisma.serviceDelegate<ExtArgs>;

  /**
   * `prisma.entrance`: Exposes CRUD operations for the **entrance** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Entrances
    * const entrances = await prisma.entrance.findMany()
    * ```
    */
  get entrance(): Prisma.entranceDelegate<ExtArgs>;

  /**
   * `prisma.apiclient`: Exposes CRUD operations for the **apiclient** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Apiclients
    * const apiclients = await prisma.apiclient.findMany()
    * ```
    */
  get apiclient(): Prisma.apiclientDelegate<ExtArgs>;

  /**
   * `prisma.refreshtoken`: Exposes CRUD operations for the **refreshtoken** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Refreshtokens
    * const refreshtokens = await prisma.refreshtoken.findMany()
    * ```
    */
  get refreshtoken(): Prisma.refreshtokenDelegate<ExtArgs>;

  /**
   * `prisma.revokedtoken`: Exposes CRUD operations for the **revokedtoken** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Revokedtokens
    * const revokedtokens = await prisma.revokedtoken.findMany()
    * ```
    */
  get revokedtoken(): Prisma.revokedtokenDelegate<ExtArgs>;

  /**
   * `prisma.role`: Exposes CRUD operations for the **role** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles
    * const roles = await prisma.role.findMany()
    * ```
    */
  get role(): Prisma.roleDelegate<ExtArgs>;

  /**
   * `prisma.notification`: Exposes CRUD operations for the **notification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notifications
    * const notifications = await prisma.notification.findMany()
    * ```
    */
  get notification(): Prisma.notificationDelegate<ExtArgs>;

  /**
   * `prisma.permission`: Exposes CRUD operations for the **permission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Permissions
    * const permissions = await prisma.permission.findMany()
    * ```
    */
  get permission(): Prisma.permissionDelegate<ExtArgs>;

  /**
   * `prisma.rolepermission`: Exposes CRUD operations for the **rolepermission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Rolepermissions
    * const rolepermissions = await prisma.rolepermission.findMany()
    * ```
    */
  get rolepermission(): Prisma.rolepermissionDelegate<ExtArgs>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **user** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.userDelegate<ExtArgs>;

  /**
   * `prisma.userpermission`: Exposes CRUD operations for the **userpermission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Userpermissions
    * const userpermissions = await prisma.userpermission.findMany()
    * ```
    */
  get userpermission(): Prisma.userpermissionDelegate<ExtArgs>;

  /**
   * `prisma.userrole`: Exposes CRUD operations for the **userrole** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Userroles
    * const userroles = await prisma.userrole.findMany()
    * ```
    */
  get userrole(): Prisma.userroleDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.11.0
   * Query Engine version: efd2449663b3d73d637ea1fd226bafbcf45b3102
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    blogcomment: 'blogcomment',
    blog: 'blog',
    blogcategory: 'blogcategory',
    meta: 'meta',
    offer: 'offer',
    newsletter: 'newsletter',
    contact: 'contact',
    page: 'page',
    servicecategory: 'servicecategory',
    service: 'service',
    entrance: 'entrance',
    apiclient: 'apiclient',
    refreshtoken: 'refreshtoken',
    revokedtoken: 'revokedtoken',
    role: 'role',
    notification: 'notification',
    permission: 'permission',
    rolepermission: 'rolepermission',
    user: 'user',
    userpermission: 'userpermission',
    userrole: 'userrole'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'blogcomment' | 'blog' | 'blogcategory' | 'meta' | 'offer' | 'newsletter' | 'contact' | 'page' | 'servicecategory' | 'service' | 'entrance' | 'apiclient' | 'refreshtoken' | 'revokedtoken' | 'role' | 'notification' | 'permission' | 'rolepermission' | 'user' | 'userpermission' | 'userrole'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      blogcomment: {
        payload: Prisma.$blogcommentPayload<ExtArgs>
        fields: Prisma.blogcommentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.blogcommentFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$blogcommentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.blogcommentFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$blogcommentPayload>
          }
          findFirst: {
            args: Prisma.blogcommentFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$blogcommentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.blogcommentFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$blogcommentPayload>
          }
          findMany: {
            args: Prisma.blogcommentFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$blogcommentPayload>[]
          }
          create: {
            args: Prisma.blogcommentCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$blogcommentPayload>
          }
          createMany: {
            args: Prisma.blogcommentCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.blogcommentDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$blogcommentPayload>
          }
          update: {
            args: Prisma.blogcommentUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$blogcommentPayload>
          }
          deleteMany: {
            args: Prisma.blogcommentDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.blogcommentUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.blogcommentUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$blogcommentPayload>
          }
          aggregate: {
            args: Prisma.BlogcommentAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateBlogcomment>
          }
          groupBy: {
            args: Prisma.blogcommentGroupByArgs<ExtArgs>,
            result: $Utils.Optional<BlogcommentGroupByOutputType>[]
          }
          count: {
            args: Prisma.blogcommentCountArgs<ExtArgs>,
            result: $Utils.Optional<BlogcommentCountAggregateOutputType> | number
          }
        }
      }
      blog: {
        payload: Prisma.$blogPayload<ExtArgs>
        fields: Prisma.blogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.blogFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$blogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.blogFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$blogPayload>
          }
          findFirst: {
            args: Prisma.blogFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$blogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.blogFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$blogPayload>
          }
          findMany: {
            args: Prisma.blogFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$blogPayload>[]
          }
          create: {
            args: Prisma.blogCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$blogPayload>
          }
          createMany: {
            args: Prisma.blogCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.blogDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$blogPayload>
          }
          update: {
            args: Prisma.blogUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$blogPayload>
          }
          deleteMany: {
            args: Prisma.blogDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.blogUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.blogUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$blogPayload>
          }
          aggregate: {
            args: Prisma.BlogAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateBlog>
          }
          groupBy: {
            args: Prisma.blogGroupByArgs<ExtArgs>,
            result: $Utils.Optional<BlogGroupByOutputType>[]
          }
          count: {
            args: Prisma.blogCountArgs<ExtArgs>,
            result: $Utils.Optional<BlogCountAggregateOutputType> | number
          }
        }
      }
      blogcategory: {
        payload: Prisma.$blogcategoryPayload<ExtArgs>
        fields: Prisma.blogcategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.blogcategoryFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$blogcategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.blogcategoryFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$blogcategoryPayload>
          }
          findFirst: {
            args: Prisma.blogcategoryFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$blogcategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.blogcategoryFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$blogcategoryPayload>
          }
          findMany: {
            args: Prisma.blogcategoryFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$blogcategoryPayload>[]
          }
          create: {
            args: Prisma.blogcategoryCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$blogcategoryPayload>
          }
          createMany: {
            args: Prisma.blogcategoryCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.blogcategoryDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$blogcategoryPayload>
          }
          update: {
            args: Prisma.blogcategoryUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$blogcategoryPayload>
          }
          deleteMany: {
            args: Prisma.blogcategoryDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.blogcategoryUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.blogcategoryUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$blogcategoryPayload>
          }
          aggregate: {
            args: Prisma.BlogcategoryAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateBlogcategory>
          }
          groupBy: {
            args: Prisma.blogcategoryGroupByArgs<ExtArgs>,
            result: $Utils.Optional<BlogcategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.blogcategoryCountArgs<ExtArgs>,
            result: $Utils.Optional<BlogcategoryCountAggregateOutputType> | number
          }
        }
      }
      meta: {
        payload: Prisma.$metaPayload<ExtArgs>
        fields: Prisma.metaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.metaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$metaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.metaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$metaPayload>
          }
          findFirst: {
            args: Prisma.metaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$metaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.metaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$metaPayload>
          }
          findMany: {
            args: Prisma.metaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$metaPayload>[]
          }
          create: {
            args: Prisma.metaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$metaPayload>
          }
          createMany: {
            args: Prisma.metaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.metaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$metaPayload>
          }
          update: {
            args: Prisma.metaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$metaPayload>
          }
          deleteMany: {
            args: Prisma.metaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.metaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.metaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$metaPayload>
          }
          aggregate: {
            args: Prisma.MetaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateMeta>
          }
          groupBy: {
            args: Prisma.metaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<MetaGroupByOutputType>[]
          }
          count: {
            args: Prisma.metaCountArgs<ExtArgs>,
            result: $Utils.Optional<MetaCountAggregateOutputType> | number
          }
        }
      }
      offer: {
        payload: Prisma.$offerPayload<ExtArgs>
        fields: Prisma.offerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.offerFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$offerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.offerFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$offerPayload>
          }
          findFirst: {
            args: Prisma.offerFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$offerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.offerFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$offerPayload>
          }
          findMany: {
            args: Prisma.offerFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$offerPayload>[]
          }
          create: {
            args: Prisma.offerCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$offerPayload>
          }
          createMany: {
            args: Prisma.offerCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.offerDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$offerPayload>
          }
          update: {
            args: Prisma.offerUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$offerPayload>
          }
          deleteMany: {
            args: Prisma.offerDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.offerUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.offerUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$offerPayload>
          }
          aggregate: {
            args: Prisma.OfferAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateOffer>
          }
          groupBy: {
            args: Prisma.offerGroupByArgs<ExtArgs>,
            result: $Utils.Optional<OfferGroupByOutputType>[]
          }
          count: {
            args: Prisma.offerCountArgs<ExtArgs>,
            result: $Utils.Optional<OfferCountAggregateOutputType> | number
          }
        }
      }
      newsletter: {
        payload: Prisma.$newsletterPayload<ExtArgs>
        fields: Prisma.newsletterFieldRefs
        operations: {
          findUnique: {
            args: Prisma.newsletterFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$newsletterPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.newsletterFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$newsletterPayload>
          }
          findFirst: {
            args: Prisma.newsletterFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$newsletterPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.newsletterFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$newsletterPayload>
          }
          findMany: {
            args: Prisma.newsletterFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$newsletterPayload>[]
          }
          create: {
            args: Prisma.newsletterCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$newsletterPayload>
          }
          createMany: {
            args: Prisma.newsletterCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.newsletterDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$newsletterPayload>
          }
          update: {
            args: Prisma.newsletterUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$newsletterPayload>
          }
          deleteMany: {
            args: Prisma.newsletterDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.newsletterUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.newsletterUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$newsletterPayload>
          }
          aggregate: {
            args: Prisma.NewsletterAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateNewsletter>
          }
          groupBy: {
            args: Prisma.newsletterGroupByArgs<ExtArgs>,
            result: $Utils.Optional<NewsletterGroupByOutputType>[]
          }
          count: {
            args: Prisma.newsletterCountArgs<ExtArgs>,
            result: $Utils.Optional<NewsletterCountAggregateOutputType> | number
          }
        }
      }
      contact: {
        payload: Prisma.$contactPayload<ExtArgs>
        fields: Prisma.contactFieldRefs
        operations: {
          findUnique: {
            args: Prisma.contactFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contactPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.contactFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contactPayload>
          }
          findFirst: {
            args: Prisma.contactFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contactPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.contactFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contactPayload>
          }
          findMany: {
            args: Prisma.contactFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contactPayload>[]
          }
          create: {
            args: Prisma.contactCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contactPayload>
          }
          createMany: {
            args: Prisma.contactCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.contactDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contactPayload>
          }
          update: {
            args: Prisma.contactUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contactPayload>
          }
          deleteMany: {
            args: Prisma.contactDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.contactUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.contactUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contactPayload>
          }
          aggregate: {
            args: Prisma.ContactAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateContact>
          }
          groupBy: {
            args: Prisma.contactGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ContactGroupByOutputType>[]
          }
          count: {
            args: Prisma.contactCountArgs<ExtArgs>,
            result: $Utils.Optional<ContactCountAggregateOutputType> | number
          }
        }
      }
      page: {
        payload: Prisma.$pagePayload<ExtArgs>
        fields: Prisma.pageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.pageFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$pagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.pageFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$pagePayload>
          }
          findFirst: {
            args: Prisma.pageFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$pagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.pageFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$pagePayload>
          }
          findMany: {
            args: Prisma.pageFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$pagePayload>[]
          }
          create: {
            args: Prisma.pageCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$pagePayload>
          }
          createMany: {
            args: Prisma.pageCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.pageDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$pagePayload>
          }
          update: {
            args: Prisma.pageUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$pagePayload>
          }
          deleteMany: {
            args: Prisma.pageDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.pageUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.pageUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$pagePayload>
          }
          aggregate: {
            args: Prisma.PageAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregatePage>
          }
          groupBy: {
            args: Prisma.pageGroupByArgs<ExtArgs>,
            result: $Utils.Optional<PageGroupByOutputType>[]
          }
          count: {
            args: Prisma.pageCountArgs<ExtArgs>,
            result: $Utils.Optional<PageCountAggregateOutputType> | number
          }
        }
      }
      servicecategory: {
        payload: Prisma.$servicecategoryPayload<ExtArgs>
        fields: Prisma.servicecategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.servicecategoryFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicecategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.servicecategoryFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicecategoryPayload>
          }
          findFirst: {
            args: Prisma.servicecategoryFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicecategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.servicecategoryFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicecategoryPayload>
          }
          findMany: {
            args: Prisma.servicecategoryFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicecategoryPayload>[]
          }
          create: {
            args: Prisma.servicecategoryCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicecategoryPayload>
          }
          createMany: {
            args: Prisma.servicecategoryCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.servicecategoryDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicecategoryPayload>
          }
          update: {
            args: Prisma.servicecategoryUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicecategoryPayload>
          }
          deleteMany: {
            args: Prisma.servicecategoryDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.servicecategoryUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.servicecategoryUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicecategoryPayload>
          }
          aggregate: {
            args: Prisma.ServicecategoryAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateServicecategory>
          }
          groupBy: {
            args: Prisma.servicecategoryGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ServicecategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.servicecategoryCountArgs<ExtArgs>,
            result: $Utils.Optional<ServicecategoryCountAggregateOutputType> | number
          }
        }
      }
      service: {
        payload: Prisma.$servicePayload<ExtArgs>
        fields: Prisma.serviceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.serviceFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.serviceFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicePayload>
          }
          findFirst: {
            args: Prisma.serviceFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.serviceFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicePayload>
          }
          findMany: {
            args: Prisma.serviceFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicePayload>[]
          }
          create: {
            args: Prisma.serviceCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicePayload>
          }
          createMany: {
            args: Prisma.serviceCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.serviceDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicePayload>
          }
          update: {
            args: Prisma.serviceUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicePayload>
          }
          deleteMany: {
            args: Prisma.serviceDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.serviceUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.serviceUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicePayload>
          }
          aggregate: {
            args: Prisma.ServiceAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateService>
          }
          groupBy: {
            args: Prisma.serviceGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ServiceGroupByOutputType>[]
          }
          count: {
            args: Prisma.serviceCountArgs<ExtArgs>,
            result: $Utils.Optional<ServiceCountAggregateOutputType> | number
          }
        }
      }
      entrance: {
        payload: Prisma.$entrancePayload<ExtArgs>
        fields: Prisma.entranceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.entranceFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entrancePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.entranceFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entrancePayload>
          }
          findFirst: {
            args: Prisma.entranceFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entrancePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.entranceFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entrancePayload>
          }
          findMany: {
            args: Prisma.entranceFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entrancePayload>[]
          }
          create: {
            args: Prisma.entranceCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entrancePayload>
          }
          createMany: {
            args: Prisma.entranceCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.entranceDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entrancePayload>
          }
          update: {
            args: Prisma.entranceUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entrancePayload>
          }
          deleteMany: {
            args: Prisma.entranceDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.entranceUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.entranceUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entrancePayload>
          }
          aggregate: {
            args: Prisma.EntranceAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateEntrance>
          }
          groupBy: {
            args: Prisma.entranceGroupByArgs<ExtArgs>,
            result: $Utils.Optional<EntranceGroupByOutputType>[]
          }
          count: {
            args: Prisma.entranceCountArgs<ExtArgs>,
            result: $Utils.Optional<EntranceCountAggregateOutputType> | number
          }
        }
      }
      apiclient: {
        payload: Prisma.$apiclientPayload<ExtArgs>
        fields: Prisma.apiclientFieldRefs
        operations: {
          findUnique: {
            args: Prisma.apiclientFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$apiclientPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.apiclientFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$apiclientPayload>
          }
          findFirst: {
            args: Prisma.apiclientFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$apiclientPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.apiclientFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$apiclientPayload>
          }
          findMany: {
            args: Prisma.apiclientFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$apiclientPayload>[]
          }
          create: {
            args: Prisma.apiclientCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$apiclientPayload>
          }
          createMany: {
            args: Prisma.apiclientCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.apiclientDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$apiclientPayload>
          }
          update: {
            args: Prisma.apiclientUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$apiclientPayload>
          }
          deleteMany: {
            args: Prisma.apiclientDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.apiclientUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.apiclientUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$apiclientPayload>
          }
          aggregate: {
            args: Prisma.ApiclientAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateApiclient>
          }
          groupBy: {
            args: Prisma.apiclientGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ApiclientGroupByOutputType>[]
          }
          count: {
            args: Prisma.apiclientCountArgs<ExtArgs>,
            result: $Utils.Optional<ApiclientCountAggregateOutputType> | number
          }
        }
      }
      refreshtoken: {
        payload: Prisma.$refreshtokenPayload<ExtArgs>
        fields: Prisma.refreshtokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.refreshtokenFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$refreshtokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.refreshtokenFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$refreshtokenPayload>
          }
          findFirst: {
            args: Prisma.refreshtokenFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$refreshtokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.refreshtokenFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$refreshtokenPayload>
          }
          findMany: {
            args: Prisma.refreshtokenFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$refreshtokenPayload>[]
          }
          create: {
            args: Prisma.refreshtokenCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$refreshtokenPayload>
          }
          createMany: {
            args: Prisma.refreshtokenCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.refreshtokenDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$refreshtokenPayload>
          }
          update: {
            args: Prisma.refreshtokenUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$refreshtokenPayload>
          }
          deleteMany: {
            args: Prisma.refreshtokenDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.refreshtokenUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.refreshtokenUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$refreshtokenPayload>
          }
          aggregate: {
            args: Prisma.RefreshtokenAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateRefreshtoken>
          }
          groupBy: {
            args: Prisma.refreshtokenGroupByArgs<ExtArgs>,
            result: $Utils.Optional<RefreshtokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.refreshtokenCountArgs<ExtArgs>,
            result: $Utils.Optional<RefreshtokenCountAggregateOutputType> | number
          }
        }
      }
      revokedtoken: {
        payload: Prisma.$revokedtokenPayload<ExtArgs>
        fields: Prisma.revokedtokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.revokedtokenFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$revokedtokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.revokedtokenFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$revokedtokenPayload>
          }
          findFirst: {
            args: Prisma.revokedtokenFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$revokedtokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.revokedtokenFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$revokedtokenPayload>
          }
          findMany: {
            args: Prisma.revokedtokenFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$revokedtokenPayload>[]
          }
          create: {
            args: Prisma.revokedtokenCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$revokedtokenPayload>
          }
          createMany: {
            args: Prisma.revokedtokenCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.revokedtokenDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$revokedtokenPayload>
          }
          update: {
            args: Prisma.revokedtokenUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$revokedtokenPayload>
          }
          deleteMany: {
            args: Prisma.revokedtokenDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.revokedtokenUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.revokedtokenUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$revokedtokenPayload>
          }
          aggregate: {
            args: Prisma.RevokedtokenAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateRevokedtoken>
          }
          groupBy: {
            args: Prisma.revokedtokenGroupByArgs<ExtArgs>,
            result: $Utils.Optional<RevokedtokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.revokedtokenCountArgs<ExtArgs>,
            result: $Utils.Optional<RevokedtokenCountAggregateOutputType> | number
          }
        }
      }
      role: {
        payload: Prisma.$rolePayload<ExtArgs>
        fields: Prisma.roleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.roleFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$rolePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.roleFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$rolePayload>
          }
          findFirst: {
            args: Prisma.roleFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$rolePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.roleFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$rolePayload>
          }
          findMany: {
            args: Prisma.roleFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$rolePayload>[]
          }
          create: {
            args: Prisma.roleCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$rolePayload>
          }
          createMany: {
            args: Prisma.roleCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.roleDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$rolePayload>
          }
          update: {
            args: Prisma.roleUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$rolePayload>
          }
          deleteMany: {
            args: Prisma.roleDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.roleUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.roleUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$rolePayload>
          }
          aggregate: {
            args: Prisma.RoleAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateRole>
          }
          groupBy: {
            args: Prisma.roleGroupByArgs<ExtArgs>,
            result: $Utils.Optional<RoleGroupByOutputType>[]
          }
          count: {
            args: Prisma.roleCountArgs<ExtArgs>,
            result: $Utils.Optional<RoleCountAggregateOutputType> | number
          }
        }
      }
      notification: {
        payload: Prisma.$notificationPayload<ExtArgs>
        fields: Prisma.notificationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.notificationFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$notificationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.notificationFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          findFirst: {
            args: Prisma.notificationFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$notificationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.notificationFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          findMany: {
            args: Prisma.notificationFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>[]
          }
          create: {
            args: Prisma.notificationCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          createMany: {
            args: Prisma.notificationCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.notificationDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          update: {
            args: Prisma.notificationUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          deleteMany: {
            args: Prisma.notificationDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.notificationUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.notificationUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          aggregate: {
            args: Prisma.NotificationAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateNotification>
          }
          groupBy: {
            args: Prisma.notificationGroupByArgs<ExtArgs>,
            result: $Utils.Optional<NotificationGroupByOutputType>[]
          }
          count: {
            args: Prisma.notificationCountArgs<ExtArgs>,
            result: $Utils.Optional<NotificationCountAggregateOutputType> | number
          }
        }
      }
      permission: {
        payload: Prisma.$permissionPayload<ExtArgs>
        fields: Prisma.permissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.permissionFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$permissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.permissionFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$permissionPayload>
          }
          findFirst: {
            args: Prisma.permissionFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$permissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.permissionFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$permissionPayload>
          }
          findMany: {
            args: Prisma.permissionFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$permissionPayload>[]
          }
          create: {
            args: Prisma.permissionCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$permissionPayload>
          }
          createMany: {
            args: Prisma.permissionCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.permissionDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$permissionPayload>
          }
          update: {
            args: Prisma.permissionUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$permissionPayload>
          }
          deleteMany: {
            args: Prisma.permissionDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.permissionUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.permissionUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$permissionPayload>
          }
          aggregate: {
            args: Prisma.PermissionAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregatePermission>
          }
          groupBy: {
            args: Prisma.permissionGroupByArgs<ExtArgs>,
            result: $Utils.Optional<PermissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.permissionCountArgs<ExtArgs>,
            result: $Utils.Optional<PermissionCountAggregateOutputType> | number
          }
        }
      }
      rolepermission: {
        payload: Prisma.$rolepermissionPayload<ExtArgs>
        fields: Prisma.rolepermissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.rolepermissionFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$rolepermissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.rolepermissionFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$rolepermissionPayload>
          }
          findFirst: {
            args: Prisma.rolepermissionFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$rolepermissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.rolepermissionFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$rolepermissionPayload>
          }
          findMany: {
            args: Prisma.rolepermissionFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$rolepermissionPayload>[]
          }
          create: {
            args: Prisma.rolepermissionCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$rolepermissionPayload>
          }
          createMany: {
            args: Prisma.rolepermissionCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.rolepermissionDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$rolepermissionPayload>
          }
          update: {
            args: Prisma.rolepermissionUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$rolepermissionPayload>
          }
          deleteMany: {
            args: Prisma.rolepermissionDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.rolepermissionUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.rolepermissionUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$rolepermissionPayload>
          }
          aggregate: {
            args: Prisma.RolepermissionAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateRolepermission>
          }
          groupBy: {
            args: Prisma.rolepermissionGroupByArgs<ExtArgs>,
            result: $Utils.Optional<RolepermissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.rolepermissionCountArgs<ExtArgs>,
            result: $Utils.Optional<RolepermissionCountAggregateOutputType> | number
          }
        }
      }
      user: {
        payload: Prisma.$userPayload<ExtArgs>
        fields: Prisma.userFieldRefs
        operations: {
          findUnique: {
            args: Prisma.userFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.userFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          findFirst: {
            args: Prisma.userFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.userFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          findMany: {
            args: Prisma.userFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userPayload>[]
          }
          create: {
            args: Prisma.userCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          createMany: {
            args: Prisma.userCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.userDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          update: {
            args: Prisma.userUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          deleteMany: {
            args: Prisma.userDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.userUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.userUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.userGroupByArgs<ExtArgs>,
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.userCountArgs<ExtArgs>,
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      userpermission: {
        payload: Prisma.$userpermissionPayload<ExtArgs>
        fields: Prisma.userpermissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.userpermissionFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userpermissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.userpermissionFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userpermissionPayload>
          }
          findFirst: {
            args: Prisma.userpermissionFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userpermissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.userpermissionFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userpermissionPayload>
          }
          findMany: {
            args: Prisma.userpermissionFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userpermissionPayload>[]
          }
          create: {
            args: Prisma.userpermissionCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userpermissionPayload>
          }
          createMany: {
            args: Prisma.userpermissionCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.userpermissionDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userpermissionPayload>
          }
          update: {
            args: Prisma.userpermissionUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userpermissionPayload>
          }
          deleteMany: {
            args: Prisma.userpermissionDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.userpermissionUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.userpermissionUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userpermissionPayload>
          }
          aggregate: {
            args: Prisma.UserpermissionAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateUserpermission>
          }
          groupBy: {
            args: Prisma.userpermissionGroupByArgs<ExtArgs>,
            result: $Utils.Optional<UserpermissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.userpermissionCountArgs<ExtArgs>,
            result: $Utils.Optional<UserpermissionCountAggregateOutputType> | number
          }
        }
      }
      userrole: {
        payload: Prisma.$userrolePayload<ExtArgs>
        fields: Prisma.userroleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.userroleFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userrolePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.userroleFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userrolePayload>
          }
          findFirst: {
            args: Prisma.userroleFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userrolePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.userroleFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userrolePayload>
          }
          findMany: {
            args: Prisma.userroleFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userrolePayload>[]
          }
          create: {
            args: Prisma.userroleCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userrolePayload>
          }
          createMany: {
            args: Prisma.userroleCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.userroleDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userrolePayload>
          }
          update: {
            args: Prisma.userroleUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userrolePayload>
          }
          deleteMany: {
            args: Prisma.userroleDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.userroleUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.userroleUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userrolePayload>
          }
          aggregate: {
            args: Prisma.UserroleAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateUserrole>
          }
          groupBy: {
            args: Prisma.userroleGroupByArgs<ExtArgs>,
            result: $Utils.Optional<UserroleGroupByOutputType>[]
          }
          count: {
            args: Prisma.userroleCountArgs<ExtArgs>,
            result: $Utils.Optional<UserroleCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type BlogCountOutputType
   */

  export type BlogCountOutputType = {
    blogcomments: number
  }

  export type BlogCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    blogcomments?: boolean | BlogCountOutputTypeCountBlogcommentsArgs
  }

  // Custom InputTypes

  /**
   * BlogCountOutputType without action
   */
  export type BlogCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogCountOutputType
     */
    select?: BlogCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * BlogCountOutputType without action
   */
  export type BlogCountOutputTypeCountBlogcommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: blogcommentWhereInput
  }



  /**
   * Count Type BlogcategoryCountOutputType
   */

  export type BlogcategoryCountOutputType = {
    blogs: number
  }

  export type BlogcategoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    blogs?: boolean | BlogcategoryCountOutputTypeCountBlogsArgs
  }

  // Custom InputTypes

  /**
   * BlogcategoryCountOutputType without action
   */
  export type BlogcategoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogcategoryCountOutputType
     */
    select?: BlogcategoryCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * BlogcategoryCountOutputType without action
   */
  export type BlogcategoryCountOutputTypeCountBlogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: blogWhereInput
  }



  /**
   * Count Type MetaCountOutputType
   */

  export type MetaCountOutputType = {
    pages: number
    services: number
    servicecategory: number
    blogcategory: number
  }

  export type MetaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pages?: boolean | MetaCountOutputTypeCountPagesArgs
    services?: boolean | MetaCountOutputTypeCountServicesArgs
    servicecategory?: boolean | MetaCountOutputTypeCountServicecategoryArgs
    blogcategory?: boolean | MetaCountOutputTypeCountBlogcategoryArgs
  }

  // Custom InputTypes

  /**
   * MetaCountOutputType without action
   */
  export type MetaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetaCountOutputType
     */
    select?: MetaCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * MetaCountOutputType without action
   */
  export type MetaCountOutputTypeCountPagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pageWhereInput
  }


  /**
   * MetaCountOutputType without action
   */
  export type MetaCountOutputTypeCountServicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: serviceWhereInput
  }


  /**
   * MetaCountOutputType without action
   */
  export type MetaCountOutputTypeCountServicecategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: servicecategoryWhereInput
  }


  /**
   * MetaCountOutputType without action
   */
  export type MetaCountOutputTypeCountBlogcategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: blogcategoryWhereInput
  }



  /**
   * Count Type ServicecategoryCountOutputType
   */

  export type ServicecategoryCountOutputType = {
    services: number
    contacts: number
  }

  export type ServicecategoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    services?: boolean | ServicecategoryCountOutputTypeCountServicesArgs
    contacts?: boolean | ServicecategoryCountOutputTypeCountContactsArgs
  }

  // Custom InputTypes

  /**
   * ServicecategoryCountOutputType without action
   */
  export type ServicecategoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServicecategoryCountOutputType
     */
    select?: ServicecategoryCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * ServicecategoryCountOutputType without action
   */
  export type ServicecategoryCountOutputTypeCountServicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: serviceWhereInput
  }


  /**
   * ServicecategoryCountOutputType without action
   */
  export type ServicecategoryCountOutputTypeCountContactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: contactWhereInput
  }



  /**
   * Count Type ServiceCountOutputType
   */

  export type ServiceCountOutputType = {
    pages: number
    contacts: number
    offers: number
  }

  export type ServiceCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pages?: boolean | ServiceCountOutputTypeCountPagesArgs
    contacts?: boolean | ServiceCountOutputTypeCountContactsArgs
    offers?: boolean | ServiceCountOutputTypeCountOffersArgs
  }

  // Custom InputTypes

  /**
   * ServiceCountOutputType without action
   */
  export type ServiceCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceCountOutputType
     */
    select?: ServiceCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * ServiceCountOutputType without action
   */
  export type ServiceCountOutputTypeCountPagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pageWhereInput
  }


  /**
   * ServiceCountOutputType without action
   */
  export type ServiceCountOutputTypeCountContactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: contactWhereInput
  }


  /**
   * ServiceCountOutputType without action
   */
  export type ServiceCountOutputTypeCountOffersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: offerWhereInput
  }



  /**
   * Count Type RoleCountOutputType
   */

  export type RoleCountOutputType = {
    rolepermissions: number
    userroles: number
  }

  export type RoleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rolepermissions?: boolean | RoleCountOutputTypeCountRolepermissionsArgs
    userroles?: boolean | RoleCountOutputTypeCountUserrolesArgs
  }

  // Custom InputTypes

  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleCountOutputType
     */
    select?: RoleCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeCountRolepermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: rolepermissionWhereInput
  }


  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeCountUserrolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userroleWhereInput
  }



  /**
   * Count Type PermissionCountOutputType
   */

  export type PermissionCountOutputType = {
    rolepermissions: number
    userpermissions: number
  }

  export type PermissionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rolepermissions?: boolean | PermissionCountOutputTypeCountRolepermissionsArgs
    userpermissions?: boolean | PermissionCountOutputTypeCountUserpermissionsArgs
  }

  // Custom InputTypes

  /**
   * PermissionCountOutputType without action
   */
  export type PermissionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermissionCountOutputType
     */
    select?: PermissionCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * PermissionCountOutputType without action
   */
  export type PermissionCountOutputTypeCountRolepermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: rolepermissionWhereInput
  }


  /**
   * PermissionCountOutputType without action
   */
  export type PermissionCountOutputTypeCountUserpermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userpermissionWhereInput
  }



  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    notificationuser: number
    createdapiclients: number
    updatedapiclients: number
    createdpermissions: number
    updatedpermissions: number
    refreshtokens: number
    createdroles: number
    updatedroles: number
    createdrolepermissions: number
    updatedrolepermissions: number
    createdusers: number
    updatedusers: number
    createduserpermissions: number
    updateduserpermissions: number
    userpermissions: number
    createduserroles: number
    updateduserroles: number
    userroles: number
    useroffers: number
    usercontacts: number
    userpages: number
    userservicecategory: number
    userservice: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    notificationuser?: boolean | UserCountOutputTypeCountNotificationuserArgs
    createdapiclients?: boolean | UserCountOutputTypeCountCreatedapiclientsArgs
    updatedapiclients?: boolean | UserCountOutputTypeCountUpdatedapiclientsArgs
    createdpermissions?: boolean | UserCountOutputTypeCountCreatedpermissionsArgs
    updatedpermissions?: boolean | UserCountOutputTypeCountUpdatedpermissionsArgs
    refreshtokens?: boolean | UserCountOutputTypeCountRefreshtokensArgs
    createdroles?: boolean | UserCountOutputTypeCountCreatedrolesArgs
    updatedroles?: boolean | UserCountOutputTypeCountUpdatedrolesArgs
    createdrolepermissions?: boolean | UserCountOutputTypeCountCreatedrolepermissionsArgs
    updatedrolepermissions?: boolean | UserCountOutputTypeCountUpdatedrolepermissionsArgs
    createdusers?: boolean | UserCountOutputTypeCountCreatedusersArgs
    updatedusers?: boolean | UserCountOutputTypeCountUpdatedusersArgs
    createduserpermissions?: boolean | UserCountOutputTypeCountCreateduserpermissionsArgs
    updateduserpermissions?: boolean | UserCountOutputTypeCountUpdateduserpermissionsArgs
    userpermissions?: boolean | UserCountOutputTypeCountUserpermissionsArgs
    createduserroles?: boolean | UserCountOutputTypeCountCreateduserrolesArgs
    updateduserroles?: boolean | UserCountOutputTypeCountUpdateduserrolesArgs
    userroles?: boolean | UserCountOutputTypeCountUserrolesArgs
    useroffers?: boolean | UserCountOutputTypeCountUseroffersArgs
    usercontacts?: boolean | UserCountOutputTypeCountUsercontactsArgs
    userpages?: boolean | UserCountOutputTypeCountUserpagesArgs
    userservicecategory?: boolean | UserCountOutputTypeCountUserservicecategoryArgs
    userservice?: boolean | UserCountOutputTypeCountUserserviceArgs
  }

  // Custom InputTypes

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountNotificationuserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificationWhereInput
  }


  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedapiclientsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: apiclientWhereInput
  }


  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedapiclientsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: apiclientWhereInput
  }


  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedpermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: permissionWhereInput
  }


  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedpermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: permissionWhereInput
  }


  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRefreshtokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: refreshtokenWhereInput
  }


  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedrolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: roleWhereInput
  }


  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedrolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: roleWhereInput
  }


  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedrolepermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: rolepermissionWhereInput
  }


  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedrolepermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: rolepermissionWhereInput
  }


  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedusersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userWhereInput
  }


  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedusersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userWhereInput
  }


  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreateduserpermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userpermissionWhereInput
  }


  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdateduserpermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userpermissionWhereInput
  }


  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUserpermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userpermissionWhereInput
  }


  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreateduserrolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userroleWhereInput
  }


  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdateduserrolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userroleWhereInput
  }


  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUserrolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userroleWhereInput
  }


  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUseroffersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: offerWhereInput
  }


  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUsercontactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: contactWhereInput
  }


  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUserpagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pageWhereInput
  }


  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUserservicecategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: servicecategoryWhereInput
  }


  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUserserviceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: serviceWhereInput
  }



  /**
   * Models
   */

  /**
   * Model blogcomment
   */

  export type AggregateBlogcomment = {
    _count: BlogcommentCountAggregateOutputType | null
    _avg: BlogcommentAvgAggregateOutputType | null
    _sum: BlogcommentSumAggregateOutputType | null
    _min: BlogcommentMinAggregateOutputType | null
    _max: BlogcommentMaxAggregateOutputType | null
  }

  export type BlogcommentAvgAggregateOutputType = {
    id: number | null
    blogid: number | null
    createdby: number | null
    updatedby: number | null
    isactive: number | null
  }

  export type BlogcommentSumAggregateOutputType = {
    id: number | null
    blogid: number | null
    createdby: number | null
    updatedby: number | null
    isactive: number | null
  }

  export type BlogcommentMinAggregateOutputType = {
    id: number | null
    blogid: number | null
    name: string | null
    email: string | null
    comment: string | null
    createdat: Date | null
    createdby: number | null
    updatedat: Date | null
    updatedby: number | null
    isactive: number | null
  }

  export type BlogcommentMaxAggregateOutputType = {
    id: number | null
    blogid: number | null
    name: string | null
    email: string | null
    comment: string | null
    createdat: Date | null
    createdby: number | null
    updatedat: Date | null
    updatedby: number | null
    isactive: number | null
  }

  export type BlogcommentCountAggregateOutputType = {
    id: number
    blogid: number
    name: number
    email: number
    comment: number
    createdat: number
    createdby: number
    updatedat: number
    updatedby: number
    isactive: number
    _all: number
  }


  export type BlogcommentAvgAggregateInputType = {
    id?: true
    blogid?: true
    createdby?: true
    updatedby?: true
    isactive?: true
  }

  export type BlogcommentSumAggregateInputType = {
    id?: true
    blogid?: true
    createdby?: true
    updatedby?: true
    isactive?: true
  }

  export type BlogcommentMinAggregateInputType = {
    id?: true
    blogid?: true
    name?: true
    email?: true
    comment?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isactive?: true
  }

  export type BlogcommentMaxAggregateInputType = {
    id?: true
    blogid?: true
    name?: true
    email?: true
    comment?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isactive?: true
  }

  export type BlogcommentCountAggregateInputType = {
    id?: true
    blogid?: true
    name?: true
    email?: true
    comment?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isactive?: true
    _all?: true
  }

  export type BlogcommentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which blogcomment to aggregate.
     */
    where?: blogcommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of blogcomments to fetch.
     */
    orderBy?: blogcommentOrderByWithRelationInput | blogcommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: blogcommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` blogcomments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` blogcomments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned blogcomments
    **/
    _count?: true | BlogcommentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BlogcommentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BlogcommentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BlogcommentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BlogcommentMaxAggregateInputType
  }

  export type GetBlogcommentAggregateType<T extends BlogcommentAggregateArgs> = {
        [P in keyof T & keyof AggregateBlogcomment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBlogcomment[P]>
      : GetScalarType<T[P], AggregateBlogcomment[P]>
  }




  export type blogcommentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: blogcommentWhereInput
    orderBy?: blogcommentOrderByWithAggregationInput | blogcommentOrderByWithAggregationInput[]
    by: BlogcommentScalarFieldEnum[] | BlogcommentScalarFieldEnum
    having?: blogcommentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BlogcommentCountAggregateInputType | true
    _avg?: BlogcommentAvgAggregateInputType
    _sum?: BlogcommentSumAggregateInputType
    _min?: BlogcommentMinAggregateInputType
    _max?: BlogcommentMaxAggregateInputType
  }

  export type BlogcommentGroupByOutputType = {
    id: number
    blogid: number
    name: string
    email: string
    comment: string
    createdat: Date
    createdby: number
    updatedat: Date | null
    updatedby: number | null
    isactive: number
    _count: BlogcommentCountAggregateOutputType | null
    _avg: BlogcommentAvgAggregateOutputType | null
    _sum: BlogcommentSumAggregateOutputType | null
    _min: BlogcommentMinAggregateOutputType | null
    _max: BlogcommentMaxAggregateOutputType | null
  }

  type GetBlogcommentGroupByPayload<T extends blogcommentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BlogcommentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BlogcommentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BlogcommentGroupByOutputType[P]>
            : GetScalarType<T[P], BlogcommentGroupByOutputType[P]>
        }
      >
    >


  export type blogcommentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    blogid?: boolean
    name?: boolean
    email?: boolean
    comment?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedat?: boolean
    updatedby?: boolean
    isactive?: boolean
    blog?: boolean | blogDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["blogcomment"]>

  export type blogcommentSelectScalar = {
    id?: boolean
    blogid?: boolean
    name?: boolean
    email?: boolean
    comment?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedat?: boolean
    updatedby?: boolean
    isactive?: boolean
  }

  export type blogcommentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    blog?: boolean | blogDefaultArgs<ExtArgs>
  }


  export type $blogcommentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "blogcomment"
    objects: {
      blog: Prisma.$blogPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      blogid: number
      name: string
      email: string
      comment: string
      createdat: Date
      createdby: number
      updatedat: Date | null
      updatedby: number | null
      isactive: number
    }, ExtArgs["result"]["blogcomment"]>
    composites: {}
  }


  type blogcommentGetPayload<S extends boolean | null | undefined | blogcommentDefaultArgs> = $Result.GetResult<Prisma.$blogcommentPayload, S>

  type blogcommentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<blogcommentFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: BlogcommentCountAggregateInputType | true
    }

  export interface blogcommentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['blogcomment'], meta: { name: 'blogcomment' } }
    /**
     * Find zero or one Blogcomment that matches the filter.
     * @param {blogcommentFindUniqueArgs} args - Arguments to find a Blogcomment
     * @example
     * // Get one Blogcomment
     * const blogcomment = await prisma.blogcomment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends blogcommentFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, blogcommentFindUniqueArgs<ExtArgs>>
    ): Prisma__blogcommentClient<$Result.GetResult<Prisma.$blogcommentPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Blogcomment that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {blogcommentFindUniqueOrThrowArgs} args - Arguments to find a Blogcomment
     * @example
     * // Get one Blogcomment
     * const blogcomment = await prisma.blogcomment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends blogcommentFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, blogcommentFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__blogcommentClient<$Result.GetResult<Prisma.$blogcommentPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Blogcomment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {blogcommentFindFirstArgs} args - Arguments to find a Blogcomment
     * @example
     * // Get one Blogcomment
     * const blogcomment = await prisma.blogcomment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends blogcommentFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, blogcommentFindFirstArgs<ExtArgs>>
    ): Prisma__blogcommentClient<$Result.GetResult<Prisma.$blogcommentPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Blogcomment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {blogcommentFindFirstOrThrowArgs} args - Arguments to find a Blogcomment
     * @example
     * // Get one Blogcomment
     * const blogcomment = await prisma.blogcomment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends blogcommentFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, blogcommentFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__blogcommentClient<$Result.GetResult<Prisma.$blogcommentPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Blogcomments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {blogcommentFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Blogcomments
     * const blogcomments = await prisma.blogcomment.findMany()
     * 
     * // Get first 10 Blogcomments
     * const blogcomments = await prisma.blogcomment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const blogcommentWithIdOnly = await prisma.blogcomment.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends blogcommentFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, blogcommentFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$blogcommentPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Blogcomment.
     * @param {blogcommentCreateArgs} args - Arguments to create a Blogcomment.
     * @example
     * // Create one Blogcomment
     * const Blogcomment = await prisma.blogcomment.create({
     *   data: {
     *     // ... data to create a Blogcomment
     *   }
     * })
     * 
    **/
    create<T extends blogcommentCreateArgs<ExtArgs>>(
      args: SelectSubset<T, blogcommentCreateArgs<ExtArgs>>
    ): Prisma__blogcommentClient<$Result.GetResult<Prisma.$blogcommentPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Blogcomments.
     *     @param {blogcommentCreateManyArgs} args - Arguments to create many Blogcomments.
     *     @example
     *     // Create many Blogcomments
     *     const blogcomment = await prisma.blogcomment.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends blogcommentCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, blogcommentCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Blogcomment.
     * @param {blogcommentDeleteArgs} args - Arguments to delete one Blogcomment.
     * @example
     * // Delete one Blogcomment
     * const Blogcomment = await prisma.blogcomment.delete({
     *   where: {
     *     // ... filter to delete one Blogcomment
     *   }
     * })
     * 
    **/
    delete<T extends blogcommentDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, blogcommentDeleteArgs<ExtArgs>>
    ): Prisma__blogcommentClient<$Result.GetResult<Prisma.$blogcommentPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Blogcomment.
     * @param {blogcommentUpdateArgs} args - Arguments to update one Blogcomment.
     * @example
     * // Update one Blogcomment
     * const blogcomment = await prisma.blogcomment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends blogcommentUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, blogcommentUpdateArgs<ExtArgs>>
    ): Prisma__blogcommentClient<$Result.GetResult<Prisma.$blogcommentPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Blogcomments.
     * @param {blogcommentDeleteManyArgs} args - Arguments to filter Blogcomments to delete.
     * @example
     * // Delete a few Blogcomments
     * const { count } = await prisma.blogcomment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends blogcommentDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, blogcommentDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Blogcomments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {blogcommentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Blogcomments
     * const blogcomment = await prisma.blogcomment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends blogcommentUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, blogcommentUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Blogcomment.
     * @param {blogcommentUpsertArgs} args - Arguments to update or create a Blogcomment.
     * @example
     * // Update or create a Blogcomment
     * const blogcomment = await prisma.blogcomment.upsert({
     *   create: {
     *     // ... data to create a Blogcomment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Blogcomment we want to update
     *   }
     * })
    **/
    upsert<T extends blogcommentUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, blogcommentUpsertArgs<ExtArgs>>
    ): Prisma__blogcommentClient<$Result.GetResult<Prisma.$blogcommentPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Blogcomments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {blogcommentCountArgs} args - Arguments to filter Blogcomments to count.
     * @example
     * // Count the number of Blogcomments
     * const count = await prisma.blogcomment.count({
     *   where: {
     *     // ... the filter for the Blogcomments we want to count
     *   }
     * })
    **/
    count<T extends blogcommentCountArgs>(
      args?: Subset<T, blogcommentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BlogcommentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Blogcomment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogcommentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BlogcommentAggregateArgs>(args: Subset<T, BlogcommentAggregateArgs>): Prisma.PrismaPromise<GetBlogcommentAggregateType<T>>

    /**
     * Group by Blogcomment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {blogcommentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends blogcommentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: blogcommentGroupByArgs['orderBy'] }
        : { orderBy?: blogcommentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, blogcommentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBlogcommentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the blogcomment model
   */
  readonly fields: blogcommentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for blogcomment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__blogcommentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    blog<T extends blogDefaultArgs<ExtArgs> = {}>(args?: Subset<T, blogDefaultArgs<ExtArgs>>): Prisma__blogClient<$Result.GetResult<Prisma.$blogPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the blogcomment model
   */ 
  interface blogcommentFieldRefs {
    readonly id: FieldRef<"blogcomment", 'Int'>
    readonly blogid: FieldRef<"blogcomment", 'Int'>
    readonly name: FieldRef<"blogcomment", 'String'>
    readonly email: FieldRef<"blogcomment", 'String'>
    readonly comment: FieldRef<"blogcomment", 'String'>
    readonly createdat: FieldRef<"blogcomment", 'DateTime'>
    readonly createdby: FieldRef<"blogcomment", 'Int'>
    readonly updatedat: FieldRef<"blogcomment", 'DateTime'>
    readonly updatedby: FieldRef<"blogcomment", 'Int'>
    readonly isactive: FieldRef<"blogcomment", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * blogcomment findUnique
   */
  export type blogcommentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blogcomment
     */
    select?: blogcommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogcommentInclude<ExtArgs> | null
    /**
     * Filter, which blogcomment to fetch.
     */
    where: blogcommentWhereUniqueInput
  }


  /**
   * blogcomment findUniqueOrThrow
   */
  export type blogcommentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blogcomment
     */
    select?: blogcommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogcommentInclude<ExtArgs> | null
    /**
     * Filter, which blogcomment to fetch.
     */
    where: blogcommentWhereUniqueInput
  }


  /**
   * blogcomment findFirst
   */
  export type blogcommentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blogcomment
     */
    select?: blogcommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogcommentInclude<ExtArgs> | null
    /**
     * Filter, which blogcomment to fetch.
     */
    where?: blogcommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of blogcomments to fetch.
     */
    orderBy?: blogcommentOrderByWithRelationInput | blogcommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for blogcomments.
     */
    cursor?: blogcommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` blogcomments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` blogcomments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of blogcomments.
     */
    distinct?: BlogcommentScalarFieldEnum | BlogcommentScalarFieldEnum[]
  }


  /**
   * blogcomment findFirstOrThrow
   */
  export type blogcommentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blogcomment
     */
    select?: blogcommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogcommentInclude<ExtArgs> | null
    /**
     * Filter, which blogcomment to fetch.
     */
    where?: blogcommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of blogcomments to fetch.
     */
    orderBy?: blogcommentOrderByWithRelationInput | blogcommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for blogcomments.
     */
    cursor?: blogcommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` blogcomments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` blogcomments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of blogcomments.
     */
    distinct?: BlogcommentScalarFieldEnum | BlogcommentScalarFieldEnum[]
  }


  /**
   * blogcomment findMany
   */
  export type blogcommentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blogcomment
     */
    select?: blogcommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogcommentInclude<ExtArgs> | null
    /**
     * Filter, which blogcomments to fetch.
     */
    where?: blogcommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of blogcomments to fetch.
     */
    orderBy?: blogcommentOrderByWithRelationInput | blogcommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing blogcomments.
     */
    cursor?: blogcommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` blogcomments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` blogcomments.
     */
    skip?: number
    distinct?: BlogcommentScalarFieldEnum | BlogcommentScalarFieldEnum[]
  }


  /**
   * blogcomment create
   */
  export type blogcommentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blogcomment
     */
    select?: blogcommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogcommentInclude<ExtArgs> | null
    /**
     * The data needed to create a blogcomment.
     */
    data: XOR<blogcommentCreateInput, blogcommentUncheckedCreateInput>
  }


  /**
   * blogcomment createMany
   */
  export type blogcommentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many blogcomments.
     */
    data: blogcommentCreateManyInput | blogcommentCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * blogcomment update
   */
  export type blogcommentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blogcomment
     */
    select?: blogcommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogcommentInclude<ExtArgs> | null
    /**
     * The data needed to update a blogcomment.
     */
    data: XOR<blogcommentUpdateInput, blogcommentUncheckedUpdateInput>
    /**
     * Choose, which blogcomment to update.
     */
    where: blogcommentWhereUniqueInput
  }


  /**
   * blogcomment updateMany
   */
  export type blogcommentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update blogcomments.
     */
    data: XOR<blogcommentUpdateManyMutationInput, blogcommentUncheckedUpdateManyInput>
    /**
     * Filter which blogcomments to update
     */
    where?: blogcommentWhereInput
  }


  /**
   * blogcomment upsert
   */
  export type blogcommentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blogcomment
     */
    select?: blogcommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogcommentInclude<ExtArgs> | null
    /**
     * The filter to search for the blogcomment to update in case it exists.
     */
    where: blogcommentWhereUniqueInput
    /**
     * In case the blogcomment found by the `where` argument doesn't exist, create a new blogcomment with this data.
     */
    create: XOR<blogcommentCreateInput, blogcommentUncheckedCreateInput>
    /**
     * In case the blogcomment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<blogcommentUpdateInput, blogcommentUncheckedUpdateInput>
  }


  /**
   * blogcomment delete
   */
  export type blogcommentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blogcomment
     */
    select?: blogcommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogcommentInclude<ExtArgs> | null
    /**
     * Filter which blogcomment to delete.
     */
    where: blogcommentWhereUniqueInput
  }


  /**
   * blogcomment deleteMany
   */
  export type blogcommentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which blogcomments to delete
     */
    where?: blogcommentWhereInput
  }


  /**
   * blogcomment without action
   */
  export type blogcommentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blogcomment
     */
    select?: blogcommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogcommentInclude<ExtArgs> | null
  }



  /**
   * Model blog
   */

  export type AggregateBlog = {
    _count: BlogCountAggregateOutputType | null
    _avg: BlogAvgAggregateOutputType | null
    _sum: BlogSumAggregateOutputType | null
    _min: BlogMinAggregateOutputType | null
    _max: BlogMaxAggregateOutputType | null
  }

  export type BlogAvgAggregateOutputType = {
    id: number | null
    blogcategoryid: number | null
    metaid: number | null
    createdby: number | null
    updatedby: number | null
    isactive: number | null
  }

  export type BlogSumAggregateOutputType = {
    id: number | null
    blogcategoryid: number | null
    metaid: number | null
    createdby: number | null
    updatedby: number | null
    isactive: number | null
  }

  export type BlogMinAggregateOutputType = {
    id: number | null
    title: string | null
    content: string | null
    slug: string | null
    featuredimage: string | null
    blogcategoryid: number | null
    metaid: number | null
    createdat: Date | null
    createdby: number | null
    updatedat: Date | null
    updatedby: number | null
    isactive: number | null
  }

  export type BlogMaxAggregateOutputType = {
    id: number | null
    title: string | null
    content: string | null
    slug: string | null
    featuredimage: string | null
    blogcategoryid: number | null
    metaid: number | null
    createdat: Date | null
    createdby: number | null
    updatedat: Date | null
    updatedby: number | null
    isactive: number | null
  }

  export type BlogCountAggregateOutputType = {
    id: number
    title: number
    content: number
    slug: number
    featuredimage: number
    blogcategoryid: number
    metaid: number
    createdat: number
    createdby: number
    updatedat: number
    updatedby: number
    isactive: number
    _all: number
  }


  export type BlogAvgAggregateInputType = {
    id?: true
    blogcategoryid?: true
    metaid?: true
    createdby?: true
    updatedby?: true
    isactive?: true
  }

  export type BlogSumAggregateInputType = {
    id?: true
    blogcategoryid?: true
    metaid?: true
    createdby?: true
    updatedby?: true
    isactive?: true
  }

  export type BlogMinAggregateInputType = {
    id?: true
    title?: true
    content?: true
    slug?: true
    featuredimage?: true
    blogcategoryid?: true
    metaid?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isactive?: true
  }

  export type BlogMaxAggregateInputType = {
    id?: true
    title?: true
    content?: true
    slug?: true
    featuredimage?: true
    blogcategoryid?: true
    metaid?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isactive?: true
  }

  export type BlogCountAggregateInputType = {
    id?: true
    title?: true
    content?: true
    slug?: true
    featuredimage?: true
    blogcategoryid?: true
    metaid?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isactive?: true
    _all?: true
  }

  export type BlogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which blog to aggregate.
     */
    where?: blogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of blogs to fetch.
     */
    orderBy?: blogOrderByWithRelationInput | blogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: blogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` blogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` blogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned blogs
    **/
    _count?: true | BlogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BlogAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BlogSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BlogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BlogMaxAggregateInputType
  }

  export type GetBlogAggregateType<T extends BlogAggregateArgs> = {
        [P in keyof T & keyof AggregateBlog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBlog[P]>
      : GetScalarType<T[P], AggregateBlog[P]>
  }




  export type blogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: blogWhereInput
    orderBy?: blogOrderByWithAggregationInput | blogOrderByWithAggregationInput[]
    by: BlogScalarFieldEnum[] | BlogScalarFieldEnum
    having?: blogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BlogCountAggregateInputType | true
    _avg?: BlogAvgAggregateInputType
    _sum?: BlogSumAggregateInputType
    _min?: BlogMinAggregateInputType
    _max?: BlogMaxAggregateInputType
  }

  export type BlogGroupByOutputType = {
    id: number
    title: string
    content: string
    slug: string
    featuredimage: string
    blogcategoryid: number
    metaid: number
    createdat: Date
    createdby: number
    updatedat: Date | null
    updatedby: number | null
    isactive: number
    _count: BlogCountAggregateOutputType | null
    _avg: BlogAvgAggregateOutputType | null
    _sum: BlogSumAggregateOutputType | null
    _min: BlogMinAggregateOutputType | null
    _max: BlogMaxAggregateOutputType | null
  }

  type GetBlogGroupByPayload<T extends blogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BlogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BlogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BlogGroupByOutputType[P]>
            : GetScalarType<T[P], BlogGroupByOutputType[P]>
        }
      >
    >


  export type blogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    content?: boolean
    slug?: boolean
    featuredimage?: boolean
    blogcategoryid?: boolean
    metaid?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedat?: boolean
    updatedby?: boolean
    isactive?: boolean
    blogcategory?: boolean | blogcategoryDefaultArgs<ExtArgs>
    blogcomments?: boolean | blog$blogcommentsArgs<ExtArgs>
    _count?: boolean | BlogCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["blog"]>

  export type blogSelectScalar = {
    id?: boolean
    title?: boolean
    content?: boolean
    slug?: boolean
    featuredimage?: boolean
    blogcategoryid?: boolean
    metaid?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedat?: boolean
    updatedby?: boolean
    isactive?: boolean
  }

  export type blogInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    blogcategory?: boolean | blogcategoryDefaultArgs<ExtArgs>
    blogcomments?: boolean | blog$blogcommentsArgs<ExtArgs>
    _count?: boolean | BlogCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $blogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "blog"
    objects: {
      blogcategory: Prisma.$blogcategoryPayload<ExtArgs>
      blogcomments: Prisma.$blogcommentPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      title: string
      content: string
      slug: string
      featuredimage: string
      blogcategoryid: number
      metaid: number
      createdat: Date
      createdby: number
      updatedat: Date | null
      updatedby: number | null
      isactive: number
    }, ExtArgs["result"]["blog"]>
    composites: {}
  }


  type blogGetPayload<S extends boolean | null | undefined | blogDefaultArgs> = $Result.GetResult<Prisma.$blogPayload, S>

  type blogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<blogFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: BlogCountAggregateInputType | true
    }

  export interface blogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['blog'], meta: { name: 'blog' } }
    /**
     * Find zero or one Blog that matches the filter.
     * @param {blogFindUniqueArgs} args - Arguments to find a Blog
     * @example
     * // Get one Blog
     * const blog = await prisma.blog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends blogFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, blogFindUniqueArgs<ExtArgs>>
    ): Prisma__blogClient<$Result.GetResult<Prisma.$blogPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Blog that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {blogFindUniqueOrThrowArgs} args - Arguments to find a Blog
     * @example
     * // Get one Blog
     * const blog = await prisma.blog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends blogFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, blogFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__blogClient<$Result.GetResult<Prisma.$blogPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Blog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {blogFindFirstArgs} args - Arguments to find a Blog
     * @example
     * // Get one Blog
     * const blog = await prisma.blog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends blogFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, blogFindFirstArgs<ExtArgs>>
    ): Prisma__blogClient<$Result.GetResult<Prisma.$blogPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Blog that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {blogFindFirstOrThrowArgs} args - Arguments to find a Blog
     * @example
     * // Get one Blog
     * const blog = await prisma.blog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends blogFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, blogFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__blogClient<$Result.GetResult<Prisma.$blogPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Blogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {blogFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Blogs
     * const blogs = await prisma.blog.findMany()
     * 
     * // Get first 10 Blogs
     * const blogs = await prisma.blog.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const blogWithIdOnly = await prisma.blog.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends blogFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, blogFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$blogPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Blog.
     * @param {blogCreateArgs} args - Arguments to create a Blog.
     * @example
     * // Create one Blog
     * const Blog = await prisma.blog.create({
     *   data: {
     *     // ... data to create a Blog
     *   }
     * })
     * 
    **/
    create<T extends blogCreateArgs<ExtArgs>>(
      args: SelectSubset<T, blogCreateArgs<ExtArgs>>
    ): Prisma__blogClient<$Result.GetResult<Prisma.$blogPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Blogs.
     *     @param {blogCreateManyArgs} args - Arguments to create many Blogs.
     *     @example
     *     // Create many Blogs
     *     const blog = await prisma.blog.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends blogCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, blogCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Blog.
     * @param {blogDeleteArgs} args - Arguments to delete one Blog.
     * @example
     * // Delete one Blog
     * const Blog = await prisma.blog.delete({
     *   where: {
     *     // ... filter to delete one Blog
     *   }
     * })
     * 
    **/
    delete<T extends blogDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, blogDeleteArgs<ExtArgs>>
    ): Prisma__blogClient<$Result.GetResult<Prisma.$blogPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Blog.
     * @param {blogUpdateArgs} args - Arguments to update one Blog.
     * @example
     * // Update one Blog
     * const blog = await prisma.blog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends blogUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, blogUpdateArgs<ExtArgs>>
    ): Prisma__blogClient<$Result.GetResult<Prisma.$blogPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Blogs.
     * @param {blogDeleteManyArgs} args - Arguments to filter Blogs to delete.
     * @example
     * // Delete a few Blogs
     * const { count } = await prisma.blog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends blogDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, blogDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Blogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {blogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Blogs
     * const blog = await prisma.blog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends blogUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, blogUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Blog.
     * @param {blogUpsertArgs} args - Arguments to update or create a Blog.
     * @example
     * // Update or create a Blog
     * const blog = await prisma.blog.upsert({
     *   create: {
     *     // ... data to create a Blog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Blog we want to update
     *   }
     * })
    **/
    upsert<T extends blogUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, blogUpsertArgs<ExtArgs>>
    ): Prisma__blogClient<$Result.GetResult<Prisma.$blogPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Blogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {blogCountArgs} args - Arguments to filter Blogs to count.
     * @example
     * // Count the number of Blogs
     * const count = await prisma.blog.count({
     *   where: {
     *     // ... the filter for the Blogs we want to count
     *   }
     * })
    **/
    count<T extends blogCountArgs>(
      args?: Subset<T, blogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BlogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Blog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BlogAggregateArgs>(args: Subset<T, BlogAggregateArgs>): Prisma.PrismaPromise<GetBlogAggregateType<T>>

    /**
     * Group by Blog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {blogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends blogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: blogGroupByArgs['orderBy'] }
        : { orderBy?: blogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, blogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBlogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the blog model
   */
  readonly fields: blogFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for blog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__blogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    blogcategory<T extends blogcategoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, blogcategoryDefaultArgs<ExtArgs>>): Prisma__blogcategoryClient<$Result.GetResult<Prisma.$blogcategoryPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    blogcomments<T extends blog$blogcommentsArgs<ExtArgs> = {}>(args?: Subset<T, blog$blogcommentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$blogcommentPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the blog model
   */ 
  interface blogFieldRefs {
    readonly id: FieldRef<"blog", 'Int'>
    readonly title: FieldRef<"blog", 'String'>
    readonly content: FieldRef<"blog", 'String'>
    readonly slug: FieldRef<"blog", 'String'>
    readonly featuredimage: FieldRef<"blog", 'String'>
    readonly blogcategoryid: FieldRef<"blog", 'Int'>
    readonly metaid: FieldRef<"blog", 'Int'>
    readonly createdat: FieldRef<"blog", 'DateTime'>
    readonly createdby: FieldRef<"blog", 'Int'>
    readonly updatedat: FieldRef<"blog", 'DateTime'>
    readonly updatedby: FieldRef<"blog", 'Int'>
    readonly isactive: FieldRef<"blog", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * blog findUnique
   */
  export type blogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blog
     */
    select?: blogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogInclude<ExtArgs> | null
    /**
     * Filter, which blog to fetch.
     */
    where: blogWhereUniqueInput
  }


  /**
   * blog findUniqueOrThrow
   */
  export type blogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blog
     */
    select?: blogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogInclude<ExtArgs> | null
    /**
     * Filter, which blog to fetch.
     */
    where: blogWhereUniqueInput
  }


  /**
   * blog findFirst
   */
  export type blogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blog
     */
    select?: blogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogInclude<ExtArgs> | null
    /**
     * Filter, which blog to fetch.
     */
    where?: blogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of blogs to fetch.
     */
    orderBy?: blogOrderByWithRelationInput | blogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for blogs.
     */
    cursor?: blogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` blogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` blogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of blogs.
     */
    distinct?: BlogScalarFieldEnum | BlogScalarFieldEnum[]
  }


  /**
   * blog findFirstOrThrow
   */
  export type blogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blog
     */
    select?: blogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogInclude<ExtArgs> | null
    /**
     * Filter, which blog to fetch.
     */
    where?: blogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of blogs to fetch.
     */
    orderBy?: blogOrderByWithRelationInput | blogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for blogs.
     */
    cursor?: blogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` blogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` blogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of blogs.
     */
    distinct?: BlogScalarFieldEnum | BlogScalarFieldEnum[]
  }


  /**
   * blog findMany
   */
  export type blogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blog
     */
    select?: blogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogInclude<ExtArgs> | null
    /**
     * Filter, which blogs to fetch.
     */
    where?: blogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of blogs to fetch.
     */
    orderBy?: blogOrderByWithRelationInput | blogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing blogs.
     */
    cursor?: blogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` blogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` blogs.
     */
    skip?: number
    distinct?: BlogScalarFieldEnum | BlogScalarFieldEnum[]
  }


  /**
   * blog create
   */
  export type blogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blog
     */
    select?: blogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogInclude<ExtArgs> | null
    /**
     * The data needed to create a blog.
     */
    data: XOR<blogCreateInput, blogUncheckedCreateInput>
  }


  /**
   * blog createMany
   */
  export type blogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many blogs.
     */
    data: blogCreateManyInput | blogCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * blog update
   */
  export type blogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blog
     */
    select?: blogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogInclude<ExtArgs> | null
    /**
     * The data needed to update a blog.
     */
    data: XOR<blogUpdateInput, blogUncheckedUpdateInput>
    /**
     * Choose, which blog to update.
     */
    where: blogWhereUniqueInput
  }


  /**
   * blog updateMany
   */
  export type blogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update blogs.
     */
    data: XOR<blogUpdateManyMutationInput, blogUncheckedUpdateManyInput>
    /**
     * Filter which blogs to update
     */
    where?: blogWhereInput
  }


  /**
   * blog upsert
   */
  export type blogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blog
     */
    select?: blogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogInclude<ExtArgs> | null
    /**
     * The filter to search for the blog to update in case it exists.
     */
    where: blogWhereUniqueInput
    /**
     * In case the blog found by the `where` argument doesn't exist, create a new blog with this data.
     */
    create: XOR<blogCreateInput, blogUncheckedCreateInput>
    /**
     * In case the blog was found with the provided `where` argument, update it with this data.
     */
    update: XOR<blogUpdateInput, blogUncheckedUpdateInput>
  }


  /**
   * blog delete
   */
  export type blogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blog
     */
    select?: blogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogInclude<ExtArgs> | null
    /**
     * Filter which blog to delete.
     */
    where: blogWhereUniqueInput
  }


  /**
   * blog deleteMany
   */
  export type blogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which blogs to delete
     */
    where?: blogWhereInput
  }


  /**
   * blog.blogcomments
   */
  export type blog$blogcommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blogcomment
     */
    select?: blogcommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogcommentInclude<ExtArgs> | null
    where?: blogcommentWhereInput
    orderBy?: blogcommentOrderByWithRelationInput | blogcommentOrderByWithRelationInput[]
    cursor?: blogcommentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BlogcommentScalarFieldEnum | BlogcommentScalarFieldEnum[]
  }


  /**
   * blog without action
   */
  export type blogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blog
     */
    select?: blogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogInclude<ExtArgs> | null
  }



  /**
   * Model blogcategory
   */

  export type AggregateBlogcategory = {
    _count: BlogcategoryCountAggregateOutputType | null
    _avg: BlogcategoryAvgAggregateOutputType | null
    _sum: BlogcategorySumAggregateOutputType | null
    _min: BlogcategoryMinAggregateOutputType | null
    _max: BlogcategoryMaxAggregateOutputType | null
  }

  export type BlogcategoryAvgAggregateOutputType = {
    id: number | null
    metaid: number | null
    createdby: number | null
    updatedby: number | null
    isactive: number | null
  }

  export type BlogcategorySumAggregateOutputType = {
    id: number | null
    metaid: number | null
    createdby: number | null
    updatedby: number | null
    isactive: number | null
  }

  export type BlogcategoryMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    featuredimage: string | null
    metaid: number | null
    createdat: Date | null
    createdby: number | null
    updatedat: Date | null
    updatedby: number | null
    isactive: number | null
  }

  export type BlogcategoryMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    featuredimage: string | null
    metaid: number | null
    createdat: Date | null
    createdby: number | null
    updatedat: Date | null
    updatedby: number | null
    isactive: number | null
  }

  export type BlogcategoryCountAggregateOutputType = {
    id: number
    name: number
    description: number
    featuredimage: number
    metaid: number
    createdat: number
    createdby: number
    updatedat: number
    updatedby: number
    isactive: number
    _all: number
  }


  export type BlogcategoryAvgAggregateInputType = {
    id?: true
    metaid?: true
    createdby?: true
    updatedby?: true
    isactive?: true
  }

  export type BlogcategorySumAggregateInputType = {
    id?: true
    metaid?: true
    createdby?: true
    updatedby?: true
    isactive?: true
  }

  export type BlogcategoryMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    featuredimage?: true
    metaid?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isactive?: true
  }

  export type BlogcategoryMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    featuredimage?: true
    metaid?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isactive?: true
  }

  export type BlogcategoryCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    featuredimage?: true
    metaid?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isactive?: true
    _all?: true
  }

  export type BlogcategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which blogcategory to aggregate.
     */
    where?: blogcategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of blogcategories to fetch.
     */
    orderBy?: blogcategoryOrderByWithRelationInput | blogcategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: blogcategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` blogcategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` blogcategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned blogcategories
    **/
    _count?: true | BlogcategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BlogcategoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BlogcategorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BlogcategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BlogcategoryMaxAggregateInputType
  }

  export type GetBlogcategoryAggregateType<T extends BlogcategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateBlogcategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBlogcategory[P]>
      : GetScalarType<T[P], AggregateBlogcategory[P]>
  }




  export type blogcategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: blogcategoryWhereInput
    orderBy?: blogcategoryOrderByWithAggregationInput | blogcategoryOrderByWithAggregationInput[]
    by: BlogcategoryScalarFieldEnum[] | BlogcategoryScalarFieldEnum
    having?: blogcategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BlogcategoryCountAggregateInputType | true
    _avg?: BlogcategoryAvgAggregateInputType
    _sum?: BlogcategorySumAggregateInputType
    _min?: BlogcategoryMinAggregateInputType
    _max?: BlogcategoryMaxAggregateInputType
  }

  export type BlogcategoryGroupByOutputType = {
    id: number
    name: string
    description: string
    featuredimage: string
    metaid: number
    createdat: Date
    createdby: number
    updatedat: Date | null
    updatedby: number | null
    isactive: number
    _count: BlogcategoryCountAggregateOutputType | null
    _avg: BlogcategoryAvgAggregateOutputType | null
    _sum: BlogcategorySumAggregateOutputType | null
    _min: BlogcategoryMinAggregateOutputType | null
    _max: BlogcategoryMaxAggregateOutputType | null
  }

  type GetBlogcategoryGroupByPayload<T extends blogcategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BlogcategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BlogcategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BlogcategoryGroupByOutputType[P]>
            : GetScalarType<T[P], BlogcategoryGroupByOutputType[P]>
        }
      >
    >


  export type blogcategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    featuredimage?: boolean
    metaid?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedat?: boolean
    updatedby?: boolean
    isactive?: boolean
    blogs?: boolean | blogcategory$blogsArgs<ExtArgs>
    blogcategorymeta?: boolean | blogcategory$blogcategorymetaArgs<ExtArgs>
    _count?: boolean | BlogcategoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["blogcategory"]>

  export type blogcategorySelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    featuredimage?: boolean
    metaid?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedat?: boolean
    updatedby?: boolean
    isactive?: boolean
  }

  export type blogcategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    blogs?: boolean | blogcategory$blogsArgs<ExtArgs>
    blogcategorymeta?: boolean | blogcategory$blogcategorymetaArgs<ExtArgs>
    _count?: boolean | BlogcategoryCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $blogcategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "blogcategory"
    objects: {
      blogs: Prisma.$blogPayload<ExtArgs>[]
      blogcategorymeta: Prisma.$metaPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string
      featuredimage: string
      metaid: number
      createdat: Date
      createdby: number
      updatedat: Date | null
      updatedby: number | null
      isactive: number
    }, ExtArgs["result"]["blogcategory"]>
    composites: {}
  }


  type blogcategoryGetPayload<S extends boolean | null | undefined | blogcategoryDefaultArgs> = $Result.GetResult<Prisma.$blogcategoryPayload, S>

  type blogcategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<blogcategoryFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: BlogcategoryCountAggregateInputType | true
    }

  export interface blogcategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['blogcategory'], meta: { name: 'blogcategory' } }
    /**
     * Find zero or one Blogcategory that matches the filter.
     * @param {blogcategoryFindUniqueArgs} args - Arguments to find a Blogcategory
     * @example
     * // Get one Blogcategory
     * const blogcategory = await prisma.blogcategory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends blogcategoryFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, blogcategoryFindUniqueArgs<ExtArgs>>
    ): Prisma__blogcategoryClient<$Result.GetResult<Prisma.$blogcategoryPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Blogcategory that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {blogcategoryFindUniqueOrThrowArgs} args - Arguments to find a Blogcategory
     * @example
     * // Get one Blogcategory
     * const blogcategory = await prisma.blogcategory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends blogcategoryFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, blogcategoryFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__blogcategoryClient<$Result.GetResult<Prisma.$blogcategoryPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Blogcategory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {blogcategoryFindFirstArgs} args - Arguments to find a Blogcategory
     * @example
     * // Get one Blogcategory
     * const blogcategory = await prisma.blogcategory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends blogcategoryFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, blogcategoryFindFirstArgs<ExtArgs>>
    ): Prisma__blogcategoryClient<$Result.GetResult<Prisma.$blogcategoryPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Blogcategory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {blogcategoryFindFirstOrThrowArgs} args - Arguments to find a Blogcategory
     * @example
     * // Get one Blogcategory
     * const blogcategory = await prisma.blogcategory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends blogcategoryFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, blogcategoryFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__blogcategoryClient<$Result.GetResult<Prisma.$blogcategoryPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Blogcategories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {blogcategoryFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Blogcategories
     * const blogcategories = await prisma.blogcategory.findMany()
     * 
     * // Get first 10 Blogcategories
     * const blogcategories = await prisma.blogcategory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const blogcategoryWithIdOnly = await prisma.blogcategory.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends blogcategoryFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, blogcategoryFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$blogcategoryPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Blogcategory.
     * @param {blogcategoryCreateArgs} args - Arguments to create a Blogcategory.
     * @example
     * // Create one Blogcategory
     * const Blogcategory = await prisma.blogcategory.create({
     *   data: {
     *     // ... data to create a Blogcategory
     *   }
     * })
     * 
    **/
    create<T extends blogcategoryCreateArgs<ExtArgs>>(
      args: SelectSubset<T, blogcategoryCreateArgs<ExtArgs>>
    ): Prisma__blogcategoryClient<$Result.GetResult<Prisma.$blogcategoryPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Blogcategories.
     *     @param {blogcategoryCreateManyArgs} args - Arguments to create many Blogcategories.
     *     @example
     *     // Create many Blogcategories
     *     const blogcategory = await prisma.blogcategory.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends blogcategoryCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, blogcategoryCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Blogcategory.
     * @param {blogcategoryDeleteArgs} args - Arguments to delete one Blogcategory.
     * @example
     * // Delete one Blogcategory
     * const Blogcategory = await prisma.blogcategory.delete({
     *   where: {
     *     // ... filter to delete one Blogcategory
     *   }
     * })
     * 
    **/
    delete<T extends blogcategoryDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, blogcategoryDeleteArgs<ExtArgs>>
    ): Prisma__blogcategoryClient<$Result.GetResult<Prisma.$blogcategoryPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Blogcategory.
     * @param {blogcategoryUpdateArgs} args - Arguments to update one Blogcategory.
     * @example
     * // Update one Blogcategory
     * const blogcategory = await prisma.blogcategory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends blogcategoryUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, blogcategoryUpdateArgs<ExtArgs>>
    ): Prisma__blogcategoryClient<$Result.GetResult<Prisma.$blogcategoryPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Blogcategories.
     * @param {blogcategoryDeleteManyArgs} args - Arguments to filter Blogcategories to delete.
     * @example
     * // Delete a few Blogcategories
     * const { count } = await prisma.blogcategory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends blogcategoryDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, blogcategoryDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Blogcategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {blogcategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Blogcategories
     * const blogcategory = await prisma.blogcategory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends blogcategoryUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, blogcategoryUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Blogcategory.
     * @param {blogcategoryUpsertArgs} args - Arguments to update or create a Blogcategory.
     * @example
     * // Update or create a Blogcategory
     * const blogcategory = await prisma.blogcategory.upsert({
     *   create: {
     *     // ... data to create a Blogcategory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Blogcategory we want to update
     *   }
     * })
    **/
    upsert<T extends blogcategoryUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, blogcategoryUpsertArgs<ExtArgs>>
    ): Prisma__blogcategoryClient<$Result.GetResult<Prisma.$blogcategoryPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Blogcategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {blogcategoryCountArgs} args - Arguments to filter Blogcategories to count.
     * @example
     * // Count the number of Blogcategories
     * const count = await prisma.blogcategory.count({
     *   where: {
     *     // ... the filter for the Blogcategories we want to count
     *   }
     * })
    **/
    count<T extends blogcategoryCountArgs>(
      args?: Subset<T, blogcategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BlogcategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Blogcategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogcategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BlogcategoryAggregateArgs>(args: Subset<T, BlogcategoryAggregateArgs>): Prisma.PrismaPromise<GetBlogcategoryAggregateType<T>>

    /**
     * Group by Blogcategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {blogcategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends blogcategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: blogcategoryGroupByArgs['orderBy'] }
        : { orderBy?: blogcategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, blogcategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBlogcategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the blogcategory model
   */
  readonly fields: blogcategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for blogcategory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__blogcategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    blogs<T extends blogcategory$blogsArgs<ExtArgs> = {}>(args?: Subset<T, blogcategory$blogsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$blogPayload<ExtArgs>, T, 'findMany'> | Null>;

    blogcategorymeta<T extends blogcategory$blogcategorymetaArgs<ExtArgs> = {}>(args?: Subset<T, blogcategory$blogcategorymetaArgs<ExtArgs>>): Prisma__metaClient<$Result.GetResult<Prisma.$metaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the blogcategory model
   */ 
  interface blogcategoryFieldRefs {
    readonly id: FieldRef<"blogcategory", 'Int'>
    readonly name: FieldRef<"blogcategory", 'String'>
    readonly description: FieldRef<"blogcategory", 'String'>
    readonly featuredimage: FieldRef<"blogcategory", 'String'>
    readonly metaid: FieldRef<"blogcategory", 'Int'>
    readonly createdat: FieldRef<"blogcategory", 'DateTime'>
    readonly createdby: FieldRef<"blogcategory", 'Int'>
    readonly updatedat: FieldRef<"blogcategory", 'DateTime'>
    readonly updatedby: FieldRef<"blogcategory", 'Int'>
    readonly isactive: FieldRef<"blogcategory", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * blogcategory findUnique
   */
  export type blogcategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blogcategory
     */
    select?: blogcategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogcategoryInclude<ExtArgs> | null
    /**
     * Filter, which blogcategory to fetch.
     */
    where: blogcategoryWhereUniqueInput
  }


  /**
   * blogcategory findUniqueOrThrow
   */
  export type blogcategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blogcategory
     */
    select?: blogcategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogcategoryInclude<ExtArgs> | null
    /**
     * Filter, which blogcategory to fetch.
     */
    where: blogcategoryWhereUniqueInput
  }


  /**
   * blogcategory findFirst
   */
  export type blogcategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blogcategory
     */
    select?: blogcategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogcategoryInclude<ExtArgs> | null
    /**
     * Filter, which blogcategory to fetch.
     */
    where?: blogcategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of blogcategories to fetch.
     */
    orderBy?: blogcategoryOrderByWithRelationInput | blogcategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for blogcategories.
     */
    cursor?: blogcategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` blogcategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` blogcategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of blogcategories.
     */
    distinct?: BlogcategoryScalarFieldEnum | BlogcategoryScalarFieldEnum[]
  }


  /**
   * blogcategory findFirstOrThrow
   */
  export type blogcategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blogcategory
     */
    select?: blogcategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogcategoryInclude<ExtArgs> | null
    /**
     * Filter, which blogcategory to fetch.
     */
    where?: blogcategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of blogcategories to fetch.
     */
    orderBy?: blogcategoryOrderByWithRelationInput | blogcategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for blogcategories.
     */
    cursor?: blogcategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` blogcategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` blogcategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of blogcategories.
     */
    distinct?: BlogcategoryScalarFieldEnum | BlogcategoryScalarFieldEnum[]
  }


  /**
   * blogcategory findMany
   */
  export type blogcategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blogcategory
     */
    select?: blogcategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogcategoryInclude<ExtArgs> | null
    /**
     * Filter, which blogcategories to fetch.
     */
    where?: blogcategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of blogcategories to fetch.
     */
    orderBy?: blogcategoryOrderByWithRelationInput | blogcategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing blogcategories.
     */
    cursor?: blogcategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` blogcategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` blogcategories.
     */
    skip?: number
    distinct?: BlogcategoryScalarFieldEnum | BlogcategoryScalarFieldEnum[]
  }


  /**
   * blogcategory create
   */
  export type blogcategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blogcategory
     */
    select?: blogcategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogcategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a blogcategory.
     */
    data: XOR<blogcategoryCreateInput, blogcategoryUncheckedCreateInput>
  }


  /**
   * blogcategory createMany
   */
  export type blogcategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many blogcategories.
     */
    data: blogcategoryCreateManyInput | blogcategoryCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * blogcategory update
   */
  export type blogcategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blogcategory
     */
    select?: blogcategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogcategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a blogcategory.
     */
    data: XOR<blogcategoryUpdateInput, blogcategoryUncheckedUpdateInput>
    /**
     * Choose, which blogcategory to update.
     */
    where: blogcategoryWhereUniqueInput
  }


  /**
   * blogcategory updateMany
   */
  export type blogcategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update blogcategories.
     */
    data: XOR<blogcategoryUpdateManyMutationInput, blogcategoryUncheckedUpdateManyInput>
    /**
     * Filter which blogcategories to update
     */
    where?: blogcategoryWhereInput
  }


  /**
   * blogcategory upsert
   */
  export type blogcategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blogcategory
     */
    select?: blogcategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogcategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the blogcategory to update in case it exists.
     */
    where: blogcategoryWhereUniqueInput
    /**
     * In case the blogcategory found by the `where` argument doesn't exist, create a new blogcategory with this data.
     */
    create: XOR<blogcategoryCreateInput, blogcategoryUncheckedCreateInput>
    /**
     * In case the blogcategory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<blogcategoryUpdateInput, blogcategoryUncheckedUpdateInput>
  }


  /**
   * blogcategory delete
   */
  export type blogcategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blogcategory
     */
    select?: blogcategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogcategoryInclude<ExtArgs> | null
    /**
     * Filter which blogcategory to delete.
     */
    where: blogcategoryWhereUniqueInput
  }


  /**
   * blogcategory deleteMany
   */
  export type blogcategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which blogcategories to delete
     */
    where?: blogcategoryWhereInput
  }


  /**
   * blogcategory.blogs
   */
  export type blogcategory$blogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blog
     */
    select?: blogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogInclude<ExtArgs> | null
    where?: blogWhereInput
    orderBy?: blogOrderByWithRelationInput | blogOrderByWithRelationInput[]
    cursor?: blogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BlogScalarFieldEnum | BlogScalarFieldEnum[]
  }


  /**
   * blogcategory.blogcategorymeta
   */
  export type blogcategory$blogcategorymetaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the meta
     */
    select?: metaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: metaInclude<ExtArgs> | null
    where?: metaWhereInput
  }


  /**
   * blogcategory without action
   */
  export type blogcategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blogcategory
     */
    select?: blogcategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogcategoryInclude<ExtArgs> | null
  }



  /**
   * Model meta
   */

  export type AggregateMeta = {
    _count: MetaCountAggregateOutputType | null
    _avg: MetaAvgAggregateOutputType | null
    _sum: MetaSumAggregateOutputType | null
    _min: MetaMinAggregateOutputType | null
    _max: MetaMaxAggregateOutputType | null
  }

  export type MetaAvgAggregateOutputType = {
    id: number | null
    createdby: number | null
    updatedby: number | null
  }

  export type MetaSumAggregateOutputType = {
    id: number | null
    createdby: number | null
    updatedby: number | null
  }

  export type MetaMinAggregateOutputType = {
    id: number | null
    metatitle: string | null
    metadescription: string | null
    metakeywords: string | null
    metarobots: string | null
    metahttpequiv: string | null
    metalanguage: string | null
    metaauthor: string | null
    metarevisit: string | null
    createdat: Date | null
    createdby: number | null
    updatedat: Date | null
    updatedby: number | null
  }

  export type MetaMaxAggregateOutputType = {
    id: number | null
    metatitle: string | null
    metadescription: string | null
    metakeywords: string | null
    metarobots: string | null
    metahttpequiv: string | null
    metalanguage: string | null
    metaauthor: string | null
    metarevisit: string | null
    createdat: Date | null
    createdby: number | null
    updatedat: Date | null
    updatedby: number | null
  }

  export type MetaCountAggregateOutputType = {
    id: number
    metatitle: number
    metadescription: number
    metakeywords: number
    metarobots: number
    metahttpequiv: number
    metalanguage: number
    metaauthor: number
    metarevisit: number
    createdat: number
    createdby: number
    updatedat: number
    updatedby: number
    _all: number
  }


  export type MetaAvgAggregateInputType = {
    id?: true
    createdby?: true
    updatedby?: true
  }

  export type MetaSumAggregateInputType = {
    id?: true
    createdby?: true
    updatedby?: true
  }

  export type MetaMinAggregateInputType = {
    id?: true
    metatitle?: true
    metadescription?: true
    metakeywords?: true
    metarobots?: true
    metahttpequiv?: true
    metalanguage?: true
    metaauthor?: true
    metarevisit?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
  }

  export type MetaMaxAggregateInputType = {
    id?: true
    metatitle?: true
    metadescription?: true
    metakeywords?: true
    metarobots?: true
    metahttpequiv?: true
    metalanguage?: true
    metaauthor?: true
    metarevisit?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
  }

  export type MetaCountAggregateInputType = {
    id?: true
    metatitle?: true
    metadescription?: true
    metakeywords?: true
    metarobots?: true
    metahttpequiv?: true
    metalanguage?: true
    metaauthor?: true
    metarevisit?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    _all?: true
  }

  export type MetaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which meta to aggregate.
     */
    where?: metaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of metas to fetch.
     */
    orderBy?: metaOrderByWithRelationInput | metaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: metaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` metas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` metas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned metas
    **/
    _count?: true | MetaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MetaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MetaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MetaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MetaMaxAggregateInputType
  }

  export type GetMetaAggregateType<T extends MetaAggregateArgs> = {
        [P in keyof T & keyof AggregateMeta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMeta[P]>
      : GetScalarType<T[P], AggregateMeta[P]>
  }




  export type metaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: metaWhereInput
    orderBy?: metaOrderByWithAggregationInput | metaOrderByWithAggregationInput[]
    by: MetaScalarFieldEnum[] | MetaScalarFieldEnum
    having?: metaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MetaCountAggregateInputType | true
    _avg?: MetaAvgAggregateInputType
    _sum?: MetaSumAggregateInputType
    _min?: MetaMinAggregateInputType
    _max?: MetaMaxAggregateInputType
  }

  export type MetaGroupByOutputType = {
    id: number
    metatitle: string
    metadescription: string
    metakeywords: string
    metarobots: string
    metahttpequiv: string
    metalanguage: string
    metaauthor: string
    metarevisit: string
    createdat: Date
    createdby: number
    updatedat: Date | null
    updatedby: number | null
    _count: MetaCountAggregateOutputType | null
    _avg: MetaAvgAggregateOutputType | null
    _sum: MetaSumAggregateOutputType | null
    _min: MetaMinAggregateOutputType | null
    _max: MetaMaxAggregateOutputType | null
  }

  type GetMetaGroupByPayload<T extends metaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MetaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MetaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MetaGroupByOutputType[P]>
            : GetScalarType<T[P], MetaGroupByOutputType[P]>
        }
      >
    >


  export type metaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    metatitle?: boolean
    metadescription?: boolean
    metakeywords?: boolean
    metarobots?: boolean
    metahttpequiv?: boolean
    metalanguage?: boolean
    metaauthor?: boolean
    metarevisit?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedat?: boolean
    updatedby?: boolean
    pages?: boolean | meta$pagesArgs<ExtArgs>
    services?: boolean | meta$servicesArgs<ExtArgs>
    servicecategory?: boolean | meta$servicecategoryArgs<ExtArgs>
    blogcategory?: boolean | meta$blogcategoryArgs<ExtArgs>
    _count?: boolean | MetaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["meta"]>

  export type metaSelectScalar = {
    id?: boolean
    metatitle?: boolean
    metadescription?: boolean
    metakeywords?: boolean
    metarobots?: boolean
    metahttpequiv?: boolean
    metalanguage?: boolean
    metaauthor?: boolean
    metarevisit?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedat?: boolean
    updatedby?: boolean
  }

  export type metaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pages?: boolean | meta$pagesArgs<ExtArgs>
    services?: boolean | meta$servicesArgs<ExtArgs>
    servicecategory?: boolean | meta$servicecategoryArgs<ExtArgs>
    blogcategory?: boolean | meta$blogcategoryArgs<ExtArgs>
    _count?: boolean | MetaCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $metaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "meta"
    objects: {
      pages: Prisma.$pagePayload<ExtArgs>[]
      services: Prisma.$servicePayload<ExtArgs>[]
      servicecategory: Prisma.$servicecategoryPayload<ExtArgs>[]
      blogcategory: Prisma.$blogcategoryPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      metatitle: string
      metadescription: string
      metakeywords: string
      metarobots: string
      metahttpequiv: string
      metalanguage: string
      metaauthor: string
      metarevisit: string
      createdat: Date
      createdby: number
      updatedat: Date | null
      updatedby: number | null
    }, ExtArgs["result"]["meta"]>
    composites: {}
  }


  type metaGetPayload<S extends boolean | null | undefined | metaDefaultArgs> = $Result.GetResult<Prisma.$metaPayload, S>

  type metaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<metaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MetaCountAggregateInputType | true
    }

  export interface metaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['meta'], meta: { name: 'meta' } }
    /**
     * Find zero or one Meta that matches the filter.
     * @param {metaFindUniqueArgs} args - Arguments to find a Meta
     * @example
     * // Get one Meta
     * const meta = await prisma.meta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends metaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, metaFindUniqueArgs<ExtArgs>>
    ): Prisma__metaClient<$Result.GetResult<Prisma.$metaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Meta that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {metaFindUniqueOrThrowArgs} args - Arguments to find a Meta
     * @example
     * // Get one Meta
     * const meta = await prisma.meta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends metaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, metaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__metaClient<$Result.GetResult<Prisma.$metaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Meta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {metaFindFirstArgs} args - Arguments to find a Meta
     * @example
     * // Get one Meta
     * const meta = await prisma.meta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends metaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, metaFindFirstArgs<ExtArgs>>
    ): Prisma__metaClient<$Result.GetResult<Prisma.$metaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Meta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {metaFindFirstOrThrowArgs} args - Arguments to find a Meta
     * @example
     * // Get one Meta
     * const meta = await prisma.meta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends metaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, metaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__metaClient<$Result.GetResult<Prisma.$metaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Metas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {metaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Metas
     * const metas = await prisma.meta.findMany()
     * 
     * // Get first 10 Metas
     * const metas = await prisma.meta.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const metaWithIdOnly = await prisma.meta.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends metaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, metaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$metaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Meta.
     * @param {metaCreateArgs} args - Arguments to create a Meta.
     * @example
     * // Create one Meta
     * const Meta = await prisma.meta.create({
     *   data: {
     *     // ... data to create a Meta
     *   }
     * })
     * 
    **/
    create<T extends metaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, metaCreateArgs<ExtArgs>>
    ): Prisma__metaClient<$Result.GetResult<Prisma.$metaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Metas.
     *     @param {metaCreateManyArgs} args - Arguments to create many Metas.
     *     @example
     *     // Create many Metas
     *     const meta = await prisma.meta.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends metaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, metaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Meta.
     * @param {metaDeleteArgs} args - Arguments to delete one Meta.
     * @example
     * // Delete one Meta
     * const Meta = await prisma.meta.delete({
     *   where: {
     *     // ... filter to delete one Meta
     *   }
     * })
     * 
    **/
    delete<T extends metaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, metaDeleteArgs<ExtArgs>>
    ): Prisma__metaClient<$Result.GetResult<Prisma.$metaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Meta.
     * @param {metaUpdateArgs} args - Arguments to update one Meta.
     * @example
     * // Update one Meta
     * const meta = await prisma.meta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends metaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, metaUpdateArgs<ExtArgs>>
    ): Prisma__metaClient<$Result.GetResult<Prisma.$metaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Metas.
     * @param {metaDeleteManyArgs} args - Arguments to filter Metas to delete.
     * @example
     * // Delete a few Metas
     * const { count } = await prisma.meta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends metaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, metaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Metas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {metaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Metas
     * const meta = await prisma.meta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends metaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, metaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Meta.
     * @param {metaUpsertArgs} args - Arguments to update or create a Meta.
     * @example
     * // Update or create a Meta
     * const meta = await prisma.meta.upsert({
     *   create: {
     *     // ... data to create a Meta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Meta we want to update
     *   }
     * })
    **/
    upsert<T extends metaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, metaUpsertArgs<ExtArgs>>
    ): Prisma__metaClient<$Result.GetResult<Prisma.$metaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Metas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {metaCountArgs} args - Arguments to filter Metas to count.
     * @example
     * // Count the number of Metas
     * const count = await prisma.meta.count({
     *   where: {
     *     // ... the filter for the Metas we want to count
     *   }
     * })
    **/
    count<T extends metaCountArgs>(
      args?: Subset<T, metaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MetaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Meta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MetaAggregateArgs>(args: Subset<T, MetaAggregateArgs>): Prisma.PrismaPromise<GetMetaAggregateType<T>>

    /**
     * Group by Meta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {metaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends metaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: metaGroupByArgs['orderBy'] }
        : { orderBy?: metaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, metaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMetaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the meta model
   */
  readonly fields: metaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for meta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__metaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    pages<T extends meta$pagesArgs<ExtArgs> = {}>(args?: Subset<T, meta$pagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pagePayload<ExtArgs>, T, 'findMany'> | Null>;

    services<T extends meta$servicesArgs<ExtArgs> = {}>(args?: Subset<T, meta$servicesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$servicePayload<ExtArgs>, T, 'findMany'> | Null>;

    servicecategory<T extends meta$servicecategoryArgs<ExtArgs> = {}>(args?: Subset<T, meta$servicecategoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$servicecategoryPayload<ExtArgs>, T, 'findMany'> | Null>;

    blogcategory<T extends meta$blogcategoryArgs<ExtArgs> = {}>(args?: Subset<T, meta$blogcategoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$blogcategoryPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the meta model
   */ 
  interface metaFieldRefs {
    readonly id: FieldRef<"meta", 'Int'>
    readonly metatitle: FieldRef<"meta", 'String'>
    readonly metadescription: FieldRef<"meta", 'String'>
    readonly metakeywords: FieldRef<"meta", 'String'>
    readonly metarobots: FieldRef<"meta", 'String'>
    readonly metahttpequiv: FieldRef<"meta", 'String'>
    readonly metalanguage: FieldRef<"meta", 'String'>
    readonly metaauthor: FieldRef<"meta", 'String'>
    readonly metarevisit: FieldRef<"meta", 'String'>
    readonly createdat: FieldRef<"meta", 'DateTime'>
    readonly createdby: FieldRef<"meta", 'Int'>
    readonly updatedat: FieldRef<"meta", 'DateTime'>
    readonly updatedby: FieldRef<"meta", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * meta findUnique
   */
  export type metaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the meta
     */
    select?: metaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: metaInclude<ExtArgs> | null
    /**
     * Filter, which meta to fetch.
     */
    where: metaWhereUniqueInput
  }


  /**
   * meta findUniqueOrThrow
   */
  export type metaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the meta
     */
    select?: metaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: metaInclude<ExtArgs> | null
    /**
     * Filter, which meta to fetch.
     */
    where: metaWhereUniqueInput
  }


  /**
   * meta findFirst
   */
  export type metaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the meta
     */
    select?: metaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: metaInclude<ExtArgs> | null
    /**
     * Filter, which meta to fetch.
     */
    where?: metaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of metas to fetch.
     */
    orderBy?: metaOrderByWithRelationInput | metaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for metas.
     */
    cursor?: metaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` metas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` metas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of metas.
     */
    distinct?: MetaScalarFieldEnum | MetaScalarFieldEnum[]
  }


  /**
   * meta findFirstOrThrow
   */
  export type metaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the meta
     */
    select?: metaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: metaInclude<ExtArgs> | null
    /**
     * Filter, which meta to fetch.
     */
    where?: metaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of metas to fetch.
     */
    orderBy?: metaOrderByWithRelationInput | metaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for metas.
     */
    cursor?: metaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` metas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` metas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of metas.
     */
    distinct?: MetaScalarFieldEnum | MetaScalarFieldEnum[]
  }


  /**
   * meta findMany
   */
  export type metaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the meta
     */
    select?: metaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: metaInclude<ExtArgs> | null
    /**
     * Filter, which metas to fetch.
     */
    where?: metaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of metas to fetch.
     */
    orderBy?: metaOrderByWithRelationInput | metaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing metas.
     */
    cursor?: metaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` metas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` metas.
     */
    skip?: number
    distinct?: MetaScalarFieldEnum | MetaScalarFieldEnum[]
  }


  /**
   * meta create
   */
  export type metaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the meta
     */
    select?: metaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: metaInclude<ExtArgs> | null
    /**
     * The data needed to create a meta.
     */
    data: XOR<metaCreateInput, metaUncheckedCreateInput>
  }


  /**
   * meta createMany
   */
  export type metaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many metas.
     */
    data: metaCreateManyInput | metaCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * meta update
   */
  export type metaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the meta
     */
    select?: metaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: metaInclude<ExtArgs> | null
    /**
     * The data needed to update a meta.
     */
    data: XOR<metaUpdateInput, metaUncheckedUpdateInput>
    /**
     * Choose, which meta to update.
     */
    where: metaWhereUniqueInput
  }


  /**
   * meta updateMany
   */
  export type metaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update metas.
     */
    data: XOR<metaUpdateManyMutationInput, metaUncheckedUpdateManyInput>
    /**
     * Filter which metas to update
     */
    where?: metaWhereInput
  }


  /**
   * meta upsert
   */
  export type metaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the meta
     */
    select?: metaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: metaInclude<ExtArgs> | null
    /**
     * The filter to search for the meta to update in case it exists.
     */
    where: metaWhereUniqueInput
    /**
     * In case the meta found by the `where` argument doesn't exist, create a new meta with this data.
     */
    create: XOR<metaCreateInput, metaUncheckedCreateInput>
    /**
     * In case the meta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<metaUpdateInput, metaUncheckedUpdateInput>
  }


  /**
   * meta delete
   */
  export type metaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the meta
     */
    select?: metaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: metaInclude<ExtArgs> | null
    /**
     * Filter which meta to delete.
     */
    where: metaWhereUniqueInput
  }


  /**
   * meta deleteMany
   */
  export type metaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which metas to delete
     */
    where?: metaWhereInput
  }


  /**
   * meta.pages
   */
  export type meta$pagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the page
     */
    select?: pageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: pageInclude<ExtArgs> | null
    where?: pageWhereInput
    orderBy?: pageOrderByWithRelationInput | pageOrderByWithRelationInput[]
    cursor?: pageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PageScalarFieldEnum | PageScalarFieldEnum[]
  }


  /**
   * meta.services
   */
  export type meta$servicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service
     */
    select?: serviceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: serviceInclude<ExtArgs> | null
    where?: serviceWhereInput
    orderBy?: serviceOrderByWithRelationInput | serviceOrderByWithRelationInput[]
    cursor?: serviceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServiceScalarFieldEnum | ServiceScalarFieldEnum[]
  }


  /**
   * meta.servicecategory
   */
  export type meta$servicecategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicecategory
     */
    select?: servicecategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: servicecategoryInclude<ExtArgs> | null
    where?: servicecategoryWhereInput
    orderBy?: servicecategoryOrderByWithRelationInput | servicecategoryOrderByWithRelationInput[]
    cursor?: servicecategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServicecategoryScalarFieldEnum | ServicecategoryScalarFieldEnum[]
  }


  /**
   * meta.blogcategory
   */
  export type meta$blogcategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blogcategory
     */
    select?: blogcategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: blogcategoryInclude<ExtArgs> | null
    where?: blogcategoryWhereInput
    orderBy?: blogcategoryOrderByWithRelationInput | blogcategoryOrderByWithRelationInput[]
    cursor?: blogcategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BlogcategoryScalarFieldEnum | BlogcategoryScalarFieldEnum[]
  }


  /**
   * meta without action
   */
  export type metaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the meta
     */
    select?: metaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: metaInclude<ExtArgs> | null
  }



  /**
   * Model offer
   */

  export type AggregateOffer = {
    _count: OfferCountAggregateOutputType | null
    _avg: OfferAvgAggregateOutputType | null
    _sum: OfferSumAggregateOutputType | null
    _min: OfferMinAggregateOutputType | null
    _max: OfferMaxAggregateOutputType | null
  }

  export type OfferAvgAggregateOutputType = {
    id: number | null
    saleprice: number | null
    discountprice: number | null
    createdby: number | null
    updatedby: number | null
    isactive: number | null
    serviceid: number | null
  }

  export type OfferSumAggregateOutputType = {
    id: number | null
    saleprice: number | null
    discountprice: number | null
    createdby: number | null
    updatedby: number | null
    isactive: number | null
    serviceid: number | null
  }

  export type OfferMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    saleprice: number | null
    salepricecurrency: string | null
    salepriceperiod: string | null
    discountprice: number | null
    discountamount: string | null
    createdat: Date | null
    createdby: number | null
    updatedat: Date | null
    updatedby: number | null
    isactive: number | null
    serviceid: number | null
  }

  export type OfferMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    saleprice: number | null
    salepricecurrency: string | null
    salepriceperiod: string | null
    discountprice: number | null
    discountamount: string | null
    createdat: Date | null
    createdby: number | null
    updatedat: Date | null
    updatedby: number | null
    isactive: number | null
    serviceid: number | null
  }

  export type OfferCountAggregateOutputType = {
    id: number
    name: number
    description: number
    saleprice: number
    salepricecurrency: number
    salepriceperiod: number
    discountprice: number
    discountamount: number
    createdat: number
    createdby: number
    updatedat: number
    updatedby: number
    isactive: number
    serviceid: number
    _all: number
  }


  export type OfferAvgAggregateInputType = {
    id?: true
    saleprice?: true
    discountprice?: true
    createdby?: true
    updatedby?: true
    isactive?: true
    serviceid?: true
  }

  export type OfferSumAggregateInputType = {
    id?: true
    saleprice?: true
    discountprice?: true
    createdby?: true
    updatedby?: true
    isactive?: true
    serviceid?: true
  }

  export type OfferMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    saleprice?: true
    salepricecurrency?: true
    salepriceperiod?: true
    discountprice?: true
    discountamount?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isactive?: true
    serviceid?: true
  }

  export type OfferMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    saleprice?: true
    salepricecurrency?: true
    salepriceperiod?: true
    discountprice?: true
    discountamount?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isactive?: true
    serviceid?: true
  }

  export type OfferCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    saleprice?: true
    salepricecurrency?: true
    salepriceperiod?: true
    discountprice?: true
    discountamount?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isactive?: true
    serviceid?: true
    _all?: true
  }

  export type OfferAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which offer to aggregate.
     */
    where?: offerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offers to fetch.
     */
    orderBy?: offerOrderByWithRelationInput | offerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: offerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned offers
    **/
    _count?: true | OfferCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OfferAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OfferSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OfferMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OfferMaxAggregateInputType
  }

  export type GetOfferAggregateType<T extends OfferAggregateArgs> = {
        [P in keyof T & keyof AggregateOffer]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOffer[P]>
      : GetScalarType<T[P], AggregateOffer[P]>
  }




  export type offerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: offerWhereInput
    orderBy?: offerOrderByWithAggregationInput | offerOrderByWithAggregationInput[]
    by: OfferScalarFieldEnum[] | OfferScalarFieldEnum
    having?: offerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OfferCountAggregateInputType | true
    _avg?: OfferAvgAggregateInputType
    _sum?: OfferSumAggregateInputType
    _min?: OfferMinAggregateInputType
    _max?: OfferMaxAggregateInputType
  }

  export type OfferGroupByOutputType = {
    id: number
    name: string
    description: string
    saleprice: number
    salepricecurrency: string
    salepriceperiod: string
    discountprice: number
    discountamount: string
    createdat: Date
    createdby: number
    updatedat: Date | null
    updatedby: number | null
    isactive: number
    serviceid: number
    _count: OfferCountAggregateOutputType | null
    _avg: OfferAvgAggregateOutputType | null
    _sum: OfferSumAggregateOutputType | null
    _min: OfferMinAggregateOutputType | null
    _max: OfferMaxAggregateOutputType | null
  }

  type GetOfferGroupByPayload<T extends offerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OfferGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OfferGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OfferGroupByOutputType[P]>
            : GetScalarType<T[P], OfferGroupByOutputType[P]>
        }
      >
    >


  export type offerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    saleprice?: boolean
    salepricecurrency?: boolean
    salepriceperiod?: boolean
    discountprice?: boolean
    discountamount?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedat?: boolean
    updatedby?: boolean
    isactive?: boolean
    serviceid?: boolean
    service?: boolean | offer$serviceArgs<ExtArgs>
    useroffers?: boolean | offer$useroffersArgs<ExtArgs>
  }, ExtArgs["result"]["offer"]>

  export type offerSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    saleprice?: boolean
    salepricecurrency?: boolean
    salepriceperiod?: boolean
    discountprice?: boolean
    discountamount?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedat?: boolean
    updatedby?: boolean
    isactive?: boolean
    serviceid?: boolean
  }

  export type offerInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    service?: boolean | offer$serviceArgs<ExtArgs>
    useroffers?: boolean | offer$useroffersArgs<ExtArgs>
  }


  export type $offerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "offer"
    objects: {
      service: Prisma.$servicePayload<ExtArgs> | null
      useroffers: Prisma.$userPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string
      saleprice: number
      salepricecurrency: string
      salepriceperiod: string
      discountprice: number
      discountamount: string
      createdat: Date
      createdby: number
      updatedat: Date | null
      updatedby: number | null
      isactive: number
      serviceid: number
    }, ExtArgs["result"]["offer"]>
    composites: {}
  }


  type offerGetPayload<S extends boolean | null | undefined | offerDefaultArgs> = $Result.GetResult<Prisma.$offerPayload, S>

  type offerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<offerFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: OfferCountAggregateInputType | true
    }

  export interface offerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['offer'], meta: { name: 'offer' } }
    /**
     * Find zero or one Offer that matches the filter.
     * @param {offerFindUniqueArgs} args - Arguments to find a Offer
     * @example
     * // Get one Offer
     * const offer = await prisma.offer.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends offerFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, offerFindUniqueArgs<ExtArgs>>
    ): Prisma__offerClient<$Result.GetResult<Prisma.$offerPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Offer that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {offerFindUniqueOrThrowArgs} args - Arguments to find a Offer
     * @example
     * // Get one Offer
     * const offer = await prisma.offer.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends offerFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, offerFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__offerClient<$Result.GetResult<Prisma.$offerPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Offer that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offerFindFirstArgs} args - Arguments to find a Offer
     * @example
     * // Get one Offer
     * const offer = await prisma.offer.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends offerFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, offerFindFirstArgs<ExtArgs>>
    ): Prisma__offerClient<$Result.GetResult<Prisma.$offerPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Offer that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offerFindFirstOrThrowArgs} args - Arguments to find a Offer
     * @example
     * // Get one Offer
     * const offer = await prisma.offer.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends offerFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, offerFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__offerClient<$Result.GetResult<Prisma.$offerPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Offers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offerFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Offers
     * const offers = await prisma.offer.findMany()
     * 
     * // Get first 10 Offers
     * const offers = await prisma.offer.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const offerWithIdOnly = await prisma.offer.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends offerFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, offerFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$offerPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Offer.
     * @param {offerCreateArgs} args - Arguments to create a Offer.
     * @example
     * // Create one Offer
     * const Offer = await prisma.offer.create({
     *   data: {
     *     // ... data to create a Offer
     *   }
     * })
     * 
    **/
    create<T extends offerCreateArgs<ExtArgs>>(
      args: SelectSubset<T, offerCreateArgs<ExtArgs>>
    ): Prisma__offerClient<$Result.GetResult<Prisma.$offerPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Offers.
     *     @param {offerCreateManyArgs} args - Arguments to create many Offers.
     *     @example
     *     // Create many Offers
     *     const offer = await prisma.offer.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends offerCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, offerCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Offer.
     * @param {offerDeleteArgs} args - Arguments to delete one Offer.
     * @example
     * // Delete one Offer
     * const Offer = await prisma.offer.delete({
     *   where: {
     *     // ... filter to delete one Offer
     *   }
     * })
     * 
    **/
    delete<T extends offerDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, offerDeleteArgs<ExtArgs>>
    ): Prisma__offerClient<$Result.GetResult<Prisma.$offerPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Offer.
     * @param {offerUpdateArgs} args - Arguments to update one Offer.
     * @example
     * // Update one Offer
     * const offer = await prisma.offer.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends offerUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, offerUpdateArgs<ExtArgs>>
    ): Prisma__offerClient<$Result.GetResult<Prisma.$offerPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Offers.
     * @param {offerDeleteManyArgs} args - Arguments to filter Offers to delete.
     * @example
     * // Delete a few Offers
     * const { count } = await prisma.offer.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends offerDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, offerDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Offers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Offers
     * const offer = await prisma.offer.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends offerUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, offerUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Offer.
     * @param {offerUpsertArgs} args - Arguments to update or create a Offer.
     * @example
     * // Update or create a Offer
     * const offer = await prisma.offer.upsert({
     *   create: {
     *     // ... data to create a Offer
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Offer we want to update
     *   }
     * })
    **/
    upsert<T extends offerUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, offerUpsertArgs<ExtArgs>>
    ): Prisma__offerClient<$Result.GetResult<Prisma.$offerPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Offers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offerCountArgs} args - Arguments to filter Offers to count.
     * @example
     * // Count the number of Offers
     * const count = await prisma.offer.count({
     *   where: {
     *     // ... the filter for the Offers we want to count
     *   }
     * })
    **/
    count<T extends offerCountArgs>(
      args?: Subset<T, offerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OfferCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Offer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OfferAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OfferAggregateArgs>(args: Subset<T, OfferAggregateArgs>): Prisma.PrismaPromise<GetOfferAggregateType<T>>

    /**
     * Group by Offer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends offerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: offerGroupByArgs['orderBy'] }
        : { orderBy?: offerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, offerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOfferGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the offer model
   */
  readonly fields: offerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for offer.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__offerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    service<T extends offer$serviceArgs<ExtArgs> = {}>(args?: Subset<T, offer$serviceArgs<ExtArgs>>): Prisma__serviceClient<$Result.GetResult<Prisma.$servicePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    useroffers<T extends offer$useroffersArgs<ExtArgs> = {}>(args?: Subset<T, offer$useroffersArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the offer model
   */ 
  interface offerFieldRefs {
    readonly id: FieldRef<"offer", 'Int'>
    readonly name: FieldRef<"offer", 'String'>
    readonly description: FieldRef<"offer", 'String'>
    readonly saleprice: FieldRef<"offer", 'Float'>
    readonly salepricecurrency: FieldRef<"offer", 'String'>
    readonly salepriceperiod: FieldRef<"offer", 'String'>
    readonly discountprice: FieldRef<"offer", 'Float'>
    readonly discountamount: FieldRef<"offer", 'String'>
    readonly createdat: FieldRef<"offer", 'DateTime'>
    readonly createdby: FieldRef<"offer", 'Int'>
    readonly updatedat: FieldRef<"offer", 'DateTime'>
    readonly updatedby: FieldRef<"offer", 'Int'>
    readonly isactive: FieldRef<"offer", 'Int'>
    readonly serviceid: FieldRef<"offer", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * offer findUnique
   */
  export type offerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offer
     */
    select?: offerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: offerInclude<ExtArgs> | null
    /**
     * Filter, which offer to fetch.
     */
    where: offerWhereUniqueInput
  }


  /**
   * offer findUniqueOrThrow
   */
  export type offerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offer
     */
    select?: offerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: offerInclude<ExtArgs> | null
    /**
     * Filter, which offer to fetch.
     */
    where: offerWhereUniqueInput
  }


  /**
   * offer findFirst
   */
  export type offerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offer
     */
    select?: offerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: offerInclude<ExtArgs> | null
    /**
     * Filter, which offer to fetch.
     */
    where?: offerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offers to fetch.
     */
    orderBy?: offerOrderByWithRelationInput | offerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for offers.
     */
    cursor?: offerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of offers.
     */
    distinct?: OfferScalarFieldEnum | OfferScalarFieldEnum[]
  }


  /**
   * offer findFirstOrThrow
   */
  export type offerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offer
     */
    select?: offerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: offerInclude<ExtArgs> | null
    /**
     * Filter, which offer to fetch.
     */
    where?: offerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offers to fetch.
     */
    orderBy?: offerOrderByWithRelationInput | offerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for offers.
     */
    cursor?: offerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of offers.
     */
    distinct?: OfferScalarFieldEnum | OfferScalarFieldEnum[]
  }


  /**
   * offer findMany
   */
  export type offerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offer
     */
    select?: offerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: offerInclude<ExtArgs> | null
    /**
     * Filter, which offers to fetch.
     */
    where?: offerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offers to fetch.
     */
    orderBy?: offerOrderByWithRelationInput | offerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing offers.
     */
    cursor?: offerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offers.
     */
    skip?: number
    distinct?: OfferScalarFieldEnum | OfferScalarFieldEnum[]
  }


  /**
   * offer create
   */
  export type offerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offer
     */
    select?: offerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: offerInclude<ExtArgs> | null
    /**
     * The data needed to create a offer.
     */
    data: XOR<offerCreateInput, offerUncheckedCreateInput>
  }


  /**
   * offer createMany
   */
  export type offerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many offers.
     */
    data: offerCreateManyInput | offerCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * offer update
   */
  export type offerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offer
     */
    select?: offerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: offerInclude<ExtArgs> | null
    /**
     * The data needed to update a offer.
     */
    data: XOR<offerUpdateInput, offerUncheckedUpdateInput>
    /**
     * Choose, which offer to update.
     */
    where: offerWhereUniqueInput
  }


  /**
   * offer updateMany
   */
  export type offerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update offers.
     */
    data: XOR<offerUpdateManyMutationInput, offerUncheckedUpdateManyInput>
    /**
     * Filter which offers to update
     */
    where?: offerWhereInput
  }


  /**
   * offer upsert
   */
  export type offerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offer
     */
    select?: offerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: offerInclude<ExtArgs> | null
    /**
     * The filter to search for the offer to update in case it exists.
     */
    where: offerWhereUniqueInput
    /**
     * In case the offer found by the `where` argument doesn't exist, create a new offer with this data.
     */
    create: XOR<offerCreateInput, offerUncheckedCreateInput>
    /**
     * In case the offer was found with the provided `where` argument, update it with this data.
     */
    update: XOR<offerUpdateInput, offerUncheckedUpdateInput>
  }


  /**
   * offer delete
   */
  export type offerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offer
     */
    select?: offerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: offerInclude<ExtArgs> | null
    /**
     * Filter which offer to delete.
     */
    where: offerWhereUniqueInput
  }


  /**
   * offer deleteMany
   */
  export type offerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which offers to delete
     */
    where?: offerWhereInput
  }


  /**
   * offer.service
   */
  export type offer$serviceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service
     */
    select?: serviceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: serviceInclude<ExtArgs> | null
    where?: serviceWhereInput
  }


  /**
   * offer.useroffers
   */
  export type offer$useroffersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
  }


  /**
   * offer without action
   */
  export type offerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offer
     */
    select?: offerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: offerInclude<ExtArgs> | null
  }



  /**
   * Model newsletter
   */

  export type AggregateNewsletter = {
    _count: NewsletterCountAggregateOutputType | null
    _avg: NewsletterAvgAggregateOutputType | null
    _sum: NewsletterSumAggregateOutputType | null
    _min: NewsletterMinAggregateOutputType | null
    _max: NewsletterMaxAggregateOutputType | null
  }

  export type NewsletterAvgAggregateOutputType = {
    id: number | null
    createdby: number | null
    updatedby: number | null
  }

  export type NewsletterSumAggregateOutputType = {
    id: number | null
    createdby: number | null
    updatedby: number | null
  }

  export type NewsletterMinAggregateOutputType = {
    id: number | null
    email: string | null
    createdat: Date | null
    createdby: number | null
    updatedat: Date | null
    updatedby: number | null
  }

  export type NewsletterMaxAggregateOutputType = {
    id: number | null
    email: string | null
    createdat: Date | null
    createdby: number | null
    updatedat: Date | null
    updatedby: number | null
  }

  export type NewsletterCountAggregateOutputType = {
    id: number
    email: number
    createdat: number
    createdby: number
    updatedat: number
    updatedby: number
    _all: number
  }


  export type NewsletterAvgAggregateInputType = {
    id?: true
    createdby?: true
    updatedby?: true
  }

  export type NewsletterSumAggregateInputType = {
    id?: true
    createdby?: true
    updatedby?: true
  }

  export type NewsletterMinAggregateInputType = {
    id?: true
    email?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
  }

  export type NewsletterMaxAggregateInputType = {
    id?: true
    email?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
  }

  export type NewsletterCountAggregateInputType = {
    id?: true
    email?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    _all?: true
  }

  export type NewsletterAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which newsletter to aggregate.
     */
    where?: newsletterWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of newsletters to fetch.
     */
    orderBy?: newsletterOrderByWithRelationInput | newsletterOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: newsletterWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` newsletters from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` newsletters.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned newsletters
    **/
    _count?: true | NewsletterCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NewsletterAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NewsletterSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NewsletterMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NewsletterMaxAggregateInputType
  }

  export type GetNewsletterAggregateType<T extends NewsletterAggregateArgs> = {
        [P in keyof T & keyof AggregateNewsletter]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNewsletter[P]>
      : GetScalarType<T[P], AggregateNewsletter[P]>
  }




  export type newsletterGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: newsletterWhereInput
    orderBy?: newsletterOrderByWithAggregationInput | newsletterOrderByWithAggregationInput[]
    by: NewsletterScalarFieldEnum[] | NewsletterScalarFieldEnum
    having?: newsletterScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NewsletterCountAggregateInputType | true
    _avg?: NewsletterAvgAggregateInputType
    _sum?: NewsletterSumAggregateInputType
    _min?: NewsletterMinAggregateInputType
    _max?: NewsletterMaxAggregateInputType
  }

  export type NewsletterGroupByOutputType = {
    id: number
    email: string
    createdat: Date
    createdby: number
    updatedat: Date | null
    updatedby: number | null
    _count: NewsletterCountAggregateOutputType | null
    _avg: NewsletterAvgAggregateOutputType | null
    _sum: NewsletterSumAggregateOutputType | null
    _min: NewsletterMinAggregateOutputType | null
    _max: NewsletterMaxAggregateOutputType | null
  }

  type GetNewsletterGroupByPayload<T extends newsletterGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NewsletterGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NewsletterGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NewsletterGroupByOutputType[P]>
            : GetScalarType<T[P], NewsletterGroupByOutputType[P]>
        }
      >
    >


  export type newsletterSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedat?: boolean
    updatedby?: boolean
  }, ExtArgs["result"]["newsletter"]>

  export type newsletterSelectScalar = {
    id?: boolean
    email?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedat?: boolean
    updatedby?: boolean
  }


  export type $newsletterPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "newsletter"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      email: string
      createdat: Date
      createdby: number
      updatedat: Date | null
      updatedby: number | null
    }, ExtArgs["result"]["newsletter"]>
    composites: {}
  }


  type newsletterGetPayload<S extends boolean | null | undefined | newsletterDefaultArgs> = $Result.GetResult<Prisma.$newsletterPayload, S>

  type newsletterCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<newsletterFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: NewsletterCountAggregateInputType | true
    }

  export interface newsletterDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['newsletter'], meta: { name: 'newsletter' } }
    /**
     * Find zero or one Newsletter that matches the filter.
     * @param {newsletterFindUniqueArgs} args - Arguments to find a Newsletter
     * @example
     * // Get one Newsletter
     * const newsletter = await prisma.newsletter.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends newsletterFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, newsletterFindUniqueArgs<ExtArgs>>
    ): Prisma__newsletterClient<$Result.GetResult<Prisma.$newsletterPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Newsletter that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {newsletterFindUniqueOrThrowArgs} args - Arguments to find a Newsletter
     * @example
     * // Get one Newsletter
     * const newsletter = await prisma.newsletter.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends newsletterFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, newsletterFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__newsletterClient<$Result.GetResult<Prisma.$newsletterPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Newsletter that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {newsletterFindFirstArgs} args - Arguments to find a Newsletter
     * @example
     * // Get one Newsletter
     * const newsletter = await prisma.newsletter.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends newsletterFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, newsletterFindFirstArgs<ExtArgs>>
    ): Prisma__newsletterClient<$Result.GetResult<Prisma.$newsletterPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Newsletter that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {newsletterFindFirstOrThrowArgs} args - Arguments to find a Newsletter
     * @example
     * // Get one Newsletter
     * const newsletter = await prisma.newsletter.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends newsletterFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, newsletterFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__newsletterClient<$Result.GetResult<Prisma.$newsletterPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Newsletters that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {newsletterFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Newsletters
     * const newsletters = await prisma.newsletter.findMany()
     * 
     * // Get first 10 Newsletters
     * const newsletters = await prisma.newsletter.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const newsletterWithIdOnly = await prisma.newsletter.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends newsletterFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, newsletterFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$newsletterPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Newsletter.
     * @param {newsletterCreateArgs} args - Arguments to create a Newsletter.
     * @example
     * // Create one Newsletter
     * const Newsletter = await prisma.newsletter.create({
     *   data: {
     *     // ... data to create a Newsletter
     *   }
     * })
     * 
    **/
    create<T extends newsletterCreateArgs<ExtArgs>>(
      args: SelectSubset<T, newsletterCreateArgs<ExtArgs>>
    ): Prisma__newsletterClient<$Result.GetResult<Prisma.$newsletterPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Newsletters.
     *     @param {newsletterCreateManyArgs} args - Arguments to create many Newsletters.
     *     @example
     *     // Create many Newsletters
     *     const newsletter = await prisma.newsletter.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends newsletterCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, newsletterCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Newsletter.
     * @param {newsletterDeleteArgs} args - Arguments to delete one Newsletter.
     * @example
     * // Delete one Newsletter
     * const Newsletter = await prisma.newsletter.delete({
     *   where: {
     *     // ... filter to delete one Newsletter
     *   }
     * })
     * 
    **/
    delete<T extends newsletterDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, newsletterDeleteArgs<ExtArgs>>
    ): Prisma__newsletterClient<$Result.GetResult<Prisma.$newsletterPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Newsletter.
     * @param {newsletterUpdateArgs} args - Arguments to update one Newsletter.
     * @example
     * // Update one Newsletter
     * const newsletter = await prisma.newsletter.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends newsletterUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, newsletterUpdateArgs<ExtArgs>>
    ): Prisma__newsletterClient<$Result.GetResult<Prisma.$newsletterPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Newsletters.
     * @param {newsletterDeleteManyArgs} args - Arguments to filter Newsletters to delete.
     * @example
     * // Delete a few Newsletters
     * const { count } = await prisma.newsletter.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends newsletterDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, newsletterDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Newsletters.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {newsletterUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Newsletters
     * const newsletter = await prisma.newsletter.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends newsletterUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, newsletterUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Newsletter.
     * @param {newsletterUpsertArgs} args - Arguments to update or create a Newsletter.
     * @example
     * // Update or create a Newsletter
     * const newsletter = await prisma.newsletter.upsert({
     *   create: {
     *     // ... data to create a Newsletter
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Newsletter we want to update
     *   }
     * })
    **/
    upsert<T extends newsletterUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, newsletterUpsertArgs<ExtArgs>>
    ): Prisma__newsletterClient<$Result.GetResult<Prisma.$newsletterPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Newsletters.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {newsletterCountArgs} args - Arguments to filter Newsletters to count.
     * @example
     * // Count the number of Newsletters
     * const count = await prisma.newsletter.count({
     *   where: {
     *     // ... the filter for the Newsletters we want to count
     *   }
     * })
    **/
    count<T extends newsletterCountArgs>(
      args?: Subset<T, newsletterCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NewsletterCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Newsletter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsletterAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NewsletterAggregateArgs>(args: Subset<T, NewsletterAggregateArgs>): Prisma.PrismaPromise<GetNewsletterAggregateType<T>>

    /**
     * Group by Newsletter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {newsletterGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends newsletterGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: newsletterGroupByArgs['orderBy'] }
        : { orderBy?: newsletterGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, newsletterGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNewsletterGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the newsletter model
   */
  readonly fields: newsletterFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for newsletter.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__newsletterClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the newsletter model
   */ 
  interface newsletterFieldRefs {
    readonly id: FieldRef<"newsletter", 'Int'>
    readonly email: FieldRef<"newsletter", 'String'>
    readonly createdat: FieldRef<"newsletter", 'DateTime'>
    readonly createdby: FieldRef<"newsletter", 'Int'>
    readonly updatedat: FieldRef<"newsletter", 'DateTime'>
    readonly updatedby: FieldRef<"newsletter", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * newsletter findUnique
   */
  export type newsletterFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the newsletter
     */
    select?: newsletterSelect<ExtArgs> | null
    /**
     * Filter, which newsletter to fetch.
     */
    where: newsletterWhereUniqueInput
  }


  /**
   * newsletter findUniqueOrThrow
   */
  export type newsletterFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the newsletter
     */
    select?: newsletterSelect<ExtArgs> | null
    /**
     * Filter, which newsletter to fetch.
     */
    where: newsletterWhereUniqueInput
  }


  /**
   * newsletter findFirst
   */
  export type newsletterFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the newsletter
     */
    select?: newsletterSelect<ExtArgs> | null
    /**
     * Filter, which newsletter to fetch.
     */
    where?: newsletterWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of newsletters to fetch.
     */
    orderBy?: newsletterOrderByWithRelationInput | newsletterOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for newsletters.
     */
    cursor?: newsletterWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` newsletters from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` newsletters.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of newsletters.
     */
    distinct?: NewsletterScalarFieldEnum | NewsletterScalarFieldEnum[]
  }


  /**
   * newsletter findFirstOrThrow
   */
  export type newsletterFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the newsletter
     */
    select?: newsletterSelect<ExtArgs> | null
    /**
     * Filter, which newsletter to fetch.
     */
    where?: newsletterWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of newsletters to fetch.
     */
    orderBy?: newsletterOrderByWithRelationInput | newsletterOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for newsletters.
     */
    cursor?: newsletterWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` newsletters from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` newsletters.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of newsletters.
     */
    distinct?: NewsletterScalarFieldEnum | NewsletterScalarFieldEnum[]
  }


  /**
   * newsletter findMany
   */
  export type newsletterFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the newsletter
     */
    select?: newsletterSelect<ExtArgs> | null
    /**
     * Filter, which newsletters to fetch.
     */
    where?: newsletterWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of newsletters to fetch.
     */
    orderBy?: newsletterOrderByWithRelationInput | newsletterOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing newsletters.
     */
    cursor?: newsletterWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` newsletters from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` newsletters.
     */
    skip?: number
    distinct?: NewsletterScalarFieldEnum | NewsletterScalarFieldEnum[]
  }


  /**
   * newsletter create
   */
  export type newsletterCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the newsletter
     */
    select?: newsletterSelect<ExtArgs> | null
    /**
     * The data needed to create a newsletter.
     */
    data: XOR<newsletterCreateInput, newsletterUncheckedCreateInput>
  }


  /**
   * newsletter createMany
   */
  export type newsletterCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many newsletters.
     */
    data: newsletterCreateManyInput | newsletterCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * newsletter update
   */
  export type newsletterUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the newsletter
     */
    select?: newsletterSelect<ExtArgs> | null
    /**
     * The data needed to update a newsletter.
     */
    data: XOR<newsletterUpdateInput, newsletterUncheckedUpdateInput>
    /**
     * Choose, which newsletter to update.
     */
    where: newsletterWhereUniqueInput
  }


  /**
   * newsletter updateMany
   */
  export type newsletterUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update newsletters.
     */
    data: XOR<newsletterUpdateManyMutationInput, newsletterUncheckedUpdateManyInput>
    /**
     * Filter which newsletters to update
     */
    where?: newsletterWhereInput
  }


  /**
   * newsletter upsert
   */
  export type newsletterUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the newsletter
     */
    select?: newsletterSelect<ExtArgs> | null
    /**
     * The filter to search for the newsletter to update in case it exists.
     */
    where: newsletterWhereUniqueInput
    /**
     * In case the newsletter found by the `where` argument doesn't exist, create a new newsletter with this data.
     */
    create: XOR<newsletterCreateInput, newsletterUncheckedCreateInput>
    /**
     * In case the newsletter was found with the provided `where` argument, update it with this data.
     */
    update: XOR<newsletterUpdateInput, newsletterUncheckedUpdateInput>
  }


  /**
   * newsletter delete
   */
  export type newsletterDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the newsletter
     */
    select?: newsletterSelect<ExtArgs> | null
    /**
     * Filter which newsletter to delete.
     */
    where: newsletterWhereUniqueInput
  }


  /**
   * newsletter deleteMany
   */
  export type newsletterDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which newsletters to delete
     */
    where?: newsletterWhereInput
  }


  /**
   * newsletter without action
   */
  export type newsletterDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the newsletter
     */
    select?: newsletterSelect<ExtArgs> | null
  }



  /**
   * Model contact
   */

  export type AggregateContact = {
    _count: ContactCountAggregateOutputType | null
    _avg: ContactAvgAggregateOutputType | null
    _sum: ContactSumAggregateOutputType | null
    _min: ContactMinAggregateOutputType | null
    _max: ContactMaxAggregateOutputType | null
  }

  export type ContactAvgAggregateOutputType = {
    id: number | null
    createdby: number | null
    updatedby: number | null
    isclosed: number | null
    servicecategoryid: number | null
    serviceid: number | null
  }

  export type ContactSumAggregateOutputType = {
    id: number | null
    createdby: number | null
    updatedby: number | null
    isclosed: number | null
    servicecategoryid: number | null
    serviceid: number | null
  }

  export type ContactMinAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    phone: string | null
    message: string | null
    attachment: string | null
    createdat: Date | null
    createdby: number | null
    updatedat: Date | null
    updatedby: number | null
    isclosed: number | null
    servicecategoryid: number | null
    serviceid: number | null
  }

  export type ContactMaxAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    phone: string | null
    message: string | null
    attachment: string | null
    createdat: Date | null
    createdby: number | null
    updatedat: Date | null
    updatedby: number | null
    isclosed: number | null
    servicecategoryid: number | null
    serviceid: number | null
  }

  export type ContactCountAggregateOutputType = {
    id: number
    name: number
    email: number
    phone: number
    message: number
    attachment: number
    createdat: number
    createdby: number
    updatedat: number
    updatedby: number
    isclosed: number
    servicecategoryid: number
    serviceid: number
    _all: number
  }


  export type ContactAvgAggregateInputType = {
    id?: true
    createdby?: true
    updatedby?: true
    isclosed?: true
    servicecategoryid?: true
    serviceid?: true
  }

  export type ContactSumAggregateInputType = {
    id?: true
    createdby?: true
    updatedby?: true
    isclosed?: true
    servicecategoryid?: true
    serviceid?: true
  }

  export type ContactMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    phone?: true
    message?: true
    attachment?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isclosed?: true
    servicecategoryid?: true
    serviceid?: true
  }

  export type ContactMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    phone?: true
    message?: true
    attachment?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isclosed?: true
    servicecategoryid?: true
    serviceid?: true
  }

  export type ContactCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    phone?: true
    message?: true
    attachment?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isclosed?: true
    servicecategoryid?: true
    serviceid?: true
    _all?: true
  }

  export type ContactAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which contact to aggregate.
     */
    where?: contactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contacts to fetch.
     */
    orderBy?: contactOrderByWithRelationInput | contactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: contactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned contacts
    **/
    _count?: true | ContactCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ContactAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ContactSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ContactMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ContactMaxAggregateInputType
  }

  export type GetContactAggregateType<T extends ContactAggregateArgs> = {
        [P in keyof T & keyof AggregateContact]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateContact[P]>
      : GetScalarType<T[P], AggregateContact[P]>
  }




  export type contactGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: contactWhereInput
    orderBy?: contactOrderByWithAggregationInput | contactOrderByWithAggregationInput[]
    by: ContactScalarFieldEnum[] | ContactScalarFieldEnum
    having?: contactScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ContactCountAggregateInputType | true
    _avg?: ContactAvgAggregateInputType
    _sum?: ContactSumAggregateInputType
    _min?: ContactMinAggregateInputType
    _max?: ContactMaxAggregateInputType
  }

  export type ContactGroupByOutputType = {
    id: number
    name: string
    email: string
    phone: string
    message: string
    attachment: string | null
    createdat: Date
    createdby: number
    updatedat: Date | null
    updatedby: number | null
    isclosed: number
    servicecategoryid: number
    serviceid: number
    _count: ContactCountAggregateOutputType | null
    _avg: ContactAvgAggregateOutputType | null
    _sum: ContactSumAggregateOutputType | null
    _min: ContactMinAggregateOutputType | null
    _max: ContactMaxAggregateOutputType | null
  }

  type GetContactGroupByPayload<T extends contactGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ContactGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ContactGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ContactGroupByOutputType[P]>
            : GetScalarType<T[P], ContactGroupByOutputType[P]>
        }
      >
    >


  export type contactSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    phone?: boolean
    message?: boolean
    attachment?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedat?: boolean
    updatedby?: boolean
    isclosed?: boolean
    servicecategoryid?: boolean
    serviceid?: boolean
    servicecategory?: boolean | contact$servicecategoryArgs<ExtArgs>
    service?: boolean | contact$serviceArgs<ExtArgs>
    usercontacts?: boolean | contact$usercontactsArgs<ExtArgs>
  }, ExtArgs["result"]["contact"]>

  export type contactSelectScalar = {
    id?: boolean
    name?: boolean
    email?: boolean
    phone?: boolean
    message?: boolean
    attachment?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedat?: boolean
    updatedby?: boolean
    isclosed?: boolean
    servicecategoryid?: boolean
    serviceid?: boolean
  }

  export type contactInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    servicecategory?: boolean | contact$servicecategoryArgs<ExtArgs>
    service?: boolean | contact$serviceArgs<ExtArgs>
    usercontacts?: boolean | contact$usercontactsArgs<ExtArgs>
  }


  export type $contactPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "contact"
    objects: {
      servicecategory: Prisma.$servicecategoryPayload<ExtArgs> | null
      service: Prisma.$servicePayload<ExtArgs> | null
      usercontacts: Prisma.$userPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      email: string
      phone: string
      message: string
      attachment: string | null
      createdat: Date
      createdby: number
      updatedat: Date | null
      updatedby: number | null
      isclosed: number
      servicecategoryid: number
      serviceid: number
    }, ExtArgs["result"]["contact"]>
    composites: {}
  }


  type contactGetPayload<S extends boolean | null | undefined | contactDefaultArgs> = $Result.GetResult<Prisma.$contactPayload, S>

  type contactCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<contactFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ContactCountAggregateInputType | true
    }

  export interface contactDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['contact'], meta: { name: 'contact' } }
    /**
     * Find zero or one Contact that matches the filter.
     * @param {contactFindUniqueArgs} args - Arguments to find a Contact
     * @example
     * // Get one Contact
     * const contact = await prisma.contact.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends contactFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, contactFindUniqueArgs<ExtArgs>>
    ): Prisma__contactClient<$Result.GetResult<Prisma.$contactPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Contact that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {contactFindUniqueOrThrowArgs} args - Arguments to find a Contact
     * @example
     * // Get one Contact
     * const contact = await prisma.contact.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends contactFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, contactFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__contactClient<$Result.GetResult<Prisma.$contactPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Contact that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contactFindFirstArgs} args - Arguments to find a Contact
     * @example
     * // Get one Contact
     * const contact = await prisma.contact.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends contactFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, contactFindFirstArgs<ExtArgs>>
    ): Prisma__contactClient<$Result.GetResult<Prisma.$contactPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Contact that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contactFindFirstOrThrowArgs} args - Arguments to find a Contact
     * @example
     * // Get one Contact
     * const contact = await prisma.contact.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends contactFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, contactFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__contactClient<$Result.GetResult<Prisma.$contactPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Contacts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contactFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Contacts
     * const contacts = await prisma.contact.findMany()
     * 
     * // Get first 10 Contacts
     * const contacts = await prisma.contact.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const contactWithIdOnly = await prisma.contact.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends contactFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, contactFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$contactPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Contact.
     * @param {contactCreateArgs} args - Arguments to create a Contact.
     * @example
     * // Create one Contact
     * const Contact = await prisma.contact.create({
     *   data: {
     *     // ... data to create a Contact
     *   }
     * })
     * 
    **/
    create<T extends contactCreateArgs<ExtArgs>>(
      args: SelectSubset<T, contactCreateArgs<ExtArgs>>
    ): Prisma__contactClient<$Result.GetResult<Prisma.$contactPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Contacts.
     *     @param {contactCreateManyArgs} args - Arguments to create many Contacts.
     *     @example
     *     // Create many Contacts
     *     const contact = await prisma.contact.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends contactCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, contactCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Contact.
     * @param {contactDeleteArgs} args - Arguments to delete one Contact.
     * @example
     * // Delete one Contact
     * const Contact = await prisma.contact.delete({
     *   where: {
     *     // ... filter to delete one Contact
     *   }
     * })
     * 
    **/
    delete<T extends contactDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, contactDeleteArgs<ExtArgs>>
    ): Prisma__contactClient<$Result.GetResult<Prisma.$contactPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Contact.
     * @param {contactUpdateArgs} args - Arguments to update one Contact.
     * @example
     * // Update one Contact
     * const contact = await prisma.contact.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends contactUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, contactUpdateArgs<ExtArgs>>
    ): Prisma__contactClient<$Result.GetResult<Prisma.$contactPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Contacts.
     * @param {contactDeleteManyArgs} args - Arguments to filter Contacts to delete.
     * @example
     * // Delete a few Contacts
     * const { count } = await prisma.contact.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends contactDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, contactDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Contacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contactUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Contacts
     * const contact = await prisma.contact.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends contactUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, contactUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Contact.
     * @param {contactUpsertArgs} args - Arguments to update or create a Contact.
     * @example
     * // Update or create a Contact
     * const contact = await prisma.contact.upsert({
     *   create: {
     *     // ... data to create a Contact
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Contact we want to update
     *   }
     * })
    **/
    upsert<T extends contactUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, contactUpsertArgs<ExtArgs>>
    ): Prisma__contactClient<$Result.GetResult<Prisma.$contactPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Contacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contactCountArgs} args - Arguments to filter Contacts to count.
     * @example
     * // Count the number of Contacts
     * const count = await prisma.contact.count({
     *   where: {
     *     // ... the filter for the Contacts we want to count
     *   }
     * })
    **/
    count<T extends contactCountArgs>(
      args?: Subset<T, contactCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ContactCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Contact.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ContactAggregateArgs>(args: Subset<T, ContactAggregateArgs>): Prisma.PrismaPromise<GetContactAggregateType<T>>

    /**
     * Group by Contact.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contactGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends contactGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: contactGroupByArgs['orderBy'] }
        : { orderBy?: contactGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, contactGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetContactGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the contact model
   */
  readonly fields: contactFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for contact.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__contactClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    servicecategory<T extends contact$servicecategoryArgs<ExtArgs> = {}>(args?: Subset<T, contact$servicecategoryArgs<ExtArgs>>): Prisma__servicecategoryClient<$Result.GetResult<Prisma.$servicecategoryPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    service<T extends contact$serviceArgs<ExtArgs> = {}>(args?: Subset<T, contact$serviceArgs<ExtArgs>>): Prisma__serviceClient<$Result.GetResult<Prisma.$servicePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    usercontacts<T extends contact$usercontactsArgs<ExtArgs> = {}>(args?: Subset<T, contact$usercontactsArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the contact model
   */ 
  interface contactFieldRefs {
    readonly id: FieldRef<"contact", 'Int'>
    readonly name: FieldRef<"contact", 'String'>
    readonly email: FieldRef<"contact", 'String'>
    readonly phone: FieldRef<"contact", 'String'>
    readonly message: FieldRef<"contact", 'String'>
    readonly attachment: FieldRef<"contact", 'String'>
    readonly createdat: FieldRef<"contact", 'DateTime'>
    readonly createdby: FieldRef<"contact", 'Int'>
    readonly updatedat: FieldRef<"contact", 'DateTime'>
    readonly updatedby: FieldRef<"contact", 'Int'>
    readonly isclosed: FieldRef<"contact", 'Int'>
    readonly servicecategoryid: FieldRef<"contact", 'Int'>
    readonly serviceid: FieldRef<"contact", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * contact findUnique
   */
  export type contactFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact
     */
    select?: contactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contactInclude<ExtArgs> | null
    /**
     * Filter, which contact to fetch.
     */
    where: contactWhereUniqueInput
  }


  /**
   * contact findUniqueOrThrow
   */
  export type contactFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact
     */
    select?: contactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contactInclude<ExtArgs> | null
    /**
     * Filter, which contact to fetch.
     */
    where: contactWhereUniqueInput
  }


  /**
   * contact findFirst
   */
  export type contactFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact
     */
    select?: contactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contactInclude<ExtArgs> | null
    /**
     * Filter, which contact to fetch.
     */
    where?: contactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contacts to fetch.
     */
    orderBy?: contactOrderByWithRelationInput | contactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for contacts.
     */
    cursor?: contactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of contacts.
     */
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }


  /**
   * contact findFirstOrThrow
   */
  export type contactFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact
     */
    select?: contactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contactInclude<ExtArgs> | null
    /**
     * Filter, which contact to fetch.
     */
    where?: contactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contacts to fetch.
     */
    orderBy?: contactOrderByWithRelationInput | contactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for contacts.
     */
    cursor?: contactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of contacts.
     */
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }


  /**
   * contact findMany
   */
  export type contactFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact
     */
    select?: contactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contactInclude<ExtArgs> | null
    /**
     * Filter, which contacts to fetch.
     */
    where?: contactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contacts to fetch.
     */
    orderBy?: contactOrderByWithRelationInput | contactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing contacts.
     */
    cursor?: contactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contacts.
     */
    skip?: number
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }


  /**
   * contact create
   */
  export type contactCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact
     */
    select?: contactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contactInclude<ExtArgs> | null
    /**
     * The data needed to create a contact.
     */
    data: XOR<contactCreateInput, contactUncheckedCreateInput>
  }


  /**
   * contact createMany
   */
  export type contactCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many contacts.
     */
    data: contactCreateManyInput | contactCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * contact update
   */
  export type contactUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact
     */
    select?: contactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contactInclude<ExtArgs> | null
    /**
     * The data needed to update a contact.
     */
    data: XOR<contactUpdateInput, contactUncheckedUpdateInput>
    /**
     * Choose, which contact to update.
     */
    where: contactWhereUniqueInput
  }


  /**
   * contact updateMany
   */
  export type contactUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update contacts.
     */
    data: XOR<contactUpdateManyMutationInput, contactUncheckedUpdateManyInput>
    /**
     * Filter which contacts to update
     */
    where?: contactWhereInput
  }


  /**
   * contact upsert
   */
  export type contactUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact
     */
    select?: contactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contactInclude<ExtArgs> | null
    /**
     * The filter to search for the contact to update in case it exists.
     */
    where: contactWhereUniqueInput
    /**
     * In case the contact found by the `where` argument doesn't exist, create a new contact with this data.
     */
    create: XOR<contactCreateInput, contactUncheckedCreateInput>
    /**
     * In case the contact was found with the provided `where` argument, update it with this data.
     */
    update: XOR<contactUpdateInput, contactUncheckedUpdateInput>
  }


  /**
   * contact delete
   */
  export type contactDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact
     */
    select?: contactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contactInclude<ExtArgs> | null
    /**
     * Filter which contact to delete.
     */
    where: contactWhereUniqueInput
  }


  /**
   * contact deleteMany
   */
  export type contactDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which contacts to delete
     */
    where?: contactWhereInput
  }


  /**
   * contact.servicecategory
   */
  export type contact$servicecategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicecategory
     */
    select?: servicecategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: servicecategoryInclude<ExtArgs> | null
    where?: servicecategoryWhereInput
  }


  /**
   * contact.service
   */
  export type contact$serviceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service
     */
    select?: serviceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: serviceInclude<ExtArgs> | null
    where?: serviceWhereInput
  }


  /**
   * contact.usercontacts
   */
  export type contact$usercontactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
  }


  /**
   * contact without action
   */
  export type contactDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact
     */
    select?: contactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contactInclude<ExtArgs> | null
  }



  /**
   * Model page
   */

  export type AggregatePage = {
    _count: PageCountAggregateOutputType | null
    _avg: PageAvgAggregateOutputType | null
    _sum: PageSumAggregateOutputType | null
    _min: PageMinAggregateOutputType | null
    _max: PageMaxAggregateOutputType | null
  }

  export type PageAvgAggregateOutputType = {
    id: number | null
    metaid: number | null
    createdby: number | null
    updatedby: number | null
    isactive: number | null
    serviceid: number | null
  }

  export type PageSumAggregateOutputType = {
    id: number | null
    metaid: number | null
    createdby: number | null
    updatedby: number | null
    isactive: number | null
    serviceid: number | null
  }

  export type PageMinAggregateOutputType = {
    id: number | null
    metaid: number | null
    name: string | null
    content: string | null
    slug: string | null
    createdat: Date | null
    createdby: number | null
    updatedat: Date | null
    updatedby: number | null
    isactive: number | null
    serviceid: number | null
  }

  export type PageMaxAggregateOutputType = {
    id: number | null
    metaid: number | null
    name: string | null
    content: string | null
    slug: string | null
    createdat: Date | null
    createdby: number | null
    updatedat: Date | null
    updatedby: number | null
    isactive: number | null
    serviceid: number | null
  }

  export type PageCountAggregateOutputType = {
    id: number
    metaid: number
    name: number
    content: number
    slug: number
    createdat: number
    createdby: number
    updatedat: number
    updatedby: number
    isactive: number
    serviceid: number
    _all: number
  }


  export type PageAvgAggregateInputType = {
    id?: true
    metaid?: true
    createdby?: true
    updatedby?: true
    isactive?: true
    serviceid?: true
  }

  export type PageSumAggregateInputType = {
    id?: true
    metaid?: true
    createdby?: true
    updatedby?: true
    isactive?: true
    serviceid?: true
  }

  export type PageMinAggregateInputType = {
    id?: true
    metaid?: true
    name?: true
    content?: true
    slug?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isactive?: true
    serviceid?: true
  }

  export type PageMaxAggregateInputType = {
    id?: true
    metaid?: true
    name?: true
    content?: true
    slug?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isactive?: true
    serviceid?: true
  }

  export type PageCountAggregateInputType = {
    id?: true
    metaid?: true
    name?: true
    content?: true
    slug?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isactive?: true
    serviceid?: true
    _all?: true
  }

  export type PageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which page to aggregate.
     */
    where?: pageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pages to fetch.
     */
    orderBy?: pageOrderByWithRelationInput | pageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: pageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned pages
    **/
    _count?: true | PageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PageMaxAggregateInputType
  }

  export type GetPageAggregateType<T extends PageAggregateArgs> = {
        [P in keyof T & keyof AggregatePage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePage[P]>
      : GetScalarType<T[P], AggregatePage[P]>
  }




  export type pageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pageWhereInput
    orderBy?: pageOrderByWithAggregationInput | pageOrderByWithAggregationInput[]
    by: PageScalarFieldEnum[] | PageScalarFieldEnum
    having?: pageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PageCountAggregateInputType | true
    _avg?: PageAvgAggregateInputType
    _sum?: PageSumAggregateInputType
    _min?: PageMinAggregateInputType
    _max?: PageMaxAggregateInputType
  }

  export type PageGroupByOutputType = {
    id: number
    metaid: number
    name: string
    content: string
    slug: string
    createdat: Date
    createdby: number
    updatedat: Date | null
    updatedby: number | null
    isactive: number
    serviceid: number
    _count: PageCountAggregateOutputType | null
    _avg: PageAvgAggregateOutputType | null
    _sum: PageSumAggregateOutputType | null
    _min: PageMinAggregateOutputType | null
    _max: PageMaxAggregateOutputType | null
  }

  type GetPageGroupByPayload<T extends pageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PageGroupByOutputType[P]>
            : GetScalarType<T[P], PageGroupByOutputType[P]>
        }
      >
    >


  export type pageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    metaid?: boolean
    name?: boolean
    content?: boolean
    slug?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedat?: boolean
    updatedby?: boolean
    isactive?: boolean
    serviceid?: boolean
    service?: boolean | page$serviceArgs<ExtArgs>
    userpages?: boolean | page$userpagesArgs<ExtArgs>
    metatags?: boolean | page$metatagsArgs<ExtArgs>
  }, ExtArgs["result"]["page"]>

  export type pageSelectScalar = {
    id?: boolean
    metaid?: boolean
    name?: boolean
    content?: boolean
    slug?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedat?: boolean
    updatedby?: boolean
    isactive?: boolean
    serviceid?: boolean
  }

  export type pageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    service?: boolean | page$serviceArgs<ExtArgs>
    userpages?: boolean | page$userpagesArgs<ExtArgs>
    metatags?: boolean | page$metatagsArgs<ExtArgs>
  }


  export type $pagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "page"
    objects: {
      service: Prisma.$servicePayload<ExtArgs> | null
      userpages: Prisma.$userPayload<ExtArgs> | null
      metatags: Prisma.$metaPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      metaid: number
      name: string
      content: string
      slug: string
      createdat: Date
      createdby: number
      updatedat: Date | null
      updatedby: number | null
      isactive: number
      serviceid: number
    }, ExtArgs["result"]["page"]>
    composites: {}
  }


  type pageGetPayload<S extends boolean | null | undefined | pageDefaultArgs> = $Result.GetResult<Prisma.$pagePayload, S>

  type pageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<pageFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PageCountAggregateInputType | true
    }

  export interface pageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['page'], meta: { name: 'page' } }
    /**
     * Find zero or one Page that matches the filter.
     * @param {pageFindUniqueArgs} args - Arguments to find a Page
     * @example
     * // Get one Page
     * const page = await prisma.page.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends pageFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, pageFindUniqueArgs<ExtArgs>>
    ): Prisma__pageClient<$Result.GetResult<Prisma.$pagePayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Page that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {pageFindUniqueOrThrowArgs} args - Arguments to find a Page
     * @example
     * // Get one Page
     * const page = await prisma.page.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends pageFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, pageFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__pageClient<$Result.GetResult<Prisma.$pagePayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Page that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pageFindFirstArgs} args - Arguments to find a Page
     * @example
     * // Get one Page
     * const page = await prisma.page.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends pageFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, pageFindFirstArgs<ExtArgs>>
    ): Prisma__pageClient<$Result.GetResult<Prisma.$pagePayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Page that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pageFindFirstOrThrowArgs} args - Arguments to find a Page
     * @example
     * // Get one Page
     * const page = await prisma.page.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends pageFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, pageFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__pageClient<$Result.GetResult<Prisma.$pagePayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Pages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pageFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pages
     * const pages = await prisma.page.findMany()
     * 
     * // Get first 10 Pages
     * const pages = await prisma.page.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pageWithIdOnly = await prisma.page.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends pageFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, pageFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pagePayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Page.
     * @param {pageCreateArgs} args - Arguments to create a Page.
     * @example
     * // Create one Page
     * const Page = await prisma.page.create({
     *   data: {
     *     // ... data to create a Page
     *   }
     * })
     * 
    **/
    create<T extends pageCreateArgs<ExtArgs>>(
      args: SelectSubset<T, pageCreateArgs<ExtArgs>>
    ): Prisma__pageClient<$Result.GetResult<Prisma.$pagePayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Pages.
     *     @param {pageCreateManyArgs} args - Arguments to create many Pages.
     *     @example
     *     // Create many Pages
     *     const page = await prisma.page.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends pageCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, pageCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Page.
     * @param {pageDeleteArgs} args - Arguments to delete one Page.
     * @example
     * // Delete one Page
     * const Page = await prisma.page.delete({
     *   where: {
     *     // ... filter to delete one Page
     *   }
     * })
     * 
    **/
    delete<T extends pageDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, pageDeleteArgs<ExtArgs>>
    ): Prisma__pageClient<$Result.GetResult<Prisma.$pagePayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Page.
     * @param {pageUpdateArgs} args - Arguments to update one Page.
     * @example
     * // Update one Page
     * const page = await prisma.page.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends pageUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, pageUpdateArgs<ExtArgs>>
    ): Prisma__pageClient<$Result.GetResult<Prisma.$pagePayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Pages.
     * @param {pageDeleteManyArgs} args - Arguments to filter Pages to delete.
     * @example
     * // Delete a few Pages
     * const { count } = await prisma.page.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends pageDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, pageDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pages
     * const page = await prisma.page.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends pageUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, pageUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Page.
     * @param {pageUpsertArgs} args - Arguments to update or create a Page.
     * @example
     * // Update or create a Page
     * const page = await prisma.page.upsert({
     *   create: {
     *     // ... data to create a Page
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Page we want to update
     *   }
     * })
    **/
    upsert<T extends pageUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, pageUpsertArgs<ExtArgs>>
    ): Prisma__pageClient<$Result.GetResult<Prisma.$pagePayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Pages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pageCountArgs} args - Arguments to filter Pages to count.
     * @example
     * // Count the number of Pages
     * const count = await prisma.page.count({
     *   where: {
     *     // ... the filter for the Pages we want to count
     *   }
     * })
    **/
    count<T extends pageCountArgs>(
      args?: Subset<T, pageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Page.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PageAggregateArgs>(args: Subset<T, PageAggregateArgs>): Prisma.PrismaPromise<GetPageAggregateType<T>>

    /**
     * Group by Page.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends pageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: pageGroupByArgs['orderBy'] }
        : { orderBy?: pageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, pageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the page model
   */
  readonly fields: pageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for page.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__pageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    service<T extends page$serviceArgs<ExtArgs> = {}>(args?: Subset<T, page$serviceArgs<ExtArgs>>): Prisma__serviceClient<$Result.GetResult<Prisma.$servicePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    userpages<T extends page$userpagesArgs<ExtArgs> = {}>(args?: Subset<T, page$userpagesArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    metatags<T extends page$metatagsArgs<ExtArgs> = {}>(args?: Subset<T, page$metatagsArgs<ExtArgs>>): Prisma__metaClient<$Result.GetResult<Prisma.$metaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the page model
   */ 
  interface pageFieldRefs {
    readonly id: FieldRef<"page", 'Int'>
    readonly metaid: FieldRef<"page", 'Int'>
    readonly name: FieldRef<"page", 'String'>
    readonly content: FieldRef<"page", 'String'>
    readonly slug: FieldRef<"page", 'String'>
    readonly createdat: FieldRef<"page", 'DateTime'>
    readonly createdby: FieldRef<"page", 'Int'>
    readonly updatedat: FieldRef<"page", 'DateTime'>
    readonly updatedby: FieldRef<"page", 'Int'>
    readonly isactive: FieldRef<"page", 'Int'>
    readonly serviceid: FieldRef<"page", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * page findUnique
   */
  export type pageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the page
     */
    select?: pageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: pageInclude<ExtArgs> | null
    /**
     * Filter, which page to fetch.
     */
    where: pageWhereUniqueInput
  }


  /**
   * page findUniqueOrThrow
   */
  export type pageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the page
     */
    select?: pageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: pageInclude<ExtArgs> | null
    /**
     * Filter, which page to fetch.
     */
    where: pageWhereUniqueInput
  }


  /**
   * page findFirst
   */
  export type pageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the page
     */
    select?: pageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: pageInclude<ExtArgs> | null
    /**
     * Filter, which page to fetch.
     */
    where?: pageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pages to fetch.
     */
    orderBy?: pageOrderByWithRelationInput | pageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pages.
     */
    cursor?: pageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pages.
     */
    distinct?: PageScalarFieldEnum | PageScalarFieldEnum[]
  }


  /**
   * page findFirstOrThrow
   */
  export type pageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the page
     */
    select?: pageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: pageInclude<ExtArgs> | null
    /**
     * Filter, which page to fetch.
     */
    where?: pageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pages to fetch.
     */
    orderBy?: pageOrderByWithRelationInput | pageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pages.
     */
    cursor?: pageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pages.
     */
    distinct?: PageScalarFieldEnum | PageScalarFieldEnum[]
  }


  /**
   * page findMany
   */
  export type pageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the page
     */
    select?: pageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: pageInclude<ExtArgs> | null
    /**
     * Filter, which pages to fetch.
     */
    where?: pageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pages to fetch.
     */
    orderBy?: pageOrderByWithRelationInput | pageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing pages.
     */
    cursor?: pageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pages.
     */
    skip?: number
    distinct?: PageScalarFieldEnum | PageScalarFieldEnum[]
  }


  /**
   * page create
   */
  export type pageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the page
     */
    select?: pageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: pageInclude<ExtArgs> | null
    /**
     * The data needed to create a page.
     */
    data: XOR<pageCreateInput, pageUncheckedCreateInput>
  }


  /**
   * page createMany
   */
  export type pageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many pages.
     */
    data: pageCreateManyInput | pageCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * page update
   */
  export type pageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the page
     */
    select?: pageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: pageInclude<ExtArgs> | null
    /**
     * The data needed to update a page.
     */
    data: XOR<pageUpdateInput, pageUncheckedUpdateInput>
    /**
     * Choose, which page to update.
     */
    where: pageWhereUniqueInput
  }


  /**
   * page updateMany
   */
  export type pageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update pages.
     */
    data: XOR<pageUpdateManyMutationInput, pageUncheckedUpdateManyInput>
    /**
     * Filter which pages to update
     */
    where?: pageWhereInput
  }


  /**
   * page upsert
   */
  export type pageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the page
     */
    select?: pageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: pageInclude<ExtArgs> | null
    /**
     * The filter to search for the page to update in case it exists.
     */
    where: pageWhereUniqueInput
    /**
     * In case the page found by the `where` argument doesn't exist, create a new page with this data.
     */
    create: XOR<pageCreateInput, pageUncheckedCreateInput>
    /**
     * In case the page was found with the provided `where` argument, update it with this data.
     */
    update: XOR<pageUpdateInput, pageUncheckedUpdateInput>
  }


  /**
   * page delete
   */
  export type pageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the page
     */
    select?: pageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: pageInclude<ExtArgs> | null
    /**
     * Filter which page to delete.
     */
    where: pageWhereUniqueInput
  }


  /**
   * page deleteMany
   */
  export type pageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pages to delete
     */
    where?: pageWhereInput
  }


  /**
   * page.service
   */
  export type page$serviceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service
     */
    select?: serviceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: serviceInclude<ExtArgs> | null
    where?: serviceWhereInput
  }


  /**
   * page.userpages
   */
  export type page$userpagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
  }


  /**
   * page.metatags
   */
  export type page$metatagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the meta
     */
    select?: metaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: metaInclude<ExtArgs> | null
    where?: metaWhereInput
  }


  /**
   * page without action
   */
  export type pageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the page
     */
    select?: pageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: pageInclude<ExtArgs> | null
  }



  /**
   * Model servicecategory
   */

  export type AggregateServicecategory = {
    _count: ServicecategoryCountAggregateOutputType | null
    _avg: ServicecategoryAvgAggregateOutputType | null
    _sum: ServicecategorySumAggregateOutputType | null
    _min: ServicecategoryMinAggregateOutputType | null
    _max: ServicecategoryMaxAggregateOutputType | null
  }

  export type ServicecategoryAvgAggregateOutputType = {
    id: number | null
    metaid: number | null
    createdby: number | null
    updatedby: number | null
    isactive: number | null
  }

  export type ServicecategorySumAggregateOutputType = {
    id: number | null
    metaid: number | null
    createdby: number | null
    updatedby: number | null
    isactive: number | null
  }

  export type ServicecategoryMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    metaid: number | null
    createdat: Date | null
    createdby: number | null
    updatedat: Date | null
    updatedby: number | null
    isactive: number | null
  }

  export type ServicecategoryMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    metaid: number | null
    createdat: Date | null
    createdby: number | null
    updatedat: Date | null
    updatedby: number | null
    isactive: number | null
  }

  export type ServicecategoryCountAggregateOutputType = {
    id: number
    name: number
    description: number
    metaid: number
    createdat: number
    createdby: number
    updatedat: number
    updatedby: number
    isactive: number
    _all: number
  }


  export type ServicecategoryAvgAggregateInputType = {
    id?: true
    metaid?: true
    createdby?: true
    updatedby?: true
    isactive?: true
  }

  export type ServicecategorySumAggregateInputType = {
    id?: true
    metaid?: true
    createdby?: true
    updatedby?: true
    isactive?: true
  }

  export type ServicecategoryMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    metaid?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isactive?: true
  }

  export type ServicecategoryMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    metaid?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isactive?: true
  }

  export type ServicecategoryCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    metaid?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isactive?: true
    _all?: true
  }

  export type ServicecategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which servicecategory to aggregate.
     */
    where?: servicecategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of servicecategories to fetch.
     */
    orderBy?: servicecategoryOrderByWithRelationInput | servicecategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: servicecategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` servicecategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` servicecategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned servicecategories
    **/
    _count?: true | ServicecategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ServicecategoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ServicecategorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ServicecategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ServicecategoryMaxAggregateInputType
  }

  export type GetServicecategoryAggregateType<T extends ServicecategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateServicecategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateServicecategory[P]>
      : GetScalarType<T[P], AggregateServicecategory[P]>
  }




  export type servicecategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: servicecategoryWhereInput
    orderBy?: servicecategoryOrderByWithAggregationInput | servicecategoryOrderByWithAggregationInput[]
    by: ServicecategoryScalarFieldEnum[] | ServicecategoryScalarFieldEnum
    having?: servicecategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ServicecategoryCountAggregateInputType | true
    _avg?: ServicecategoryAvgAggregateInputType
    _sum?: ServicecategorySumAggregateInputType
    _min?: ServicecategoryMinAggregateInputType
    _max?: ServicecategoryMaxAggregateInputType
  }

  export type ServicecategoryGroupByOutputType = {
    id: number
    name: string
    description: string
    metaid: number
    createdat: Date
    createdby: number
    updatedat: Date | null
    updatedby: number | null
    isactive: number
    _count: ServicecategoryCountAggregateOutputType | null
    _avg: ServicecategoryAvgAggregateOutputType | null
    _sum: ServicecategorySumAggregateOutputType | null
    _min: ServicecategoryMinAggregateOutputType | null
    _max: ServicecategoryMaxAggregateOutputType | null
  }

  type GetServicecategoryGroupByPayload<T extends servicecategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ServicecategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ServicecategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ServicecategoryGroupByOutputType[P]>
            : GetScalarType<T[P], ServicecategoryGroupByOutputType[P]>
        }
      >
    >


  export type servicecategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    metaid?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedat?: boolean
    updatedby?: boolean
    isactive?: boolean
    services?: boolean | servicecategory$servicesArgs<ExtArgs>
    contacts?: boolean | servicecategory$contactsArgs<ExtArgs>
    userservicecategory?: boolean | servicecategory$userservicecategoryArgs<ExtArgs>
    metatags?: boolean | servicecategory$metatagsArgs<ExtArgs>
    _count?: boolean | ServicecategoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["servicecategory"]>

  export type servicecategorySelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    metaid?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedat?: boolean
    updatedby?: boolean
    isactive?: boolean
  }

  export type servicecategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    services?: boolean | servicecategory$servicesArgs<ExtArgs>
    contacts?: boolean | servicecategory$contactsArgs<ExtArgs>
    userservicecategory?: boolean | servicecategory$userservicecategoryArgs<ExtArgs>
    metatags?: boolean | servicecategory$metatagsArgs<ExtArgs>
    _count?: boolean | ServicecategoryCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $servicecategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "servicecategory"
    objects: {
      services: Prisma.$servicePayload<ExtArgs>[]
      contacts: Prisma.$contactPayload<ExtArgs>[]
      userservicecategory: Prisma.$userPayload<ExtArgs> | null
      metatags: Prisma.$metaPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string
      metaid: number
      createdat: Date
      createdby: number
      updatedat: Date | null
      updatedby: number | null
      isactive: number
    }, ExtArgs["result"]["servicecategory"]>
    composites: {}
  }


  type servicecategoryGetPayload<S extends boolean | null | undefined | servicecategoryDefaultArgs> = $Result.GetResult<Prisma.$servicecategoryPayload, S>

  type servicecategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<servicecategoryFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ServicecategoryCountAggregateInputType | true
    }

  export interface servicecategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['servicecategory'], meta: { name: 'servicecategory' } }
    /**
     * Find zero or one Servicecategory that matches the filter.
     * @param {servicecategoryFindUniqueArgs} args - Arguments to find a Servicecategory
     * @example
     * // Get one Servicecategory
     * const servicecategory = await prisma.servicecategory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends servicecategoryFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, servicecategoryFindUniqueArgs<ExtArgs>>
    ): Prisma__servicecategoryClient<$Result.GetResult<Prisma.$servicecategoryPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Servicecategory that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {servicecategoryFindUniqueOrThrowArgs} args - Arguments to find a Servicecategory
     * @example
     * // Get one Servicecategory
     * const servicecategory = await prisma.servicecategory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends servicecategoryFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, servicecategoryFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__servicecategoryClient<$Result.GetResult<Prisma.$servicecategoryPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Servicecategory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {servicecategoryFindFirstArgs} args - Arguments to find a Servicecategory
     * @example
     * // Get one Servicecategory
     * const servicecategory = await prisma.servicecategory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends servicecategoryFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, servicecategoryFindFirstArgs<ExtArgs>>
    ): Prisma__servicecategoryClient<$Result.GetResult<Prisma.$servicecategoryPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Servicecategory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {servicecategoryFindFirstOrThrowArgs} args - Arguments to find a Servicecategory
     * @example
     * // Get one Servicecategory
     * const servicecategory = await prisma.servicecategory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends servicecategoryFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, servicecategoryFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__servicecategoryClient<$Result.GetResult<Prisma.$servicecategoryPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Servicecategories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {servicecategoryFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Servicecategories
     * const servicecategories = await prisma.servicecategory.findMany()
     * 
     * // Get first 10 Servicecategories
     * const servicecategories = await prisma.servicecategory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const servicecategoryWithIdOnly = await prisma.servicecategory.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends servicecategoryFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, servicecategoryFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$servicecategoryPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Servicecategory.
     * @param {servicecategoryCreateArgs} args - Arguments to create a Servicecategory.
     * @example
     * // Create one Servicecategory
     * const Servicecategory = await prisma.servicecategory.create({
     *   data: {
     *     // ... data to create a Servicecategory
     *   }
     * })
     * 
    **/
    create<T extends servicecategoryCreateArgs<ExtArgs>>(
      args: SelectSubset<T, servicecategoryCreateArgs<ExtArgs>>
    ): Prisma__servicecategoryClient<$Result.GetResult<Prisma.$servicecategoryPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Servicecategories.
     *     @param {servicecategoryCreateManyArgs} args - Arguments to create many Servicecategories.
     *     @example
     *     // Create many Servicecategories
     *     const servicecategory = await prisma.servicecategory.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends servicecategoryCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, servicecategoryCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Servicecategory.
     * @param {servicecategoryDeleteArgs} args - Arguments to delete one Servicecategory.
     * @example
     * // Delete one Servicecategory
     * const Servicecategory = await prisma.servicecategory.delete({
     *   where: {
     *     // ... filter to delete one Servicecategory
     *   }
     * })
     * 
    **/
    delete<T extends servicecategoryDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, servicecategoryDeleteArgs<ExtArgs>>
    ): Prisma__servicecategoryClient<$Result.GetResult<Prisma.$servicecategoryPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Servicecategory.
     * @param {servicecategoryUpdateArgs} args - Arguments to update one Servicecategory.
     * @example
     * // Update one Servicecategory
     * const servicecategory = await prisma.servicecategory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends servicecategoryUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, servicecategoryUpdateArgs<ExtArgs>>
    ): Prisma__servicecategoryClient<$Result.GetResult<Prisma.$servicecategoryPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Servicecategories.
     * @param {servicecategoryDeleteManyArgs} args - Arguments to filter Servicecategories to delete.
     * @example
     * // Delete a few Servicecategories
     * const { count } = await prisma.servicecategory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends servicecategoryDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, servicecategoryDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Servicecategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {servicecategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Servicecategories
     * const servicecategory = await prisma.servicecategory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends servicecategoryUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, servicecategoryUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Servicecategory.
     * @param {servicecategoryUpsertArgs} args - Arguments to update or create a Servicecategory.
     * @example
     * // Update or create a Servicecategory
     * const servicecategory = await prisma.servicecategory.upsert({
     *   create: {
     *     // ... data to create a Servicecategory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Servicecategory we want to update
     *   }
     * })
    **/
    upsert<T extends servicecategoryUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, servicecategoryUpsertArgs<ExtArgs>>
    ): Prisma__servicecategoryClient<$Result.GetResult<Prisma.$servicecategoryPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Servicecategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {servicecategoryCountArgs} args - Arguments to filter Servicecategories to count.
     * @example
     * // Count the number of Servicecategories
     * const count = await prisma.servicecategory.count({
     *   where: {
     *     // ... the filter for the Servicecategories we want to count
     *   }
     * })
    **/
    count<T extends servicecategoryCountArgs>(
      args?: Subset<T, servicecategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ServicecategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Servicecategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServicecategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ServicecategoryAggregateArgs>(args: Subset<T, ServicecategoryAggregateArgs>): Prisma.PrismaPromise<GetServicecategoryAggregateType<T>>

    /**
     * Group by Servicecategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {servicecategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends servicecategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: servicecategoryGroupByArgs['orderBy'] }
        : { orderBy?: servicecategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, servicecategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetServicecategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the servicecategory model
   */
  readonly fields: servicecategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for servicecategory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__servicecategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    services<T extends servicecategory$servicesArgs<ExtArgs> = {}>(args?: Subset<T, servicecategory$servicesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$servicePayload<ExtArgs>, T, 'findMany'> | Null>;

    contacts<T extends servicecategory$contactsArgs<ExtArgs> = {}>(args?: Subset<T, servicecategory$contactsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$contactPayload<ExtArgs>, T, 'findMany'> | Null>;

    userservicecategory<T extends servicecategory$userservicecategoryArgs<ExtArgs> = {}>(args?: Subset<T, servicecategory$userservicecategoryArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    metatags<T extends servicecategory$metatagsArgs<ExtArgs> = {}>(args?: Subset<T, servicecategory$metatagsArgs<ExtArgs>>): Prisma__metaClient<$Result.GetResult<Prisma.$metaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the servicecategory model
   */ 
  interface servicecategoryFieldRefs {
    readonly id: FieldRef<"servicecategory", 'Int'>
    readonly name: FieldRef<"servicecategory", 'String'>
    readonly description: FieldRef<"servicecategory", 'String'>
    readonly metaid: FieldRef<"servicecategory", 'Int'>
    readonly createdat: FieldRef<"servicecategory", 'DateTime'>
    readonly createdby: FieldRef<"servicecategory", 'Int'>
    readonly updatedat: FieldRef<"servicecategory", 'DateTime'>
    readonly updatedby: FieldRef<"servicecategory", 'Int'>
    readonly isactive: FieldRef<"servicecategory", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * servicecategory findUnique
   */
  export type servicecategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicecategory
     */
    select?: servicecategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: servicecategoryInclude<ExtArgs> | null
    /**
     * Filter, which servicecategory to fetch.
     */
    where: servicecategoryWhereUniqueInput
  }


  /**
   * servicecategory findUniqueOrThrow
   */
  export type servicecategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicecategory
     */
    select?: servicecategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: servicecategoryInclude<ExtArgs> | null
    /**
     * Filter, which servicecategory to fetch.
     */
    where: servicecategoryWhereUniqueInput
  }


  /**
   * servicecategory findFirst
   */
  export type servicecategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicecategory
     */
    select?: servicecategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: servicecategoryInclude<ExtArgs> | null
    /**
     * Filter, which servicecategory to fetch.
     */
    where?: servicecategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of servicecategories to fetch.
     */
    orderBy?: servicecategoryOrderByWithRelationInput | servicecategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for servicecategories.
     */
    cursor?: servicecategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` servicecategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` servicecategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of servicecategories.
     */
    distinct?: ServicecategoryScalarFieldEnum | ServicecategoryScalarFieldEnum[]
  }


  /**
   * servicecategory findFirstOrThrow
   */
  export type servicecategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicecategory
     */
    select?: servicecategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: servicecategoryInclude<ExtArgs> | null
    /**
     * Filter, which servicecategory to fetch.
     */
    where?: servicecategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of servicecategories to fetch.
     */
    orderBy?: servicecategoryOrderByWithRelationInput | servicecategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for servicecategories.
     */
    cursor?: servicecategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` servicecategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` servicecategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of servicecategories.
     */
    distinct?: ServicecategoryScalarFieldEnum | ServicecategoryScalarFieldEnum[]
  }


  /**
   * servicecategory findMany
   */
  export type servicecategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicecategory
     */
    select?: servicecategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: servicecategoryInclude<ExtArgs> | null
    /**
     * Filter, which servicecategories to fetch.
     */
    where?: servicecategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of servicecategories to fetch.
     */
    orderBy?: servicecategoryOrderByWithRelationInput | servicecategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing servicecategories.
     */
    cursor?: servicecategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` servicecategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` servicecategories.
     */
    skip?: number
    distinct?: ServicecategoryScalarFieldEnum | ServicecategoryScalarFieldEnum[]
  }


  /**
   * servicecategory create
   */
  export type servicecategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicecategory
     */
    select?: servicecategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: servicecategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a servicecategory.
     */
    data: XOR<servicecategoryCreateInput, servicecategoryUncheckedCreateInput>
  }


  /**
   * servicecategory createMany
   */
  export type servicecategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many servicecategories.
     */
    data: servicecategoryCreateManyInput | servicecategoryCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * servicecategory update
   */
  export type servicecategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicecategory
     */
    select?: servicecategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: servicecategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a servicecategory.
     */
    data: XOR<servicecategoryUpdateInput, servicecategoryUncheckedUpdateInput>
    /**
     * Choose, which servicecategory to update.
     */
    where: servicecategoryWhereUniqueInput
  }


  /**
   * servicecategory updateMany
   */
  export type servicecategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update servicecategories.
     */
    data: XOR<servicecategoryUpdateManyMutationInput, servicecategoryUncheckedUpdateManyInput>
    /**
     * Filter which servicecategories to update
     */
    where?: servicecategoryWhereInput
  }


  /**
   * servicecategory upsert
   */
  export type servicecategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicecategory
     */
    select?: servicecategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: servicecategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the servicecategory to update in case it exists.
     */
    where: servicecategoryWhereUniqueInput
    /**
     * In case the servicecategory found by the `where` argument doesn't exist, create a new servicecategory with this data.
     */
    create: XOR<servicecategoryCreateInput, servicecategoryUncheckedCreateInput>
    /**
     * In case the servicecategory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<servicecategoryUpdateInput, servicecategoryUncheckedUpdateInput>
  }


  /**
   * servicecategory delete
   */
  export type servicecategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicecategory
     */
    select?: servicecategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: servicecategoryInclude<ExtArgs> | null
    /**
     * Filter which servicecategory to delete.
     */
    where: servicecategoryWhereUniqueInput
  }


  /**
   * servicecategory deleteMany
   */
  export type servicecategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which servicecategories to delete
     */
    where?: servicecategoryWhereInput
  }


  /**
   * servicecategory.services
   */
  export type servicecategory$servicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service
     */
    select?: serviceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: serviceInclude<ExtArgs> | null
    where?: serviceWhereInput
    orderBy?: serviceOrderByWithRelationInput | serviceOrderByWithRelationInput[]
    cursor?: serviceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServiceScalarFieldEnum | ServiceScalarFieldEnum[]
  }


  /**
   * servicecategory.contacts
   */
  export type servicecategory$contactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact
     */
    select?: contactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contactInclude<ExtArgs> | null
    where?: contactWhereInput
    orderBy?: contactOrderByWithRelationInput | contactOrderByWithRelationInput[]
    cursor?: contactWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }


  /**
   * servicecategory.userservicecategory
   */
  export type servicecategory$userservicecategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
  }


  /**
   * servicecategory.metatags
   */
  export type servicecategory$metatagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the meta
     */
    select?: metaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: metaInclude<ExtArgs> | null
    where?: metaWhereInput
  }


  /**
   * servicecategory without action
   */
  export type servicecategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicecategory
     */
    select?: servicecategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: servicecategoryInclude<ExtArgs> | null
  }



  /**
   * Model service
   */

  export type AggregateService = {
    _count: ServiceCountAggregateOutputType | null
    _avg: ServiceAvgAggregateOutputType | null
    _sum: ServiceSumAggregateOutputType | null
    _min: ServiceMinAggregateOutputType | null
    _max: ServiceMaxAggregateOutputType | null
  }

  export type ServiceAvgAggregateOutputType = {
    id: number | null
    servicecategoryid: number | null
    metaid: number | null
    createdby: number | null
    updatedby: number | null
    isactive: number | null
  }

  export type ServiceSumAggregateOutputType = {
    id: number | null
    servicecategoryid: number | null
    metaid: number | null
    createdby: number | null
    updatedby: number | null
    isactive: number | null
  }

  export type ServiceMinAggregateOutputType = {
    id: number | null
    name: string | null
    servicecategoryid: number | null
    metaid: number | null
    createdat: Date | null
    createdby: number | null
    updatedat: Date | null
    updatedby: number | null
    isactive: number | null
  }

  export type ServiceMaxAggregateOutputType = {
    id: number | null
    name: string | null
    servicecategoryid: number | null
    metaid: number | null
    createdat: Date | null
    createdby: number | null
    updatedat: Date | null
    updatedby: number | null
    isactive: number | null
  }

  export type ServiceCountAggregateOutputType = {
    id: number
    name: number
    description: number
    servicecategoryid: number
    metaid: number
    createdat: number
    createdby: number
    updatedat: number
    updatedby: number
    isactive: number
    _all: number
  }


  export type ServiceAvgAggregateInputType = {
    id?: true
    servicecategoryid?: true
    metaid?: true
    createdby?: true
    updatedby?: true
    isactive?: true
  }

  export type ServiceSumAggregateInputType = {
    id?: true
    servicecategoryid?: true
    metaid?: true
    createdby?: true
    updatedby?: true
    isactive?: true
  }

  export type ServiceMinAggregateInputType = {
    id?: true
    name?: true
    servicecategoryid?: true
    metaid?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isactive?: true
  }

  export type ServiceMaxAggregateInputType = {
    id?: true
    name?: true
    servicecategoryid?: true
    metaid?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isactive?: true
  }

  export type ServiceCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    servicecategoryid?: true
    metaid?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isactive?: true
    _all?: true
  }

  export type ServiceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which service to aggregate.
     */
    where?: serviceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of services to fetch.
     */
    orderBy?: serviceOrderByWithRelationInput | serviceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: serviceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` services from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` services.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned services
    **/
    _count?: true | ServiceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ServiceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ServiceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ServiceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ServiceMaxAggregateInputType
  }

  export type GetServiceAggregateType<T extends ServiceAggregateArgs> = {
        [P in keyof T & keyof AggregateService]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateService[P]>
      : GetScalarType<T[P], AggregateService[P]>
  }




  export type serviceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: serviceWhereInput
    orderBy?: serviceOrderByWithAggregationInput | serviceOrderByWithAggregationInput[]
    by: ServiceScalarFieldEnum[] | ServiceScalarFieldEnum
    having?: serviceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ServiceCountAggregateInputType | true
    _avg?: ServiceAvgAggregateInputType
    _sum?: ServiceSumAggregateInputType
    _min?: ServiceMinAggregateInputType
    _max?: ServiceMaxAggregateInputType
  }

  export type ServiceGroupByOutputType = {
    id: number
    name: string
    description: JsonValue
    servicecategoryid: number
    metaid: number
    createdat: Date
    createdby: number
    updatedat: Date | null
    updatedby: number | null
    isactive: number
    _count: ServiceCountAggregateOutputType | null
    _avg: ServiceAvgAggregateOutputType | null
    _sum: ServiceSumAggregateOutputType | null
    _min: ServiceMinAggregateOutputType | null
    _max: ServiceMaxAggregateOutputType | null
  }

  type GetServiceGroupByPayload<T extends serviceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ServiceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ServiceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ServiceGroupByOutputType[P]>
            : GetScalarType<T[P], ServiceGroupByOutputType[P]>
        }
      >
    >


  export type serviceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    servicecategoryid?: boolean
    metaid?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedat?: boolean
    updatedby?: boolean
    isactive?: boolean
    servicecategory?: boolean | servicecategoryDefaultArgs<ExtArgs>
    pages?: boolean | service$pagesArgs<ExtArgs>
    contacts?: boolean | service$contactsArgs<ExtArgs>
    offers?: boolean | service$offersArgs<ExtArgs>
    userservice?: boolean | service$userserviceArgs<ExtArgs>
    metatags?: boolean | service$metatagsArgs<ExtArgs>
    _count?: boolean | ServiceCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["service"]>

  export type serviceSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    servicecategoryid?: boolean
    metaid?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedat?: boolean
    updatedby?: boolean
    isactive?: boolean
  }

  export type serviceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    servicecategory?: boolean | servicecategoryDefaultArgs<ExtArgs>
    pages?: boolean | service$pagesArgs<ExtArgs>
    contacts?: boolean | service$contactsArgs<ExtArgs>
    offers?: boolean | service$offersArgs<ExtArgs>
    userservice?: boolean | service$userserviceArgs<ExtArgs>
    metatags?: boolean | service$metatagsArgs<ExtArgs>
    _count?: boolean | ServiceCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $servicePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "service"
    objects: {
      servicecategory: Prisma.$servicecategoryPayload<ExtArgs>
      pages: Prisma.$pagePayload<ExtArgs>[]
      contacts: Prisma.$contactPayload<ExtArgs>[]
      offers: Prisma.$offerPayload<ExtArgs>[]
      userservice: Prisma.$userPayload<ExtArgs> | null
      metatags: Prisma.$metaPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: Prisma.JsonValue
      servicecategoryid: number
      metaid: number
      createdat: Date
      createdby: number
      updatedat: Date | null
      updatedby: number | null
      isactive: number
    }, ExtArgs["result"]["service"]>
    composites: {}
  }


  type serviceGetPayload<S extends boolean | null | undefined | serviceDefaultArgs> = $Result.GetResult<Prisma.$servicePayload, S>

  type serviceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<serviceFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ServiceCountAggregateInputType | true
    }

  export interface serviceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['service'], meta: { name: 'service' } }
    /**
     * Find zero or one Service that matches the filter.
     * @param {serviceFindUniqueArgs} args - Arguments to find a Service
     * @example
     * // Get one Service
     * const service = await prisma.service.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends serviceFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, serviceFindUniqueArgs<ExtArgs>>
    ): Prisma__serviceClient<$Result.GetResult<Prisma.$servicePayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Service that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {serviceFindUniqueOrThrowArgs} args - Arguments to find a Service
     * @example
     * // Get one Service
     * const service = await prisma.service.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends serviceFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, serviceFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__serviceClient<$Result.GetResult<Prisma.$servicePayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Service that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {serviceFindFirstArgs} args - Arguments to find a Service
     * @example
     * // Get one Service
     * const service = await prisma.service.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends serviceFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, serviceFindFirstArgs<ExtArgs>>
    ): Prisma__serviceClient<$Result.GetResult<Prisma.$servicePayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Service that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {serviceFindFirstOrThrowArgs} args - Arguments to find a Service
     * @example
     * // Get one Service
     * const service = await prisma.service.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends serviceFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, serviceFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__serviceClient<$Result.GetResult<Prisma.$servicePayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Services that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {serviceFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Services
     * const services = await prisma.service.findMany()
     * 
     * // Get first 10 Services
     * const services = await prisma.service.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const serviceWithIdOnly = await prisma.service.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends serviceFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, serviceFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$servicePayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Service.
     * @param {serviceCreateArgs} args - Arguments to create a Service.
     * @example
     * // Create one Service
     * const Service = await prisma.service.create({
     *   data: {
     *     // ... data to create a Service
     *   }
     * })
     * 
    **/
    create<T extends serviceCreateArgs<ExtArgs>>(
      args: SelectSubset<T, serviceCreateArgs<ExtArgs>>
    ): Prisma__serviceClient<$Result.GetResult<Prisma.$servicePayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Services.
     *     @param {serviceCreateManyArgs} args - Arguments to create many Services.
     *     @example
     *     // Create many Services
     *     const service = await prisma.service.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends serviceCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, serviceCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Service.
     * @param {serviceDeleteArgs} args - Arguments to delete one Service.
     * @example
     * // Delete one Service
     * const Service = await prisma.service.delete({
     *   where: {
     *     // ... filter to delete one Service
     *   }
     * })
     * 
    **/
    delete<T extends serviceDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, serviceDeleteArgs<ExtArgs>>
    ): Prisma__serviceClient<$Result.GetResult<Prisma.$servicePayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Service.
     * @param {serviceUpdateArgs} args - Arguments to update one Service.
     * @example
     * // Update one Service
     * const service = await prisma.service.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends serviceUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, serviceUpdateArgs<ExtArgs>>
    ): Prisma__serviceClient<$Result.GetResult<Prisma.$servicePayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Services.
     * @param {serviceDeleteManyArgs} args - Arguments to filter Services to delete.
     * @example
     * // Delete a few Services
     * const { count } = await prisma.service.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends serviceDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, serviceDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Services.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {serviceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Services
     * const service = await prisma.service.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends serviceUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, serviceUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Service.
     * @param {serviceUpsertArgs} args - Arguments to update or create a Service.
     * @example
     * // Update or create a Service
     * const service = await prisma.service.upsert({
     *   create: {
     *     // ... data to create a Service
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Service we want to update
     *   }
     * })
    **/
    upsert<T extends serviceUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, serviceUpsertArgs<ExtArgs>>
    ): Prisma__serviceClient<$Result.GetResult<Prisma.$servicePayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Services.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {serviceCountArgs} args - Arguments to filter Services to count.
     * @example
     * // Count the number of Services
     * const count = await prisma.service.count({
     *   where: {
     *     // ... the filter for the Services we want to count
     *   }
     * })
    **/
    count<T extends serviceCountArgs>(
      args?: Subset<T, serviceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ServiceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Service.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ServiceAggregateArgs>(args: Subset<T, ServiceAggregateArgs>): Prisma.PrismaPromise<GetServiceAggregateType<T>>

    /**
     * Group by Service.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {serviceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends serviceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: serviceGroupByArgs['orderBy'] }
        : { orderBy?: serviceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, serviceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetServiceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the service model
   */
  readonly fields: serviceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for service.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__serviceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    servicecategory<T extends servicecategoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, servicecategoryDefaultArgs<ExtArgs>>): Prisma__servicecategoryClient<$Result.GetResult<Prisma.$servicecategoryPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    pages<T extends service$pagesArgs<ExtArgs> = {}>(args?: Subset<T, service$pagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pagePayload<ExtArgs>, T, 'findMany'> | Null>;

    contacts<T extends service$contactsArgs<ExtArgs> = {}>(args?: Subset<T, service$contactsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$contactPayload<ExtArgs>, T, 'findMany'> | Null>;

    offers<T extends service$offersArgs<ExtArgs> = {}>(args?: Subset<T, service$offersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$offerPayload<ExtArgs>, T, 'findMany'> | Null>;

    userservice<T extends service$userserviceArgs<ExtArgs> = {}>(args?: Subset<T, service$userserviceArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    metatags<T extends service$metatagsArgs<ExtArgs> = {}>(args?: Subset<T, service$metatagsArgs<ExtArgs>>): Prisma__metaClient<$Result.GetResult<Prisma.$metaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the service model
   */ 
  interface serviceFieldRefs {
    readonly id: FieldRef<"service", 'Int'>
    readonly name: FieldRef<"service", 'String'>
    readonly description: FieldRef<"service", 'Json'>
    readonly servicecategoryid: FieldRef<"service", 'Int'>
    readonly metaid: FieldRef<"service", 'Int'>
    readonly createdat: FieldRef<"service", 'DateTime'>
    readonly createdby: FieldRef<"service", 'Int'>
    readonly updatedat: FieldRef<"service", 'DateTime'>
    readonly updatedby: FieldRef<"service", 'Int'>
    readonly isactive: FieldRef<"service", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * service findUnique
   */
  export type serviceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service
     */
    select?: serviceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: serviceInclude<ExtArgs> | null
    /**
     * Filter, which service to fetch.
     */
    where: serviceWhereUniqueInput
  }


  /**
   * service findUniqueOrThrow
   */
  export type serviceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service
     */
    select?: serviceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: serviceInclude<ExtArgs> | null
    /**
     * Filter, which service to fetch.
     */
    where: serviceWhereUniqueInput
  }


  /**
   * service findFirst
   */
  export type serviceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service
     */
    select?: serviceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: serviceInclude<ExtArgs> | null
    /**
     * Filter, which service to fetch.
     */
    where?: serviceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of services to fetch.
     */
    orderBy?: serviceOrderByWithRelationInput | serviceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for services.
     */
    cursor?: serviceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` services from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` services.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of services.
     */
    distinct?: ServiceScalarFieldEnum | ServiceScalarFieldEnum[]
  }


  /**
   * service findFirstOrThrow
   */
  export type serviceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service
     */
    select?: serviceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: serviceInclude<ExtArgs> | null
    /**
     * Filter, which service to fetch.
     */
    where?: serviceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of services to fetch.
     */
    orderBy?: serviceOrderByWithRelationInput | serviceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for services.
     */
    cursor?: serviceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` services from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` services.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of services.
     */
    distinct?: ServiceScalarFieldEnum | ServiceScalarFieldEnum[]
  }


  /**
   * service findMany
   */
  export type serviceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service
     */
    select?: serviceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: serviceInclude<ExtArgs> | null
    /**
     * Filter, which services to fetch.
     */
    where?: serviceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of services to fetch.
     */
    orderBy?: serviceOrderByWithRelationInput | serviceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing services.
     */
    cursor?: serviceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` services from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` services.
     */
    skip?: number
    distinct?: ServiceScalarFieldEnum | ServiceScalarFieldEnum[]
  }


  /**
   * service create
   */
  export type serviceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service
     */
    select?: serviceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: serviceInclude<ExtArgs> | null
    /**
     * The data needed to create a service.
     */
    data: XOR<serviceCreateInput, serviceUncheckedCreateInput>
  }


  /**
   * service createMany
   */
  export type serviceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many services.
     */
    data: serviceCreateManyInput | serviceCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * service update
   */
  export type serviceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service
     */
    select?: serviceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: serviceInclude<ExtArgs> | null
    /**
     * The data needed to update a service.
     */
    data: XOR<serviceUpdateInput, serviceUncheckedUpdateInput>
    /**
     * Choose, which service to update.
     */
    where: serviceWhereUniqueInput
  }


  /**
   * service updateMany
   */
  export type serviceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update services.
     */
    data: XOR<serviceUpdateManyMutationInput, serviceUncheckedUpdateManyInput>
    /**
     * Filter which services to update
     */
    where?: serviceWhereInput
  }


  /**
   * service upsert
   */
  export type serviceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service
     */
    select?: serviceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: serviceInclude<ExtArgs> | null
    /**
     * The filter to search for the service to update in case it exists.
     */
    where: serviceWhereUniqueInput
    /**
     * In case the service found by the `where` argument doesn't exist, create a new service with this data.
     */
    create: XOR<serviceCreateInput, serviceUncheckedCreateInput>
    /**
     * In case the service was found with the provided `where` argument, update it with this data.
     */
    update: XOR<serviceUpdateInput, serviceUncheckedUpdateInput>
  }


  /**
   * service delete
   */
  export type serviceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service
     */
    select?: serviceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: serviceInclude<ExtArgs> | null
    /**
     * Filter which service to delete.
     */
    where: serviceWhereUniqueInput
  }


  /**
   * service deleteMany
   */
  export type serviceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which services to delete
     */
    where?: serviceWhereInput
  }


  /**
   * service.pages
   */
  export type service$pagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the page
     */
    select?: pageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: pageInclude<ExtArgs> | null
    where?: pageWhereInput
    orderBy?: pageOrderByWithRelationInput | pageOrderByWithRelationInput[]
    cursor?: pageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PageScalarFieldEnum | PageScalarFieldEnum[]
  }


  /**
   * service.contacts
   */
  export type service$contactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact
     */
    select?: contactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contactInclude<ExtArgs> | null
    where?: contactWhereInput
    orderBy?: contactOrderByWithRelationInput | contactOrderByWithRelationInput[]
    cursor?: contactWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }


  /**
   * service.offers
   */
  export type service$offersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offer
     */
    select?: offerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: offerInclude<ExtArgs> | null
    where?: offerWhereInput
    orderBy?: offerOrderByWithRelationInput | offerOrderByWithRelationInput[]
    cursor?: offerWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OfferScalarFieldEnum | OfferScalarFieldEnum[]
  }


  /**
   * service.userservice
   */
  export type service$userserviceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
  }


  /**
   * service.metatags
   */
  export type service$metatagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the meta
     */
    select?: metaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: metaInclude<ExtArgs> | null
    where?: metaWhereInput
  }


  /**
   * service without action
   */
  export type serviceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service
     */
    select?: serviceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: serviceInclude<ExtArgs> | null
  }



  /**
   * Model entrance
   */

  export type AggregateEntrance = {
    _count: EntranceCountAggregateOutputType | null
    _avg: EntranceAvgAggregateOutputType | null
    _sum: EntranceSumAggregateOutputType | null
    _min: EntranceMinAggregateOutputType | null
    _max: EntranceMaxAggregateOutputType | null
  }

  export type EntranceAvgAggregateOutputType = {
    id: number | null
    type: number | null
    userid: number | null
  }

  export type EntranceSumAggregateOutputType = {
    id: number | null
    type: number | null
    userid: number | null
  }

  export type EntranceMinAggregateOutputType = {
    id: number | null
    type: number | null
    useragent: string | null
    ipaddress: string | null
    userid: number | null
    createdat: Date | null
  }

  export type EntranceMaxAggregateOutputType = {
    id: number | null
    type: number | null
    useragent: string | null
    ipaddress: string | null
    userid: number | null
    createdat: Date | null
  }

  export type EntranceCountAggregateOutputType = {
    id: number
    type: number
    useragent: number
    ipaddress: number
    userid: number
    createdat: number
    _all: number
  }


  export type EntranceAvgAggregateInputType = {
    id?: true
    type?: true
    userid?: true
  }

  export type EntranceSumAggregateInputType = {
    id?: true
    type?: true
    userid?: true
  }

  export type EntranceMinAggregateInputType = {
    id?: true
    type?: true
    useragent?: true
    ipaddress?: true
    userid?: true
    createdat?: true
  }

  export type EntranceMaxAggregateInputType = {
    id?: true
    type?: true
    useragent?: true
    ipaddress?: true
    userid?: true
    createdat?: true
  }

  export type EntranceCountAggregateInputType = {
    id?: true
    type?: true
    useragent?: true
    ipaddress?: true
    userid?: true
    createdat?: true
    _all?: true
  }

  export type EntranceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which entrance to aggregate.
     */
    where?: entranceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entrances to fetch.
     */
    orderBy?: entranceOrderByWithRelationInput | entranceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: entranceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entrances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entrances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned entrances
    **/
    _count?: true | EntranceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EntranceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EntranceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EntranceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EntranceMaxAggregateInputType
  }

  export type GetEntranceAggregateType<T extends EntranceAggregateArgs> = {
        [P in keyof T & keyof AggregateEntrance]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEntrance[P]>
      : GetScalarType<T[P], AggregateEntrance[P]>
  }




  export type entranceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: entranceWhereInput
    orderBy?: entranceOrderByWithAggregationInput | entranceOrderByWithAggregationInput[]
    by: EntranceScalarFieldEnum[] | EntranceScalarFieldEnum
    having?: entranceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EntranceCountAggregateInputType | true
    _avg?: EntranceAvgAggregateInputType
    _sum?: EntranceSumAggregateInputType
    _min?: EntranceMinAggregateInputType
    _max?: EntranceMaxAggregateInputType
  }

  export type EntranceGroupByOutputType = {
    id: number
    type: number
    useragent: string
    ipaddress: string
    userid: number
    createdat: Date
    _count: EntranceCountAggregateOutputType | null
    _avg: EntranceAvgAggregateOutputType | null
    _sum: EntranceSumAggregateOutputType | null
    _min: EntranceMinAggregateOutputType | null
    _max: EntranceMaxAggregateOutputType | null
  }

  type GetEntranceGroupByPayload<T extends entranceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EntranceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EntranceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EntranceGroupByOutputType[P]>
            : GetScalarType<T[P], EntranceGroupByOutputType[P]>
        }
      >
    >


  export type entranceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    useragent?: boolean
    ipaddress?: boolean
    userid?: boolean
    createdat?: boolean
  }, ExtArgs["result"]["entrance"]>

  export type entranceSelectScalar = {
    id?: boolean
    type?: boolean
    useragent?: boolean
    ipaddress?: boolean
    userid?: boolean
    createdat?: boolean
  }


  export type $entrancePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "entrance"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      type: number
      useragent: string
      ipaddress: string
      userid: number
      createdat: Date
    }, ExtArgs["result"]["entrance"]>
    composites: {}
  }


  type entranceGetPayload<S extends boolean | null | undefined | entranceDefaultArgs> = $Result.GetResult<Prisma.$entrancePayload, S>

  type entranceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<entranceFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: EntranceCountAggregateInputType | true
    }

  export interface entranceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['entrance'], meta: { name: 'entrance' } }
    /**
     * Find zero or one Entrance that matches the filter.
     * @param {entranceFindUniqueArgs} args - Arguments to find a Entrance
     * @example
     * // Get one Entrance
     * const entrance = await prisma.entrance.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends entranceFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, entranceFindUniqueArgs<ExtArgs>>
    ): Prisma__entranceClient<$Result.GetResult<Prisma.$entrancePayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Entrance that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {entranceFindUniqueOrThrowArgs} args - Arguments to find a Entrance
     * @example
     * // Get one Entrance
     * const entrance = await prisma.entrance.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends entranceFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, entranceFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__entranceClient<$Result.GetResult<Prisma.$entrancePayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Entrance that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entranceFindFirstArgs} args - Arguments to find a Entrance
     * @example
     * // Get one Entrance
     * const entrance = await prisma.entrance.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends entranceFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, entranceFindFirstArgs<ExtArgs>>
    ): Prisma__entranceClient<$Result.GetResult<Prisma.$entrancePayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Entrance that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entranceFindFirstOrThrowArgs} args - Arguments to find a Entrance
     * @example
     * // Get one Entrance
     * const entrance = await prisma.entrance.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends entranceFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, entranceFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__entranceClient<$Result.GetResult<Prisma.$entrancePayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Entrances that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entranceFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Entrances
     * const entrances = await prisma.entrance.findMany()
     * 
     * // Get first 10 Entrances
     * const entrances = await prisma.entrance.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const entranceWithIdOnly = await prisma.entrance.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends entranceFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, entranceFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$entrancePayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Entrance.
     * @param {entranceCreateArgs} args - Arguments to create a Entrance.
     * @example
     * // Create one Entrance
     * const Entrance = await prisma.entrance.create({
     *   data: {
     *     // ... data to create a Entrance
     *   }
     * })
     * 
    **/
    create<T extends entranceCreateArgs<ExtArgs>>(
      args: SelectSubset<T, entranceCreateArgs<ExtArgs>>
    ): Prisma__entranceClient<$Result.GetResult<Prisma.$entrancePayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Entrances.
     *     @param {entranceCreateManyArgs} args - Arguments to create many Entrances.
     *     @example
     *     // Create many Entrances
     *     const entrance = await prisma.entrance.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends entranceCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, entranceCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Entrance.
     * @param {entranceDeleteArgs} args - Arguments to delete one Entrance.
     * @example
     * // Delete one Entrance
     * const Entrance = await prisma.entrance.delete({
     *   where: {
     *     // ... filter to delete one Entrance
     *   }
     * })
     * 
    **/
    delete<T extends entranceDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, entranceDeleteArgs<ExtArgs>>
    ): Prisma__entranceClient<$Result.GetResult<Prisma.$entrancePayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Entrance.
     * @param {entranceUpdateArgs} args - Arguments to update one Entrance.
     * @example
     * // Update one Entrance
     * const entrance = await prisma.entrance.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends entranceUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, entranceUpdateArgs<ExtArgs>>
    ): Prisma__entranceClient<$Result.GetResult<Prisma.$entrancePayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Entrances.
     * @param {entranceDeleteManyArgs} args - Arguments to filter Entrances to delete.
     * @example
     * // Delete a few Entrances
     * const { count } = await prisma.entrance.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends entranceDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, entranceDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Entrances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entranceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Entrances
     * const entrance = await prisma.entrance.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends entranceUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, entranceUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Entrance.
     * @param {entranceUpsertArgs} args - Arguments to update or create a Entrance.
     * @example
     * // Update or create a Entrance
     * const entrance = await prisma.entrance.upsert({
     *   create: {
     *     // ... data to create a Entrance
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Entrance we want to update
     *   }
     * })
    **/
    upsert<T extends entranceUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, entranceUpsertArgs<ExtArgs>>
    ): Prisma__entranceClient<$Result.GetResult<Prisma.$entrancePayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Entrances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entranceCountArgs} args - Arguments to filter Entrances to count.
     * @example
     * // Count the number of Entrances
     * const count = await prisma.entrance.count({
     *   where: {
     *     // ... the filter for the Entrances we want to count
     *   }
     * })
    **/
    count<T extends entranceCountArgs>(
      args?: Subset<T, entranceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EntranceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Entrance.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntranceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EntranceAggregateArgs>(args: Subset<T, EntranceAggregateArgs>): Prisma.PrismaPromise<GetEntranceAggregateType<T>>

    /**
     * Group by Entrance.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entranceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends entranceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: entranceGroupByArgs['orderBy'] }
        : { orderBy?: entranceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, entranceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEntranceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the entrance model
   */
  readonly fields: entranceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for entrance.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__entranceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the entrance model
   */ 
  interface entranceFieldRefs {
    readonly id: FieldRef<"entrance", 'Int'>
    readonly type: FieldRef<"entrance", 'Int'>
    readonly useragent: FieldRef<"entrance", 'String'>
    readonly ipaddress: FieldRef<"entrance", 'String'>
    readonly userid: FieldRef<"entrance", 'Int'>
    readonly createdat: FieldRef<"entrance", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * entrance findUnique
   */
  export type entranceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entrance
     */
    select?: entranceSelect<ExtArgs> | null
    /**
     * Filter, which entrance to fetch.
     */
    where: entranceWhereUniqueInput
  }


  /**
   * entrance findUniqueOrThrow
   */
  export type entranceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entrance
     */
    select?: entranceSelect<ExtArgs> | null
    /**
     * Filter, which entrance to fetch.
     */
    where: entranceWhereUniqueInput
  }


  /**
   * entrance findFirst
   */
  export type entranceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entrance
     */
    select?: entranceSelect<ExtArgs> | null
    /**
     * Filter, which entrance to fetch.
     */
    where?: entranceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entrances to fetch.
     */
    orderBy?: entranceOrderByWithRelationInput | entranceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for entrances.
     */
    cursor?: entranceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entrances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entrances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of entrances.
     */
    distinct?: EntranceScalarFieldEnum | EntranceScalarFieldEnum[]
  }


  /**
   * entrance findFirstOrThrow
   */
  export type entranceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entrance
     */
    select?: entranceSelect<ExtArgs> | null
    /**
     * Filter, which entrance to fetch.
     */
    where?: entranceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entrances to fetch.
     */
    orderBy?: entranceOrderByWithRelationInput | entranceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for entrances.
     */
    cursor?: entranceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entrances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entrances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of entrances.
     */
    distinct?: EntranceScalarFieldEnum | EntranceScalarFieldEnum[]
  }


  /**
   * entrance findMany
   */
  export type entranceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entrance
     */
    select?: entranceSelect<ExtArgs> | null
    /**
     * Filter, which entrances to fetch.
     */
    where?: entranceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entrances to fetch.
     */
    orderBy?: entranceOrderByWithRelationInput | entranceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing entrances.
     */
    cursor?: entranceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entrances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entrances.
     */
    skip?: number
    distinct?: EntranceScalarFieldEnum | EntranceScalarFieldEnum[]
  }


  /**
   * entrance create
   */
  export type entranceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entrance
     */
    select?: entranceSelect<ExtArgs> | null
    /**
     * The data needed to create a entrance.
     */
    data: XOR<entranceCreateInput, entranceUncheckedCreateInput>
  }


  /**
   * entrance createMany
   */
  export type entranceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many entrances.
     */
    data: entranceCreateManyInput | entranceCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * entrance update
   */
  export type entranceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entrance
     */
    select?: entranceSelect<ExtArgs> | null
    /**
     * The data needed to update a entrance.
     */
    data: XOR<entranceUpdateInput, entranceUncheckedUpdateInput>
    /**
     * Choose, which entrance to update.
     */
    where: entranceWhereUniqueInput
  }


  /**
   * entrance updateMany
   */
  export type entranceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update entrances.
     */
    data: XOR<entranceUpdateManyMutationInput, entranceUncheckedUpdateManyInput>
    /**
     * Filter which entrances to update
     */
    where?: entranceWhereInput
  }


  /**
   * entrance upsert
   */
  export type entranceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entrance
     */
    select?: entranceSelect<ExtArgs> | null
    /**
     * The filter to search for the entrance to update in case it exists.
     */
    where: entranceWhereUniqueInput
    /**
     * In case the entrance found by the `where` argument doesn't exist, create a new entrance with this data.
     */
    create: XOR<entranceCreateInput, entranceUncheckedCreateInput>
    /**
     * In case the entrance was found with the provided `where` argument, update it with this data.
     */
    update: XOR<entranceUpdateInput, entranceUncheckedUpdateInput>
  }


  /**
   * entrance delete
   */
  export type entranceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entrance
     */
    select?: entranceSelect<ExtArgs> | null
    /**
     * Filter which entrance to delete.
     */
    where: entranceWhereUniqueInput
  }


  /**
   * entrance deleteMany
   */
  export type entranceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which entrances to delete
     */
    where?: entranceWhereInput
  }


  /**
   * entrance without action
   */
  export type entranceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entrance
     */
    select?: entranceSelect<ExtArgs> | null
  }



  /**
   * Model apiclient
   */

  export type AggregateApiclient = {
    _count: ApiclientCountAggregateOutputType | null
    _avg: ApiclientAvgAggregateOutputType | null
    _sum: ApiclientSumAggregateOutputType | null
    _min: ApiclientMinAggregateOutputType | null
    _max: ApiclientMaxAggregateOutputType | null
  }

  export type ApiclientAvgAggregateOutputType = {
    id: number | null
    type: number | null
    createdby: number | null
    updatedby: number | null
  }

  export type ApiclientSumAggregateOutputType = {
    id: number | null
    type: number | null
    createdby: number | null
    updatedby: number | null
  }

  export type ApiclientMinAggregateOutputType = {
    id: number | null
    name: string | null
    key: string | null
    secret: string | null
    type: number | null
    createdat: Date | null
    createdby: number | null
    updatedat: Date | null
    updatedby: number | null
    isactive: boolean | null
  }

  export type ApiclientMaxAggregateOutputType = {
    id: number | null
    name: string | null
    key: string | null
    secret: string | null
    type: number | null
    createdat: Date | null
    createdby: number | null
    updatedat: Date | null
    updatedby: number | null
    isactive: boolean | null
  }

  export type ApiclientCountAggregateOutputType = {
    id: number
    name: number
    key: number
    secret: number
    type: number
    createdat: number
    createdby: number
    updatedat: number
    updatedby: number
    isactive: number
    _all: number
  }


  export type ApiclientAvgAggregateInputType = {
    id?: true
    type?: true
    createdby?: true
    updatedby?: true
  }

  export type ApiclientSumAggregateInputType = {
    id?: true
    type?: true
    createdby?: true
    updatedby?: true
  }

  export type ApiclientMinAggregateInputType = {
    id?: true
    name?: true
    key?: true
    secret?: true
    type?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isactive?: true
  }

  export type ApiclientMaxAggregateInputType = {
    id?: true
    name?: true
    key?: true
    secret?: true
    type?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isactive?: true
  }

  export type ApiclientCountAggregateInputType = {
    id?: true
    name?: true
    key?: true
    secret?: true
    type?: true
    createdat?: true
    createdby?: true
    updatedat?: true
    updatedby?: true
    isactive?: true
    _all?: true
  }

  export type ApiclientAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which apiclient to aggregate.
     */
    where?: apiclientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of apiclients to fetch.
     */
    orderBy?: apiclientOrderByWithRelationInput | apiclientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: apiclientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` apiclients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` apiclients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned apiclients
    **/
    _count?: true | ApiclientCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ApiclientAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ApiclientSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ApiclientMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ApiclientMaxAggregateInputType
  }

  export type GetApiclientAggregateType<T extends ApiclientAggregateArgs> = {
        [P in keyof T & keyof AggregateApiclient]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateApiclient[P]>
      : GetScalarType<T[P], AggregateApiclient[P]>
  }




  export type apiclientGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: apiclientWhereInput
    orderBy?: apiclientOrderByWithAggregationInput | apiclientOrderByWithAggregationInput[]
    by: ApiclientScalarFieldEnum[] | ApiclientScalarFieldEnum
    having?: apiclientScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ApiclientCountAggregateInputType | true
    _avg?: ApiclientAvgAggregateInputType
    _sum?: ApiclientSumAggregateInputType
    _min?: ApiclientMinAggregateInputType
    _max?: ApiclientMaxAggregateInputType
  }

  export type ApiclientGroupByOutputType = {
    id: number
    name: string
    key: string
    secret: string
    type: number
    createdat: Date
    createdby: number
    updatedat: Date | null
    updatedby: number | null
    isactive: boolean
    _count: ApiclientCountAggregateOutputType | null
    _avg: ApiclientAvgAggregateOutputType | null
    _sum: ApiclientSumAggregateOutputType | null
    _min: ApiclientMinAggregateOutputType | null
    _max: ApiclientMaxAggregateOutputType | null
  }

  type GetApiclientGroupByPayload<T extends apiclientGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ApiclientGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ApiclientGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ApiclientGroupByOutputType[P]>
            : GetScalarType<T[P], ApiclientGroupByOutputType[P]>
        }
      >
    >


  export type apiclientSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    key?: boolean
    secret?: boolean
    type?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedat?: boolean
    updatedby?: boolean
    isactive?: boolean
    createduser?: boolean | userDefaultArgs<ExtArgs>
    updateduser?: boolean | apiclient$updateduserArgs<ExtArgs>
  }, ExtArgs["result"]["apiclient"]>

  export type apiclientSelectScalar = {
    id?: boolean
    name?: boolean
    key?: boolean
    secret?: boolean
    type?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedat?: boolean
    updatedby?: boolean
    isactive?: boolean
  }

  export type apiclientInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createduser?: boolean | userDefaultArgs<ExtArgs>
    updateduser?: boolean | apiclient$updateduserArgs<ExtArgs>
  }


  export type $apiclientPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "apiclient"
    objects: {
      createduser: Prisma.$userPayload<ExtArgs>
      updateduser: Prisma.$userPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      key: string
      secret: string
      type: number
      createdat: Date
      createdby: number
      updatedat: Date | null
      updatedby: number | null
      isactive: boolean
    }, ExtArgs["result"]["apiclient"]>
    composites: {}
  }


  type apiclientGetPayload<S extends boolean | null | undefined | apiclientDefaultArgs> = $Result.GetResult<Prisma.$apiclientPayload, S>

  type apiclientCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<apiclientFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ApiclientCountAggregateInputType | true
    }

  export interface apiclientDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['apiclient'], meta: { name: 'apiclient' } }
    /**
     * Find zero or one Apiclient that matches the filter.
     * @param {apiclientFindUniqueArgs} args - Arguments to find a Apiclient
     * @example
     * // Get one Apiclient
     * const apiclient = await prisma.apiclient.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends apiclientFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, apiclientFindUniqueArgs<ExtArgs>>
    ): Prisma__apiclientClient<$Result.GetResult<Prisma.$apiclientPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Apiclient that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {apiclientFindUniqueOrThrowArgs} args - Arguments to find a Apiclient
     * @example
     * // Get one Apiclient
     * const apiclient = await prisma.apiclient.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends apiclientFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, apiclientFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__apiclientClient<$Result.GetResult<Prisma.$apiclientPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Apiclient that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {apiclientFindFirstArgs} args - Arguments to find a Apiclient
     * @example
     * // Get one Apiclient
     * const apiclient = await prisma.apiclient.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends apiclientFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, apiclientFindFirstArgs<ExtArgs>>
    ): Prisma__apiclientClient<$Result.GetResult<Prisma.$apiclientPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Apiclient that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {apiclientFindFirstOrThrowArgs} args - Arguments to find a Apiclient
     * @example
     * // Get one Apiclient
     * const apiclient = await prisma.apiclient.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends apiclientFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, apiclientFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__apiclientClient<$Result.GetResult<Prisma.$apiclientPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Apiclients that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {apiclientFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Apiclients
     * const apiclients = await prisma.apiclient.findMany()
     * 
     * // Get first 10 Apiclients
     * const apiclients = await prisma.apiclient.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const apiclientWithIdOnly = await prisma.apiclient.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends apiclientFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, apiclientFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$apiclientPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Apiclient.
     * @param {apiclientCreateArgs} args - Arguments to create a Apiclient.
     * @example
     * // Create one Apiclient
     * const Apiclient = await prisma.apiclient.create({
     *   data: {
     *     // ... data to create a Apiclient
     *   }
     * })
     * 
    **/
    create<T extends apiclientCreateArgs<ExtArgs>>(
      args: SelectSubset<T, apiclientCreateArgs<ExtArgs>>
    ): Prisma__apiclientClient<$Result.GetResult<Prisma.$apiclientPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Apiclients.
     *     @param {apiclientCreateManyArgs} args - Arguments to create many Apiclients.
     *     @example
     *     // Create many Apiclients
     *     const apiclient = await prisma.apiclient.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends apiclientCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, apiclientCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Apiclient.
     * @param {apiclientDeleteArgs} args - Arguments to delete one Apiclient.
     * @example
     * // Delete one Apiclient
     * const Apiclient = await prisma.apiclient.delete({
     *   where: {
     *     // ... filter to delete one Apiclient
     *   }
     * })
     * 
    **/
    delete<T extends apiclientDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, apiclientDeleteArgs<ExtArgs>>
    ): Prisma__apiclientClient<$Result.GetResult<Prisma.$apiclientPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Apiclient.
     * @param {apiclientUpdateArgs} args - Arguments to update one Apiclient.
     * @example
     * // Update one Apiclient
     * const apiclient = await prisma.apiclient.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends apiclientUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, apiclientUpdateArgs<ExtArgs>>
    ): Prisma__apiclientClient<$Result.GetResult<Prisma.$apiclientPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Apiclients.
     * @param {apiclientDeleteManyArgs} args - Arguments to filter Apiclients to delete.
     * @example
     * // Delete a few Apiclients
     * const { count } = await prisma.apiclient.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends apiclientDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, apiclientDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Apiclients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {apiclientUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Apiclients
     * const apiclient = await prisma.apiclient.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends apiclientUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, apiclientUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Apiclient.
     * @param {apiclientUpsertArgs} args - Arguments to update or create a Apiclient.
     * @example
     * // Update or create a Apiclient
     * const apiclient = await prisma.apiclient.upsert({
     *   create: {
     *     // ... data to create a Apiclient
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Apiclient we want to update
     *   }
     * })
    **/
    upsert<T extends apiclientUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, apiclientUpsertArgs<ExtArgs>>
    ): Prisma__apiclientClient<$Result.GetResult<Prisma.$apiclientPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Apiclients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {apiclientCountArgs} args - Arguments to filter Apiclients to count.
     * @example
     * // Count the number of Apiclients
     * const count = await prisma.apiclient.count({
     *   where: {
     *     // ... the filter for the Apiclients we want to count
     *   }
     * })
    **/
    count<T extends apiclientCountArgs>(
      args?: Subset<T, apiclientCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ApiclientCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Apiclient.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiclientAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ApiclientAggregateArgs>(args: Subset<T, ApiclientAggregateArgs>): Prisma.PrismaPromise<GetApiclientAggregateType<T>>

    /**
     * Group by Apiclient.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {apiclientGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends apiclientGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: apiclientGroupByArgs['orderBy'] }
        : { orderBy?: apiclientGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, apiclientGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetApiclientGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the apiclient model
   */
  readonly fields: apiclientFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for apiclient.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__apiclientClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    createduser<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    updateduser<T extends apiclient$updateduserArgs<ExtArgs> = {}>(args?: Subset<T, apiclient$updateduserArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the apiclient model
   */ 
  interface apiclientFieldRefs {
    readonly id: FieldRef<"apiclient", 'Int'>
    readonly name: FieldRef<"apiclient", 'String'>
    readonly key: FieldRef<"apiclient", 'String'>
    readonly secret: FieldRef<"apiclient", 'String'>
    readonly type: FieldRef<"apiclient", 'Int'>
    readonly createdat: FieldRef<"apiclient", 'DateTime'>
    readonly createdby: FieldRef<"apiclient", 'Int'>
    readonly updatedat: FieldRef<"apiclient", 'DateTime'>
    readonly updatedby: FieldRef<"apiclient", 'Int'>
    readonly isactive: FieldRef<"apiclient", 'Boolean'>
  }
    

  // Custom InputTypes

  /**
   * apiclient findUnique
   */
  export type apiclientFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apiclient
     */
    select?: apiclientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: apiclientInclude<ExtArgs> | null
    /**
     * Filter, which apiclient to fetch.
     */
    where: apiclientWhereUniqueInput
  }


  /**
   * apiclient findUniqueOrThrow
   */
  export type apiclientFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apiclient
     */
    select?: apiclientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: apiclientInclude<ExtArgs> | null
    /**
     * Filter, which apiclient to fetch.
     */
    where: apiclientWhereUniqueInput
  }


  /**
   * apiclient findFirst
   */
  export type apiclientFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apiclient
     */
    select?: apiclientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: apiclientInclude<ExtArgs> | null
    /**
     * Filter, which apiclient to fetch.
     */
    where?: apiclientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of apiclients to fetch.
     */
    orderBy?: apiclientOrderByWithRelationInput | apiclientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for apiclients.
     */
    cursor?: apiclientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` apiclients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` apiclients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of apiclients.
     */
    distinct?: ApiclientScalarFieldEnum | ApiclientScalarFieldEnum[]
  }


  /**
   * apiclient findFirstOrThrow
   */
  export type apiclientFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apiclient
     */
    select?: apiclientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: apiclientInclude<ExtArgs> | null
    /**
     * Filter, which apiclient to fetch.
     */
    where?: apiclientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of apiclients to fetch.
     */
    orderBy?: apiclientOrderByWithRelationInput | apiclientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for apiclients.
     */
    cursor?: apiclientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` apiclients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` apiclients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of apiclients.
     */
    distinct?: ApiclientScalarFieldEnum | ApiclientScalarFieldEnum[]
  }


  /**
   * apiclient findMany
   */
  export type apiclientFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apiclient
     */
    select?: apiclientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: apiclientInclude<ExtArgs> | null
    /**
     * Filter, which apiclients to fetch.
     */
    where?: apiclientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of apiclients to fetch.
     */
    orderBy?: apiclientOrderByWithRelationInput | apiclientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing apiclients.
     */
    cursor?: apiclientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` apiclients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` apiclients.
     */
    skip?: number
    distinct?: ApiclientScalarFieldEnum | ApiclientScalarFieldEnum[]
  }


  /**
   * apiclient create
   */
  export type apiclientCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apiclient
     */
    select?: apiclientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: apiclientInclude<ExtArgs> | null
    /**
     * The data needed to create a apiclient.
     */
    data: XOR<apiclientCreateInput, apiclientUncheckedCreateInput>
  }


  /**
   * apiclient createMany
   */
  export type apiclientCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many apiclients.
     */
    data: apiclientCreateManyInput | apiclientCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * apiclient update
   */
  export type apiclientUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apiclient
     */
    select?: apiclientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: apiclientInclude<ExtArgs> | null
    /**
     * The data needed to update a apiclient.
     */
    data: XOR<apiclientUpdateInput, apiclientUncheckedUpdateInput>
    /**
     * Choose, which apiclient to update.
     */
    where: apiclientWhereUniqueInput
  }


  /**
   * apiclient updateMany
   */
  export type apiclientUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update apiclients.
     */
    data: XOR<apiclientUpdateManyMutationInput, apiclientUncheckedUpdateManyInput>
    /**
     * Filter which apiclients to update
     */
    where?: apiclientWhereInput
  }


  /**
   * apiclient upsert
   */
  export type apiclientUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apiclient
     */
    select?: apiclientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: apiclientInclude<ExtArgs> | null
    /**
     * The filter to search for the apiclient to update in case it exists.
     */
    where: apiclientWhereUniqueInput
    /**
     * In case the apiclient found by the `where` argument doesn't exist, create a new apiclient with this data.
     */
    create: XOR<apiclientCreateInput, apiclientUncheckedCreateInput>
    /**
     * In case the apiclient was found with the provided `where` argument, update it with this data.
     */
    update: XOR<apiclientUpdateInput, apiclientUncheckedUpdateInput>
  }


  /**
   * apiclient delete
   */
  export type apiclientDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apiclient
     */
    select?: apiclientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: apiclientInclude<ExtArgs> | null
    /**
     * Filter which apiclient to delete.
     */
    where: apiclientWhereUniqueInput
  }


  /**
   * apiclient deleteMany
   */
  export type apiclientDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which apiclients to delete
     */
    where?: apiclientWhereInput
  }


  /**
   * apiclient.updateduser
   */
  export type apiclient$updateduserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
  }


  /**
   * apiclient without action
   */
  export type apiclientDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apiclient
     */
    select?: apiclientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: apiclientInclude<ExtArgs> | null
  }



  /**
   * Model refreshtoken
   */

  export type AggregateRefreshtoken = {
    _count: RefreshtokenCountAggregateOutputType | null
    _avg: RefreshtokenAvgAggregateOutputType | null
    _sum: RefreshtokenSumAggregateOutputType | null
    _min: RefreshtokenMinAggregateOutputType | null
    _max: RefreshtokenMaxAggregateOutputType | null
  }

  export type RefreshtokenAvgAggregateOutputType = {
    id: number | null
    userid: number | null
  }

  export type RefreshtokenSumAggregateOutputType = {
    id: number | null
    userid: number | null
  }

  export type RefreshtokenMinAggregateOutputType = {
    id: number | null
    userid: number | null
    token: string | null
    createdat: Date | null
    updatedat: Date | null
    expiresat: Date | null
  }

  export type RefreshtokenMaxAggregateOutputType = {
    id: number | null
    userid: number | null
    token: string | null
    createdat: Date | null
    updatedat: Date | null
    expiresat: Date | null
  }

  export type RefreshtokenCountAggregateOutputType = {
    id: number
    userid: number
    token: number
    createdat: number
    updatedat: number
    expiresat: number
    _all: number
  }


  export type RefreshtokenAvgAggregateInputType = {
    id?: true
    userid?: true
  }

  export type RefreshtokenSumAggregateInputType = {
    id?: true
    userid?: true
  }

  export type RefreshtokenMinAggregateInputType = {
    id?: true
    userid?: true
    token?: true
    createdat?: true
    updatedat?: true
    expiresat?: true
  }

  export type RefreshtokenMaxAggregateInputType = {
    id?: true
    userid?: true
    token?: true
    createdat?: true
    updatedat?: true
    expiresat?: true
  }

  export type RefreshtokenCountAggregateInputType = {
    id?: true
    userid?: true
    token?: true
    createdat?: true
    updatedat?: true
    expiresat?: true
    _all?: true
  }

  export type RefreshtokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which refreshtoken to aggregate.
     */
    where?: refreshtokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refreshtokens to fetch.
     */
    orderBy?: refreshtokenOrderByWithRelationInput | refreshtokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: refreshtokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refreshtokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refreshtokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned refreshtokens
    **/
    _count?: true | RefreshtokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RefreshtokenAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RefreshtokenSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RefreshtokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RefreshtokenMaxAggregateInputType
  }

  export type GetRefreshtokenAggregateType<T extends RefreshtokenAggregateArgs> = {
        [P in keyof T & keyof AggregateRefreshtoken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRefreshtoken[P]>
      : GetScalarType<T[P], AggregateRefreshtoken[P]>
  }




  export type refreshtokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: refreshtokenWhereInput
    orderBy?: refreshtokenOrderByWithAggregationInput | refreshtokenOrderByWithAggregationInput[]
    by: RefreshtokenScalarFieldEnum[] | RefreshtokenScalarFieldEnum
    having?: refreshtokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RefreshtokenCountAggregateInputType | true
    _avg?: RefreshtokenAvgAggregateInputType
    _sum?: RefreshtokenSumAggregateInputType
    _min?: RefreshtokenMinAggregateInputType
    _max?: RefreshtokenMaxAggregateInputType
  }

  export type RefreshtokenGroupByOutputType = {
    id: number
    userid: number
    token: string
    createdat: Date
    updatedat: Date | null
    expiresat: Date | null
    _count: RefreshtokenCountAggregateOutputType | null
    _avg: RefreshtokenAvgAggregateOutputType | null
    _sum: RefreshtokenSumAggregateOutputType | null
    _min: RefreshtokenMinAggregateOutputType | null
    _max: RefreshtokenMaxAggregateOutputType | null
  }

  type GetRefreshtokenGroupByPayload<T extends refreshtokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RefreshtokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RefreshtokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RefreshtokenGroupByOutputType[P]>
            : GetScalarType<T[P], RefreshtokenGroupByOutputType[P]>
        }
      >
    >


  export type refreshtokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userid?: boolean
    token?: boolean
    createdat?: boolean
    updatedat?: boolean
    expiresat?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["refreshtoken"]>

  export type refreshtokenSelectScalar = {
    id?: boolean
    userid?: boolean
    token?: boolean
    createdat?: boolean
    updatedat?: boolean
    expiresat?: boolean
  }

  export type refreshtokenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }


  export type $refreshtokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "refreshtoken"
    objects: {
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userid: number
      token: string
      createdat: Date
      updatedat: Date | null
      expiresat: Date | null
    }, ExtArgs["result"]["refreshtoken"]>
    composites: {}
  }


  type refreshtokenGetPayload<S extends boolean | null | undefined | refreshtokenDefaultArgs> = $Result.GetResult<Prisma.$refreshtokenPayload, S>

  type refreshtokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<refreshtokenFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: RefreshtokenCountAggregateInputType | true
    }

  export interface refreshtokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['refreshtoken'], meta: { name: 'refreshtoken' } }
    /**
     * Find zero or one Refreshtoken that matches the filter.
     * @param {refreshtokenFindUniqueArgs} args - Arguments to find a Refreshtoken
     * @example
     * // Get one Refreshtoken
     * const refreshtoken = await prisma.refreshtoken.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends refreshtokenFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, refreshtokenFindUniqueArgs<ExtArgs>>
    ): Prisma__refreshtokenClient<$Result.GetResult<Prisma.$refreshtokenPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Refreshtoken that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {refreshtokenFindUniqueOrThrowArgs} args - Arguments to find a Refreshtoken
     * @example
     * // Get one Refreshtoken
     * const refreshtoken = await prisma.refreshtoken.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends refreshtokenFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, refreshtokenFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__refreshtokenClient<$Result.GetResult<Prisma.$refreshtokenPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Refreshtoken that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refreshtokenFindFirstArgs} args - Arguments to find a Refreshtoken
     * @example
     * // Get one Refreshtoken
     * const refreshtoken = await prisma.refreshtoken.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends refreshtokenFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, refreshtokenFindFirstArgs<ExtArgs>>
    ): Prisma__refreshtokenClient<$Result.GetResult<Prisma.$refreshtokenPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Refreshtoken that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refreshtokenFindFirstOrThrowArgs} args - Arguments to find a Refreshtoken
     * @example
     * // Get one Refreshtoken
     * const refreshtoken = await prisma.refreshtoken.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends refreshtokenFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, refreshtokenFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__refreshtokenClient<$Result.GetResult<Prisma.$refreshtokenPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Refreshtokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refreshtokenFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Refreshtokens
     * const refreshtokens = await prisma.refreshtoken.findMany()
     * 
     * // Get first 10 Refreshtokens
     * const refreshtokens = await prisma.refreshtoken.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const refreshtokenWithIdOnly = await prisma.refreshtoken.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends refreshtokenFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, refreshtokenFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$refreshtokenPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Refreshtoken.
     * @param {refreshtokenCreateArgs} args - Arguments to create a Refreshtoken.
     * @example
     * // Create one Refreshtoken
     * const Refreshtoken = await prisma.refreshtoken.create({
     *   data: {
     *     // ... data to create a Refreshtoken
     *   }
     * })
     * 
    **/
    create<T extends refreshtokenCreateArgs<ExtArgs>>(
      args: SelectSubset<T, refreshtokenCreateArgs<ExtArgs>>
    ): Prisma__refreshtokenClient<$Result.GetResult<Prisma.$refreshtokenPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Refreshtokens.
     *     @param {refreshtokenCreateManyArgs} args - Arguments to create many Refreshtokens.
     *     @example
     *     // Create many Refreshtokens
     *     const refreshtoken = await prisma.refreshtoken.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends refreshtokenCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, refreshtokenCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Refreshtoken.
     * @param {refreshtokenDeleteArgs} args - Arguments to delete one Refreshtoken.
     * @example
     * // Delete one Refreshtoken
     * const Refreshtoken = await prisma.refreshtoken.delete({
     *   where: {
     *     // ... filter to delete one Refreshtoken
     *   }
     * })
     * 
    **/
    delete<T extends refreshtokenDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, refreshtokenDeleteArgs<ExtArgs>>
    ): Prisma__refreshtokenClient<$Result.GetResult<Prisma.$refreshtokenPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Refreshtoken.
     * @param {refreshtokenUpdateArgs} args - Arguments to update one Refreshtoken.
     * @example
     * // Update one Refreshtoken
     * const refreshtoken = await prisma.refreshtoken.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends refreshtokenUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, refreshtokenUpdateArgs<ExtArgs>>
    ): Prisma__refreshtokenClient<$Result.GetResult<Prisma.$refreshtokenPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Refreshtokens.
     * @param {refreshtokenDeleteManyArgs} args - Arguments to filter Refreshtokens to delete.
     * @example
     * // Delete a few Refreshtokens
     * const { count } = await prisma.refreshtoken.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends refreshtokenDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, refreshtokenDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Refreshtokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refreshtokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Refreshtokens
     * const refreshtoken = await prisma.refreshtoken.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends refreshtokenUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, refreshtokenUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Refreshtoken.
     * @param {refreshtokenUpsertArgs} args - Arguments to update or create a Refreshtoken.
     * @example
     * // Update or create a Refreshtoken
     * const refreshtoken = await prisma.refreshtoken.upsert({
     *   create: {
     *     // ... data to create a Refreshtoken
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Refreshtoken we want to update
     *   }
     * })
    **/
    upsert<T extends refreshtokenUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, refreshtokenUpsertArgs<ExtArgs>>
    ): Prisma__refreshtokenClient<$Result.GetResult<Prisma.$refreshtokenPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Refreshtokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refreshtokenCountArgs} args - Arguments to filter Refreshtokens to count.
     * @example
     * // Count the number of Refreshtokens
     * const count = await prisma.refreshtoken.count({
     *   where: {
     *     // ... the filter for the Refreshtokens we want to count
     *   }
     * })
    **/
    count<T extends refreshtokenCountArgs>(
      args?: Subset<T, refreshtokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RefreshtokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Refreshtoken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshtokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RefreshtokenAggregateArgs>(args: Subset<T, RefreshtokenAggregateArgs>): Prisma.PrismaPromise<GetRefreshtokenAggregateType<T>>

    /**
     * Group by Refreshtoken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refreshtokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends refreshtokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: refreshtokenGroupByArgs['orderBy'] }
        : { orderBy?: refreshtokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, refreshtokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRefreshtokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the refreshtoken model
   */
  readonly fields: refreshtokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for refreshtoken.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__refreshtokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the refreshtoken model
   */ 
  interface refreshtokenFieldRefs {
    readonly id: FieldRef<"refreshtoken", 'Int'>
    readonly userid: FieldRef<"refreshtoken", 'Int'>
    readonly token: FieldRef<"refreshtoken", 'String'>
    readonly createdat: FieldRef<"refreshtoken", 'DateTime'>
    readonly updatedat: FieldRef<"refreshtoken", 'DateTime'>
    readonly expiresat: FieldRef<"refreshtoken", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * refreshtoken findUnique
   */
  export type refreshtokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refreshtoken
     */
    select?: refreshtokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: refreshtokenInclude<ExtArgs> | null
    /**
     * Filter, which refreshtoken to fetch.
     */
    where: refreshtokenWhereUniqueInput
  }


  /**
   * refreshtoken findUniqueOrThrow
   */
  export type refreshtokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refreshtoken
     */
    select?: refreshtokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: refreshtokenInclude<ExtArgs> | null
    /**
     * Filter, which refreshtoken to fetch.
     */
    where: refreshtokenWhereUniqueInput
  }


  /**
   * refreshtoken findFirst
   */
  export type refreshtokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refreshtoken
     */
    select?: refreshtokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: refreshtokenInclude<ExtArgs> | null
    /**
     * Filter, which refreshtoken to fetch.
     */
    where?: refreshtokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refreshtokens to fetch.
     */
    orderBy?: refreshtokenOrderByWithRelationInput | refreshtokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for refreshtokens.
     */
    cursor?: refreshtokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refreshtokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refreshtokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of refreshtokens.
     */
    distinct?: RefreshtokenScalarFieldEnum | RefreshtokenScalarFieldEnum[]
  }


  /**
   * refreshtoken findFirstOrThrow
   */
  export type refreshtokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refreshtoken
     */
    select?: refreshtokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: refreshtokenInclude<ExtArgs> | null
    /**
     * Filter, which refreshtoken to fetch.
     */
    where?: refreshtokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refreshtokens to fetch.
     */
    orderBy?: refreshtokenOrderByWithRelationInput | refreshtokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for refreshtokens.
     */
    cursor?: refreshtokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refreshtokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refreshtokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of refreshtokens.
     */
    distinct?: RefreshtokenScalarFieldEnum | RefreshtokenScalarFieldEnum[]
  }


  /**
   * refreshtoken findMany
   */
  export type refreshtokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refreshtoken
     */
    select?: refreshtokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: refreshtokenInclude<ExtArgs> | null
    /**
     * Filter, which refreshtokens to fetch.
     */
    where?: refreshtokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refreshtokens to fetch.
     */
    orderBy?: refreshtokenOrderByWithRelationInput | refreshtokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing refreshtokens.
     */
    cursor?: refreshtokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refreshtokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refreshtokens.
     */
    skip?: number
    distinct?: RefreshtokenScalarFieldEnum | RefreshtokenScalarFieldEnum[]
  }


  /**
   * refreshtoken create
   */
  export type refreshtokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refreshtoken
     */
    select?: refreshtokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: refreshtokenInclude<ExtArgs> | null
    /**
     * The data needed to create a refreshtoken.
     */
    data: XOR<refreshtokenCreateInput, refreshtokenUncheckedCreateInput>
  }


  /**
   * refreshtoken createMany
   */
  export type refreshtokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many refreshtokens.
     */
    data: refreshtokenCreateManyInput | refreshtokenCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * refreshtoken update
   */
  export type refreshtokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refreshtoken
     */
    select?: refreshtokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: refreshtokenInclude<ExtArgs> | null
    /**
     * The data needed to update a refreshtoken.
     */
    data: XOR<refreshtokenUpdateInput, refreshtokenUncheckedUpdateInput>
    /**
     * Choose, which refreshtoken to update.
     */
    where: refreshtokenWhereUniqueInput
  }


  /**
   * refreshtoken updateMany
   */
  export type refreshtokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update refreshtokens.
     */
    data: XOR<refreshtokenUpdateManyMutationInput, refreshtokenUncheckedUpdateManyInput>
    /**
     * Filter which refreshtokens to update
     */
    where?: refreshtokenWhereInput
  }


  /**
   * refreshtoken upsert
   */
  export type refreshtokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refreshtoken
     */
    select?: refreshtokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: refreshtokenInclude<ExtArgs> | null
    /**
     * The filter to search for the refreshtoken to update in case it exists.
     */
    where: refreshtokenWhereUniqueInput
    /**
     * In case the refreshtoken found by the `where` argument doesn't exist, create a new refreshtoken with this data.
     */
    create: XOR<refreshtokenCreateInput, refreshtokenUncheckedCreateInput>
    /**
     * In case the refreshtoken was found with the provided `where` argument, update it with this data.
     */
    update: XOR<refreshtokenUpdateInput, refreshtokenUncheckedUpdateInput>
  }


  /**
   * refreshtoken delete
   */
  export type refreshtokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refreshtoken
     */
    select?: refreshtokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: refreshtokenInclude<ExtArgs> | null
    /**
     * Filter which refreshtoken to delete.
     */
    where: refreshtokenWhereUniqueInput
  }


  /**
   * refreshtoken deleteMany
   */
  export type refreshtokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which refreshtokens to delete
     */
    where?: refreshtokenWhereInput
  }


  /**
   * refreshtoken without action
   */
  export type refreshtokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refreshtoken
     */
    select?: refreshtokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: refreshtokenInclude<ExtArgs> | null
  }



  /**
   * Model revokedtoken
   */

  export type AggregateRevokedtoken = {
    _count: RevokedtokenCountAggregateOutputType | null
    _avg: RevokedtokenAvgAggregateOutputType | null
    _sum: RevokedtokenSumAggregateOutputType | null
    _min: RevokedtokenMinAggregateOutputType | null
    _max: RevokedtokenMaxAggregateOutputType | null
  }

  export type RevokedtokenAvgAggregateOutputType = {
    id: number | null
  }

  export type RevokedtokenSumAggregateOutputType = {
    id: number | null
  }

  export type RevokedtokenMinAggregateOutputType = {
    id: number | null
    token: string | null
    date: Date | null
  }

  export type RevokedtokenMaxAggregateOutputType = {
    id: number | null
    token: string | null
    date: Date | null
  }

  export type RevokedtokenCountAggregateOutputType = {
    id: number
    token: number
    date: number
    _all: number
  }


  export type RevokedtokenAvgAggregateInputType = {
    id?: true
  }

  export type RevokedtokenSumAggregateInputType = {
    id?: true
  }

  export type RevokedtokenMinAggregateInputType = {
    id?: true
    token?: true
    date?: true
  }

  export type RevokedtokenMaxAggregateInputType = {
    id?: true
    token?: true
    date?: true
  }

  export type RevokedtokenCountAggregateInputType = {
    id?: true
    token?: true
    date?: true
    _all?: true
  }

  export type RevokedtokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which revokedtoken to aggregate.
     */
    where?: revokedtokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of revokedtokens to fetch.
     */
    orderBy?: revokedtokenOrderByWithRelationInput | revokedtokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: revokedtokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` revokedtokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` revokedtokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned revokedtokens
    **/
    _count?: true | RevokedtokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RevokedtokenAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RevokedtokenSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RevokedtokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RevokedtokenMaxAggregateInputType
  }

  export type GetRevokedtokenAggregateType<T extends RevokedtokenAggregateArgs> = {
        [P in keyof T & keyof AggregateRevokedtoken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRevokedtoken[P]>
      : GetScalarType<T[P], AggregateRevokedtoken[P]>
  }




  export type revokedtokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: revokedtokenWhereInput
    orderBy?: revokedtokenOrderByWithAggregationInput | revokedtokenOrderByWithAggregationInput[]
    by: RevokedtokenScalarFieldEnum[] | RevokedtokenScalarFieldEnum
    having?: revokedtokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RevokedtokenCountAggregateInputType | true
    _avg?: RevokedtokenAvgAggregateInputType
    _sum?: RevokedtokenSumAggregateInputType
    _min?: RevokedtokenMinAggregateInputType
    _max?: RevokedtokenMaxAggregateInputType
  }

  export type RevokedtokenGroupByOutputType = {
    id: number
    token: string
    date: Date
    _count: RevokedtokenCountAggregateOutputType | null
    _avg: RevokedtokenAvgAggregateOutputType | null
    _sum: RevokedtokenSumAggregateOutputType | null
    _min: RevokedtokenMinAggregateOutputType | null
    _max: RevokedtokenMaxAggregateOutputType | null
  }

  type GetRevokedtokenGroupByPayload<T extends revokedtokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RevokedtokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RevokedtokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RevokedtokenGroupByOutputType[P]>
            : GetScalarType<T[P], RevokedtokenGroupByOutputType[P]>
        }
      >
    >


  export type revokedtokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    date?: boolean
  }, ExtArgs["result"]["revokedtoken"]>

  export type revokedtokenSelectScalar = {
    id?: boolean
    token?: boolean
    date?: boolean
  }


  export type $revokedtokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "revokedtoken"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      token: string
      date: Date
    }, ExtArgs["result"]["revokedtoken"]>
    composites: {}
  }


  type revokedtokenGetPayload<S extends boolean | null | undefined | revokedtokenDefaultArgs> = $Result.GetResult<Prisma.$revokedtokenPayload, S>

  type revokedtokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<revokedtokenFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: RevokedtokenCountAggregateInputType | true
    }

  export interface revokedtokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['revokedtoken'], meta: { name: 'revokedtoken' } }
    /**
     * Find zero or one Revokedtoken that matches the filter.
     * @param {revokedtokenFindUniqueArgs} args - Arguments to find a Revokedtoken
     * @example
     * // Get one Revokedtoken
     * const revokedtoken = await prisma.revokedtoken.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends revokedtokenFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, revokedtokenFindUniqueArgs<ExtArgs>>
    ): Prisma__revokedtokenClient<$Result.GetResult<Prisma.$revokedtokenPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Revokedtoken that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {revokedtokenFindUniqueOrThrowArgs} args - Arguments to find a Revokedtoken
     * @example
     * // Get one Revokedtoken
     * const revokedtoken = await prisma.revokedtoken.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends revokedtokenFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, revokedtokenFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__revokedtokenClient<$Result.GetResult<Prisma.$revokedtokenPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Revokedtoken that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {revokedtokenFindFirstArgs} args - Arguments to find a Revokedtoken
     * @example
     * // Get one Revokedtoken
     * const revokedtoken = await prisma.revokedtoken.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends revokedtokenFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, revokedtokenFindFirstArgs<ExtArgs>>
    ): Prisma__revokedtokenClient<$Result.GetResult<Prisma.$revokedtokenPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Revokedtoken that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {revokedtokenFindFirstOrThrowArgs} args - Arguments to find a Revokedtoken
     * @example
     * // Get one Revokedtoken
     * const revokedtoken = await prisma.revokedtoken.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends revokedtokenFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, revokedtokenFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__revokedtokenClient<$Result.GetResult<Prisma.$revokedtokenPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Revokedtokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {revokedtokenFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Revokedtokens
     * const revokedtokens = await prisma.revokedtoken.findMany()
     * 
     * // Get first 10 Revokedtokens
     * const revokedtokens = await prisma.revokedtoken.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const revokedtokenWithIdOnly = await prisma.revokedtoken.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends revokedtokenFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, revokedtokenFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$revokedtokenPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Revokedtoken.
     * @param {revokedtokenCreateArgs} args - Arguments to create a Revokedtoken.
     * @example
     * // Create one Revokedtoken
     * const Revokedtoken = await prisma.revokedtoken.create({
     *   data: {
     *     // ... data to create a Revokedtoken
     *   }
     * })
     * 
    **/
    create<T extends revokedtokenCreateArgs<ExtArgs>>(
      args: SelectSubset<T, revokedtokenCreateArgs<ExtArgs>>
    ): Prisma__revokedtokenClient<$Result.GetResult<Prisma.$revokedtokenPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Revokedtokens.
     *     @param {revokedtokenCreateManyArgs} args - Arguments to create many Revokedtokens.
     *     @example
     *     // Create many Revokedtokens
     *     const revokedtoken = await prisma.revokedtoken.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends revokedtokenCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, revokedtokenCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Revokedtoken.
     * @param {revokedtokenDeleteArgs} args - Arguments to delete one Revokedtoken.
     * @example
     * // Delete one Revokedtoken
     * const Revokedtoken = await prisma.revokedtoken.delete({
     *   where: {
     *     // ... filter to delete one Revokedtoken
     *   }
     * })
     * 
    **/
    delete<T extends revokedtokenDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, revokedtokenDeleteArgs<ExtArgs>>
    ): Prisma__revokedtokenClient<$Result.GetResult<Prisma.$revokedtokenPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Revokedtoken.
     * @param {revokedtokenUpdateArgs} args - Arguments to update one Revokedtoken.
     * @example
     * // Update one Revokedtoken
     * const revokedtoken = await prisma.revokedtoken.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends revokedtokenUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, revokedtokenUpdateArgs<ExtArgs>>
    ): Prisma__revokedtokenClient<$Result.GetResult<Prisma.$revokedtokenPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Revokedtokens.
     * @param {revokedtokenDeleteManyArgs} args - Arguments to filter Revokedtokens to delete.
     * @example
     * // Delete a few Revokedtokens
     * const { count } = await prisma.revokedtoken.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends revokedtokenDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, revokedtokenDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Revokedtokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {revokedtokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Revokedtokens
     * const revokedtoken = await prisma.revokedtoken.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends revokedtokenUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, revokedtokenUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Revokedtoken.
     * @param {revokedtokenUpsertArgs} args - Arguments to update or create a Revokedtoken.
     * @example
     * // Update or create a Revokedtoken
     * const revokedtoken = await prisma.revokedtoken.upsert({
     *   create: {
     *     // ... data to create a Revokedtoken
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Revokedtoken we want to update
     *   }
     * })
    **/
    upsert<T extends revokedtokenUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, revokedtokenUpsertArgs<ExtArgs>>
    ): Prisma__revokedtokenClient<$Result.GetResult<Prisma.$revokedtokenPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Revokedtokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {revokedtokenCountArgs} args - Arguments to filter Revokedtokens to count.
     * @example
     * // Count the number of Revokedtokens
     * const count = await prisma.revokedtoken.count({
     *   where: {
     *     // ... the filter for the Revokedtokens we want to count
     *   }
     * })
    **/
    count<T extends revokedtokenCountArgs>(
      args?: Subset<T, revokedtokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RevokedtokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Revokedtoken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RevokedtokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RevokedtokenAggregateArgs>(args: Subset<T, RevokedtokenAggregateArgs>): Prisma.PrismaPromise<GetRevokedtokenAggregateType<T>>

    /**
     * Group by Revokedtoken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {revokedtokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends revokedtokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: revokedtokenGroupByArgs['orderBy'] }
        : { orderBy?: revokedtokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, revokedtokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRevokedtokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the revokedtoken model
   */
  readonly fields: revokedtokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for revokedtoken.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__revokedtokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the revokedtoken model
   */ 
  interface revokedtokenFieldRefs {
    readonly id: FieldRef<"revokedtoken", 'Int'>
    readonly token: FieldRef<"revokedtoken", 'String'>
    readonly date: FieldRef<"revokedtoken", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * revokedtoken findUnique
   */
  export type revokedtokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revokedtoken
     */
    select?: revokedtokenSelect<ExtArgs> | null
    /**
     * Filter, which revokedtoken to fetch.
     */
    where: revokedtokenWhereUniqueInput
  }


  /**
   * revokedtoken findUniqueOrThrow
   */
  export type revokedtokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revokedtoken
     */
    select?: revokedtokenSelect<ExtArgs> | null
    /**
     * Filter, which revokedtoken to fetch.
     */
    where: revokedtokenWhereUniqueInput
  }


  /**
   * revokedtoken findFirst
   */
  export type revokedtokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revokedtoken
     */
    select?: revokedtokenSelect<ExtArgs> | null
    /**
     * Filter, which revokedtoken to fetch.
     */
    where?: revokedtokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of revokedtokens to fetch.
     */
    orderBy?: revokedtokenOrderByWithRelationInput | revokedtokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for revokedtokens.
     */
    cursor?: revokedtokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` revokedtokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` revokedtokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of revokedtokens.
     */
    distinct?: RevokedtokenScalarFieldEnum | RevokedtokenScalarFieldEnum[]
  }


  /**
   * revokedtoken findFirstOrThrow
   */
  export type revokedtokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revokedtoken
     */
    select?: revokedtokenSelect<ExtArgs> | null
    /**
     * Filter, which revokedtoken to fetch.
     */
    where?: revokedtokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of revokedtokens to fetch.
     */
    orderBy?: revokedtokenOrderByWithRelationInput | revokedtokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for revokedtokens.
     */
    cursor?: revokedtokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` revokedtokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` revokedtokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of revokedtokens.
     */
    distinct?: RevokedtokenScalarFieldEnum | RevokedtokenScalarFieldEnum[]
  }


  /**
   * revokedtoken findMany
   */
  export type revokedtokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revokedtoken
     */
    select?: revokedtokenSelect<ExtArgs> | null
    /**
     * Filter, which revokedtokens to fetch.
     */
    where?: revokedtokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of revokedtokens to fetch.
     */
    orderBy?: revokedtokenOrderByWithRelationInput | revokedtokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing revokedtokens.
     */
    cursor?: revokedtokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` revokedtokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` revokedtokens.
     */
    skip?: number
    distinct?: RevokedtokenScalarFieldEnum | RevokedtokenScalarFieldEnum[]
  }


  /**
   * revokedtoken create
   */
  export type revokedtokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revokedtoken
     */
    select?: revokedtokenSelect<ExtArgs> | null
    /**
     * The data needed to create a revokedtoken.
     */
    data: XOR<revokedtokenCreateInput, revokedtokenUncheckedCreateInput>
  }


  /**
   * revokedtoken createMany
   */
  export type revokedtokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many revokedtokens.
     */
    data: revokedtokenCreateManyInput | revokedtokenCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * revokedtoken update
   */
  export type revokedtokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revokedtoken
     */
    select?: revokedtokenSelect<ExtArgs> | null
    /**
     * The data needed to update a revokedtoken.
     */
    data: XOR<revokedtokenUpdateInput, revokedtokenUncheckedUpdateInput>
    /**
     * Choose, which revokedtoken to update.
     */
    where: revokedtokenWhereUniqueInput
  }


  /**
   * revokedtoken updateMany
   */
  export type revokedtokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update revokedtokens.
     */
    data: XOR<revokedtokenUpdateManyMutationInput, revokedtokenUncheckedUpdateManyInput>
    /**
     * Filter which revokedtokens to update
     */
    where?: revokedtokenWhereInput
  }


  /**
   * revokedtoken upsert
   */
  export type revokedtokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revokedtoken
     */
    select?: revokedtokenSelect<ExtArgs> | null
    /**
     * The filter to search for the revokedtoken to update in case it exists.
     */
    where: revokedtokenWhereUniqueInput
    /**
     * In case the revokedtoken found by the `where` argument doesn't exist, create a new revokedtoken with this data.
     */
    create: XOR<revokedtokenCreateInput, revokedtokenUncheckedCreateInput>
    /**
     * In case the revokedtoken was found with the provided `where` argument, update it with this data.
     */
    update: XOR<revokedtokenUpdateInput, revokedtokenUncheckedUpdateInput>
  }


  /**
   * revokedtoken delete
   */
  export type revokedtokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revokedtoken
     */
    select?: revokedtokenSelect<ExtArgs> | null
    /**
     * Filter which revokedtoken to delete.
     */
    where: revokedtokenWhereUniqueInput
  }


  /**
   * revokedtoken deleteMany
   */
  export type revokedtokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which revokedtokens to delete
     */
    where?: revokedtokenWhereInput
  }


  /**
   * revokedtoken without action
   */
  export type revokedtokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revokedtoken
     */
    select?: revokedtokenSelect<ExtArgs> | null
  }



  /**
   * Model role
   */

  export type AggregateRole = {
    _count: RoleCountAggregateOutputType | null
    _avg: RoleAvgAggregateOutputType | null
    _sum: RoleSumAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  export type RoleAvgAggregateOutputType = {
    id: number | null
    createdby: number | null
    updatedby: number | null
  }

  export type RoleSumAggregateOutputType = {
    id: number | null
    createdby: number | null
    updatedby: number | null
  }

  export type RoleMinAggregateOutputType = {
    id: number | null
    name: string | null
    createdby: number | null
    createdat: Date | null
    updatedby: number | null
    updatedat: Date | null
    issystemrole: boolean | null
  }

  export type RoleMaxAggregateOutputType = {
    id: number | null
    name: string | null
    createdby: number | null
    createdat: Date | null
    updatedby: number | null
    updatedat: Date | null
    issystemrole: boolean | null
  }

  export type RoleCountAggregateOutputType = {
    id: number
    name: number
    createdby: number
    createdat: number
    updatedby: number
    updatedat: number
    issystemrole: number
    _all: number
  }


  export type RoleAvgAggregateInputType = {
    id?: true
    createdby?: true
    updatedby?: true
  }

  export type RoleSumAggregateInputType = {
    id?: true
    createdby?: true
    updatedby?: true
  }

  export type RoleMinAggregateInputType = {
    id?: true
    name?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
    issystemrole?: true
  }

  export type RoleMaxAggregateInputType = {
    id?: true
    name?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
    issystemrole?: true
  }

  export type RoleCountAggregateInputType = {
    id?: true
    name?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
    issystemrole?: true
    _all?: true
  }

  export type RoleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which role to aggregate.
     */
    where?: roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: roleOrderByWithRelationInput | roleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned roles
    **/
    _count?: true | RoleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RoleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RoleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RoleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RoleMaxAggregateInputType
  }

  export type GetRoleAggregateType<T extends RoleAggregateArgs> = {
        [P in keyof T & keyof AggregateRole]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRole[P]>
      : GetScalarType<T[P], AggregateRole[P]>
  }




  export type roleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: roleWhereInput
    orderBy?: roleOrderByWithAggregationInput | roleOrderByWithAggregationInput[]
    by: RoleScalarFieldEnum[] | RoleScalarFieldEnum
    having?: roleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RoleCountAggregateInputType | true
    _avg?: RoleAvgAggregateInputType
    _sum?: RoleSumAggregateInputType
    _min?: RoleMinAggregateInputType
    _max?: RoleMaxAggregateInputType
  }

  export type RoleGroupByOutputType = {
    id: number
    name: string
    createdby: number
    createdat: Date
    updatedby: number | null
    updatedat: Date | null
    issystemrole: boolean
    _count: RoleCountAggregateOutputType | null
    _avg: RoleAvgAggregateOutputType | null
    _sum: RoleSumAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  type GetRoleGroupByPayload<T extends roleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RoleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RoleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RoleGroupByOutputType[P]>
            : GetScalarType<T[P], RoleGroupByOutputType[P]>
        }
      >
    >


  export type roleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
    issystemrole?: boolean
    createduser?: boolean | userDefaultArgs<ExtArgs>
    updateduser?: boolean | role$updateduserArgs<ExtArgs>
    rolepermissions?: boolean | role$rolepermissionsArgs<ExtArgs>
    userroles?: boolean | role$userrolesArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["role"]>

  export type roleSelectScalar = {
    id?: boolean
    name?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
    issystemrole?: boolean
  }

  export type roleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createduser?: boolean | userDefaultArgs<ExtArgs>
    updateduser?: boolean | role$updateduserArgs<ExtArgs>
    rolepermissions?: boolean | role$rolepermissionsArgs<ExtArgs>
    userroles?: boolean | role$userrolesArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $rolePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "role"
    objects: {
      createduser: Prisma.$userPayload<ExtArgs>
      updateduser: Prisma.$userPayload<ExtArgs> | null
      rolepermissions: Prisma.$rolepermissionPayload<ExtArgs>[]
      userroles: Prisma.$userrolePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      createdby: number
      createdat: Date
      updatedby: number | null
      updatedat: Date | null
      issystemrole: boolean
    }, ExtArgs["result"]["role"]>
    composites: {}
  }


  type roleGetPayload<S extends boolean | null | undefined | roleDefaultArgs> = $Result.GetResult<Prisma.$rolePayload, S>

  type roleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<roleFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: RoleCountAggregateInputType | true
    }

  export interface roleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['role'], meta: { name: 'role' } }
    /**
     * Find zero or one Role that matches the filter.
     * @param {roleFindUniqueArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends roleFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, roleFindUniqueArgs<ExtArgs>>
    ): Prisma__roleClient<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Role that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {roleFindUniqueOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends roleFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, roleFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__roleClient<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Role that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roleFindFirstArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends roleFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, roleFindFirstArgs<ExtArgs>>
    ): Prisma__roleClient<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Role that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roleFindFirstOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends roleFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, roleFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__roleClient<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roleFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Roles
     * const roles = await prisma.role.findMany()
     * 
     * // Get first 10 Roles
     * const roles = await prisma.role.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const roleWithIdOnly = await prisma.role.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends roleFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, roleFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Role.
     * @param {roleCreateArgs} args - Arguments to create a Role.
     * @example
     * // Create one Role
     * const Role = await prisma.role.create({
     *   data: {
     *     // ... data to create a Role
     *   }
     * })
     * 
    **/
    create<T extends roleCreateArgs<ExtArgs>>(
      args: SelectSubset<T, roleCreateArgs<ExtArgs>>
    ): Prisma__roleClient<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Roles.
     *     @param {roleCreateManyArgs} args - Arguments to create many Roles.
     *     @example
     *     // Create many Roles
     *     const role = await prisma.role.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends roleCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, roleCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Role.
     * @param {roleDeleteArgs} args - Arguments to delete one Role.
     * @example
     * // Delete one Role
     * const Role = await prisma.role.delete({
     *   where: {
     *     // ... filter to delete one Role
     *   }
     * })
     * 
    **/
    delete<T extends roleDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, roleDeleteArgs<ExtArgs>>
    ): Prisma__roleClient<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Role.
     * @param {roleUpdateArgs} args - Arguments to update one Role.
     * @example
     * // Update one Role
     * const role = await prisma.role.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends roleUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, roleUpdateArgs<ExtArgs>>
    ): Prisma__roleClient<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Roles.
     * @param {roleDeleteManyArgs} args - Arguments to filter Roles to delete.
     * @example
     * // Delete a few Roles
     * const { count } = await prisma.role.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends roleDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, roleDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends roleUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, roleUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Role.
     * @param {roleUpsertArgs} args - Arguments to update or create a Role.
     * @example
     * // Update or create a Role
     * const role = await prisma.role.upsert({
     *   create: {
     *     // ... data to create a Role
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Role we want to update
     *   }
     * })
    **/
    upsert<T extends roleUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, roleUpsertArgs<ExtArgs>>
    ): Prisma__roleClient<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roleCountArgs} args - Arguments to filter Roles to count.
     * @example
     * // Count the number of Roles
     * const count = await prisma.role.count({
     *   where: {
     *     // ... the filter for the Roles we want to count
     *   }
     * })
    **/
    count<T extends roleCountArgs>(
      args?: Subset<T, roleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RoleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RoleAggregateArgs>(args: Subset<T, RoleAggregateArgs>): Prisma.PrismaPromise<GetRoleAggregateType<T>>

    /**
     * Group by Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends roleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: roleGroupByArgs['orderBy'] }
        : { orderBy?: roleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, roleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRoleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the role model
   */
  readonly fields: roleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for role.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__roleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    createduser<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    updateduser<T extends role$updateduserArgs<ExtArgs> = {}>(args?: Subset<T, role$updateduserArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    rolepermissions<T extends role$rolepermissionsArgs<ExtArgs> = {}>(args?: Subset<T, role$rolepermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolepermissionPayload<ExtArgs>, T, 'findMany'> | Null>;

    userroles<T extends role$userrolesArgs<ExtArgs> = {}>(args?: Subset<T, role$userrolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userrolePayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the role model
   */ 
  interface roleFieldRefs {
    readonly id: FieldRef<"role", 'Int'>
    readonly name: FieldRef<"role", 'String'>
    readonly createdby: FieldRef<"role", 'Int'>
    readonly createdat: FieldRef<"role", 'DateTime'>
    readonly updatedby: FieldRef<"role", 'Int'>
    readonly updatedat: FieldRef<"role", 'DateTime'>
    readonly issystemrole: FieldRef<"role", 'Boolean'>
  }
    

  // Custom InputTypes

  /**
   * role findUnique
   */
  export type roleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: roleInclude<ExtArgs> | null
    /**
     * Filter, which role to fetch.
     */
    where: roleWhereUniqueInput
  }


  /**
   * role findUniqueOrThrow
   */
  export type roleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: roleInclude<ExtArgs> | null
    /**
     * Filter, which role to fetch.
     */
    where: roleWhereUniqueInput
  }


  /**
   * role findFirst
   */
  export type roleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: roleInclude<ExtArgs> | null
    /**
     * Filter, which role to fetch.
     */
    where?: roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: roleOrderByWithRelationInput | roleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for roles.
     */
    cursor?: roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }


  /**
   * role findFirstOrThrow
   */
  export type roleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: roleInclude<ExtArgs> | null
    /**
     * Filter, which role to fetch.
     */
    where?: roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: roleOrderByWithRelationInput | roleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for roles.
     */
    cursor?: roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }


  /**
   * role findMany
   */
  export type roleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: roleInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where?: roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: roleOrderByWithRelationInput | roleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing roles.
     */
    cursor?: roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }


  /**
   * role create
   */
  export type roleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: roleInclude<ExtArgs> | null
    /**
     * The data needed to create a role.
     */
    data: XOR<roleCreateInput, roleUncheckedCreateInput>
  }


  /**
   * role createMany
   */
  export type roleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many roles.
     */
    data: roleCreateManyInput | roleCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * role update
   */
  export type roleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: roleInclude<ExtArgs> | null
    /**
     * The data needed to update a role.
     */
    data: XOR<roleUpdateInput, roleUncheckedUpdateInput>
    /**
     * Choose, which role to update.
     */
    where: roleWhereUniqueInput
  }


  /**
   * role updateMany
   */
  export type roleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update roles.
     */
    data: XOR<roleUpdateManyMutationInput, roleUncheckedUpdateManyInput>
    /**
     * Filter which roles to update
     */
    where?: roleWhereInput
  }


  /**
   * role upsert
   */
  export type roleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: roleInclude<ExtArgs> | null
    /**
     * The filter to search for the role to update in case it exists.
     */
    where: roleWhereUniqueInput
    /**
     * In case the role found by the `where` argument doesn't exist, create a new role with this data.
     */
    create: XOR<roleCreateInput, roleUncheckedCreateInput>
    /**
     * In case the role was found with the provided `where` argument, update it with this data.
     */
    update: XOR<roleUpdateInput, roleUncheckedUpdateInput>
  }


  /**
   * role delete
   */
  export type roleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: roleInclude<ExtArgs> | null
    /**
     * Filter which role to delete.
     */
    where: roleWhereUniqueInput
  }


  /**
   * role deleteMany
   */
  export type roleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which roles to delete
     */
    where?: roleWhereInput
  }


  /**
   * role.updateduser
   */
  export type role$updateduserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
  }


  /**
   * role.rolepermissions
   */
  export type role$rolepermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: rolepermissionInclude<ExtArgs> | null
    where?: rolepermissionWhereInput
    orderBy?: rolepermissionOrderByWithRelationInput | rolepermissionOrderByWithRelationInput[]
    cursor?: rolepermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RolepermissionScalarFieldEnum | RolepermissionScalarFieldEnum[]
  }


  /**
   * role.userroles
   */
  export type role$userrolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userroleInclude<ExtArgs> | null
    where?: userroleWhereInput
    orderBy?: userroleOrderByWithRelationInput | userroleOrderByWithRelationInput[]
    cursor?: userroleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserroleScalarFieldEnum | UserroleScalarFieldEnum[]
  }


  /**
   * role without action
   */
  export type roleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: roleInclude<ExtArgs> | null
  }



  /**
   * Model notification
   */

  export type AggregateNotification = {
    _count: NotificationCountAggregateOutputType | null
    _avg: NotificationAvgAggregateOutputType | null
    _sum: NotificationSumAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  export type NotificationAvgAggregateOutputType = {
    id: number | null
    touserid: number | null
    createdby: number | null
  }

  export type NotificationSumAggregateOutputType = {
    id: number | null
    touserid: number | null
    createdby: number | null
  }

  export type NotificationMinAggregateOutputType = {
    id: number | null
    touserid: number | null
    message: string | null
    url: string | null
    createdby: number | null
    createdat: Date | null
    readedat: Date | null
  }

  export type NotificationMaxAggregateOutputType = {
    id: number | null
    touserid: number | null
    message: string | null
    url: string | null
    createdby: number | null
    createdat: Date | null
    readedat: Date | null
  }

  export type NotificationCountAggregateOutputType = {
    id: number
    touserid: number
    message: number
    url: number
    createdby: number
    createdat: number
    readedat: number
    _all: number
  }


  export type NotificationAvgAggregateInputType = {
    id?: true
    touserid?: true
    createdby?: true
  }

  export type NotificationSumAggregateInputType = {
    id?: true
    touserid?: true
    createdby?: true
  }

  export type NotificationMinAggregateInputType = {
    id?: true
    touserid?: true
    message?: true
    url?: true
    createdby?: true
    createdat?: true
    readedat?: true
  }

  export type NotificationMaxAggregateInputType = {
    id?: true
    touserid?: true
    message?: true
    url?: true
    createdby?: true
    createdat?: true
    readedat?: true
  }

  export type NotificationCountAggregateInputType = {
    id?: true
    touserid?: true
    message?: true
    url?: true
    createdby?: true
    createdat?: true
    readedat?: true
    _all?: true
  }

  export type NotificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notification to aggregate.
     */
    where?: notificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: notificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned notifications
    **/
    _count?: true | NotificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NotificationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NotificationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificationMaxAggregateInputType
  }

  export type GetNotificationAggregateType<T extends NotificationAggregateArgs> = {
        [P in keyof T & keyof AggregateNotification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotification[P]>
      : GetScalarType<T[P], AggregateNotification[P]>
  }




  export type notificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificationWhereInput
    orderBy?: notificationOrderByWithAggregationInput | notificationOrderByWithAggregationInput[]
    by: NotificationScalarFieldEnum[] | NotificationScalarFieldEnum
    having?: notificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificationCountAggregateInputType | true
    _avg?: NotificationAvgAggregateInputType
    _sum?: NotificationSumAggregateInputType
    _min?: NotificationMinAggregateInputType
    _max?: NotificationMaxAggregateInputType
  }

  export type NotificationGroupByOutputType = {
    id: number
    touserid: number
    message: string
    url: string
    createdby: number
    createdat: Date
    readedat: Date | null
    _count: NotificationCountAggregateOutputType | null
    _avg: NotificationAvgAggregateOutputType | null
    _sum: NotificationSumAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  type GetNotificationGroupByPayload<T extends notificationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificationGroupByOutputType[P]>
            : GetScalarType<T[P], NotificationGroupByOutputType[P]>
        }
      >
    >


  export type notificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    touserid?: boolean
    message?: boolean
    url?: boolean
    createdby?: boolean
    createdat?: boolean
    readedat?: boolean
    to?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type notificationSelectScalar = {
    id?: boolean
    touserid?: boolean
    message?: boolean
    url?: boolean
    createdby?: boolean
    createdat?: boolean
    readedat?: boolean
  }

  export type notificationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    to?: boolean | userDefaultArgs<ExtArgs>
  }


  export type $notificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "notification"
    objects: {
      to: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      touserid: number
      message: string
      url: string
      createdby: number
      createdat: Date
      readedat: Date | null
    }, ExtArgs["result"]["notification"]>
    composites: {}
  }


  type notificationGetPayload<S extends boolean | null | undefined | notificationDefaultArgs> = $Result.GetResult<Prisma.$notificationPayload, S>

  type notificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<notificationFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: NotificationCountAggregateInputType | true
    }

  export interface notificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['notification'], meta: { name: 'notification' } }
    /**
     * Find zero or one Notification that matches the filter.
     * @param {notificationFindUniqueArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends notificationFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, notificationFindUniqueArgs<ExtArgs>>
    ): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Notification that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {notificationFindUniqueOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends notificationFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, notificationFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Notification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationFindFirstArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends notificationFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, notificationFindFirstArgs<ExtArgs>>
    ): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Notification that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationFindFirstOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends notificationFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, notificationFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notifications
     * const notifications = await prisma.notification.findMany()
     * 
     * // Get first 10 Notifications
     * const notifications = await prisma.notification.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificationWithIdOnly = await prisma.notification.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends notificationFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, notificationFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Notification.
     * @param {notificationCreateArgs} args - Arguments to create a Notification.
     * @example
     * // Create one Notification
     * const Notification = await prisma.notification.create({
     *   data: {
     *     // ... data to create a Notification
     *   }
     * })
     * 
    **/
    create<T extends notificationCreateArgs<ExtArgs>>(
      args: SelectSubset<T, notificationCreateArgs<ExtArgs>>
    ): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Notifications.
     *     @param {notificationCreateManyArgs} args - Arguments to create many Notifications.
     *     @example
     *     // Create many Notifications
     *     const notification = await prisma.notification.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends notificationCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, notificationCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Notification.
     * @param {notificationDeleteArgs} args - Arguments to delete one Notification.
     * @example
     * // Delete one Notification
     * const Notification = await prisma.notification.delete({
     *   where: {
     *     // ... filter to delete one Notification
     *   }
     * })
     * 
    **/
    delete<T extends notificationDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, notificationDeleteArgs<ExtArgs>>
    ): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Notification.
     * @param {notificationUpdateArgs} args - Arguments to update one Notification.
     * @example
     * // Update one Notification
     * const notification = await prisma.notification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends notificationUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, notificationUpdateArgs<ExtArgs>>
    ): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Notifications.
     * @param {notificationDeleteManyArgs} args - Arguments to filter Notifications to delete.
     * @example
     * // Delete a few Notifications
     * const { count } = await prisma.notification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends notificationDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, notificationDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends notificationUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, notificationUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Notification.
     * @param {notificationUpsertArgs} args - Arguments to update or create a Notification.
     * @example
     * // Update or create a Notification
     * const notification = await prisma.notification.upsert({
     *   create: {
     *     // ... data to create a Notification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notification we want to update
     *   }
     * })
    **/
    upsert<T extends notificationUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, notificationUpsertArgs<ExtArgs>>
    ): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationCountArgs} args - Arguments to filter Notifications to count.
     * @example
     * // Count the number of Notifications
     * const count = await prisma.notification.count({
     *   where: {
     *     // ... the filter for the Notifications we want to count
     *   }
     * })
    **/
    count<T extends notificationCountArgs>(
      args?: Subset<T, notificationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificationAggregateArgs>(args: Subset<T, NotificationAggregateArgs>): Prisma.PrismaPromise<GetNotificationAggregateType<T>>

    /**
     * Group by Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends notificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: notificationGroupByArgs['orderBy'] }
        : { orderBy?: notificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, notificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the notification model
   */
  readonly fields: notificationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for notification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__notificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    to<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the notification model
   */ 
  interface notificationFieldRefs {
    readonly id: FieldRef<"notification", 'Int'>
    readonly touserid: FieldRef<"notification", 'Int'>
    readonly message: FieldRef<"notification", 'String'>
    readonly url: FieldRef<"notification", 'String'>
    readonly createdby: FieldRef<"notification", 'Int'>
    readonly createdat: FieldRef<"notification", 'DateTime'>
    readonly readedat: FieldRef<"notification", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * notification findUnique
   */
  export type notificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * Filter, which notification to fetch.
     */
    where: notificationWhereUniqueInput
  }


  /**
   * notification findUniqueOrThrow
   */
  export type notificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * Filter, which notification to fetch.
     */
    where: notificationWhereUniqueInput
  }


  /**
   * notification findFirst
   */
  export type notificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * Filter, which notification to fetch.
     */
    where?: notificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notifications.
     */
    cursor?: notificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }


  /**
   * notification findFirstOrThrow
   */
  export type notificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * Filter, which notification to fetch.
     */
    where?: notificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notifications.
     */
    cursor?: notificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }


  /**
   * notification findMany
   */
  export type notificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * Filter, which notifications to fetch.
     */
    where?: notificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing notifications.
     */
    cursor?: notificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }


  /**
   * notification create
   */
  export type notificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * The data needed to create a notification.
     */
    data: XOR<notificationCreateInput, notificationUncheckedCreateInput>
  }


  /**
   * notification createMany
   */
  export type notificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many notifications.
     */
    data: notificationCreateManyInput | notificationCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * notification update
   */
  export type notificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * The data needed to update a notification.
     */
    data: XOR<notificationUpdateInput, notificationUncheckedUpdateInput>
    /**
     * Choose, which notification to update.
     */
    where: notificationWhereUniqueInput
  }


  /**
   * notification updateMany
   */
  export type notificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update notifications.
     */
    data: XOR<notificationUpdateManyMutationInput, notificationUncheckedUpdateManyInput>
    /**
     * Filter which notifications to update
     */
    where?: notificationWhereInput
  }


  /**
   * notification upsert
   */
  export type notificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * The filter to search for the notification to update in case it exists.
     */
    where: notificationWhereUniqueInput
    /**
     * In case the notification found by the `where` argument doesn't exist, create a new notification with this data.
     */
    create: XOR<notificationCreateInput, notificationUncheckedCreateInput>
    /**
     * In case the notification was found with the provided `where` argument, update it with this data.
     */
    update: XOR<notificationUpdateInput, notificationUncheckedUpdateInput>
  }


  /**
   * notification delete
   */
  export type notificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * Filter which notification to delete.
     */
    where: notificationWhereUniqueInput
  }


  /**
   * notification deleteMany
   */
  export type notificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notifications to delete
     */
    where?: notificationWhereInput
  }


  /**
   * notification without action
   */
  export type notificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: notificationInclude<ExtArgs> | null
  }



  /**
   * Model permission
   */

  export type AggregatePermission = {
    _count: PermissionCountAggregateOutputType | null
    _avg: PermissionAvgAggregateOutputType | null
    _sum: PermissionSumAggregateOutputType | null
    _min: PermissionMinAggregateOutputType | null
    _max: PermissionMaxAggregateOutputType | null
  }

  export type PermissionAvgAggregateOutputType = {
    id: number | null
    createdby: number | null
    updatedby: number | null
  }

  export type PermissionSumAggregateOutputType = {
    id: number | null
    createdby: number | null
    updatedby: number | null
  }

  export type PermissionMinAggregateOutputType = {
    id: number | null
    name: string | null
    value: string | null
    group: string | null
    description: string | null
    createdby: number | null
    createdat: Date | null
    updatedby: number | null
    updatedat: Date | null
  }

  export type PermissionMaxAggregateOutputType = {
    id: number | null
    name: string | null
    value: string | null
    group: string | null
    description: string | null
    createdby: number | null
    createdat: Date | null
    updatedby: number | null
    updatedat: Date | null
  }

  export type PermissionCountAggregateOutputType = {
    id: number
    name: number
    value: number
    group: number
    description: number
    createdby: number
    createdat: number
    updatedby: number
    updatedat: number
    _all: number
  }


  export type PermissionAvgAggregateInputType = {
    id?: true
    createdby?: true
    updatedby?: true
  }

  export type PermissionSumAggregateInputType = {
    id?: true
    createdby?: true
    updatedby?: true
  }

  export type PermissionMinAggregateInputType = {
    id?: true
    name?: true
    value?: true
    group?: true
    description?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
  }

  export type PermissionMaxAggregateInputType = {
    id?: true
    name?: true
    value?: true
    group?: true
    description?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
  }

  export type PermissionCountAggregateInputType = {
    id?: true
    name?: true
    value?: true
    group?: true
    description?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
    _all?: true
  }

  export type PermissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which permission to aggregate.
     */
    where?: permissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permissions to fetch.
     */
    orderBy?: permissionOrderByWithRelationInput | permissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: permissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned permissions
    **/
    _count?: true | PermissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PermissionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PermissionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PermissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PermissionMaxAggregateInputType
  }

  export type GetPermissionAggregateType<T extends PermissionAggregateArgs> = {
        [P in keyof T & keyof AggregatePermission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePermission[P]>
      : GetScalarType<T[P], AggregatePermission[P]>
  }




  export type permissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: permissionWhereInput
    orderBy?: permissionOrderByWithAggregationInput | permissionOrderByWithAggregationInput[]
    by: PermissionScalarFieldEnum[] | PermissionScalarFieldEnum
    having?: permissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PermissionCountAggregateInputType | true
    _avg?: PermissionAvgAggregateInputType
    _sum?: PermissionSumAggregateInputType
    _min?: PermissionMinAggregateInputType
    _max?: PermissionMaxAggregateInputType
  }

  export type PermissionGroupByOutputType = {
    id: number
    name: string
    value: string
    group: string
    description: string
    createdby: number
    createdat: Date
    updatedby: number | null
    updatedat: Date | null
    _count: PermissionCountAggregateOutputType | null
    _avg: PermissionAvgAggregateOutputType | null
    _sum: PermissionSumAggregateOutputType | null
    _min: PermissionMinAggregateOutputType | null
    _max: PermissionMaxAggregateOutputType | null
  }

  type GetPermissionGroupByPayload<T extends permissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PermissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PermissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PermissionGroupByOutputType[P]>
            : GetScalarType<T[P], PermissionGroupByOutputType[P]>
        }
      >
    >


  export type permissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    value?: boolean
    group?: boolean
    description?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
    createduser?: boolean | userDefaultArgs<ExtArgs>
    updateduser?: boolean | permission$updateduserArgs<ExtArgs>
    rolepermissions?: boolean | permission$rolepermissionsArgs<ExtArgs>
    userpermissions?: boolean | permission$userpermissionsArgs<ExtArgs>
    _count?: boolean | PermissionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["permission"]>

  export type permissionSelectScalar = {
    id?: boolean
    name?: boolean
    value?: boolean
    group?: boolean
    description?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
  }

  export type permissionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createduser?: boolean | userDefaultArgs<ExtArgs>
    updateduser?: boolean | permission$updateduserArgs<ExtArgs>
    rolepermissions?: boolean | permission$rolepermissionsArgs<ExtArgs>
    userpermissions?: boolean | permission$userpermissionsArgs<ExtArgs>
    _count?: boolean | PermissionCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $permissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "permission"
    objects: {
      createduser: Prisma.$userPayload<ExtArgs>
      updateduser: Prisma.$userPayload<ExtArgs> | null
      rolepermissions: Prisma.$rolepermissionPayload<ExtArgs>[]
      userpermissions: Prisma.$userpermissionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      value: string
      group: string
      description: string
      createdby: number
      createdat: Date
      updatedby: number | null
      updatedat: Date | null
    }, ExtArgs["result"]["permission"]>
    composites: {}
  }


  type permissionGetPayload<S extends boolean | null | undefined | permissionDefaultArgs> = $Result.GetResult<Prisma.$permissionPayload, S>

  type permissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<permissionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PermissionCountAggregateInputType | true
    }

  export interface permissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['permission'], meta: { name: 'permission' } }
    /**
     * Find zero or one Permission that matches the filter.
     * @param {permissionFindUniqueArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends permissionFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, permissionFindUniqueArgs<ExtArgs>>
    ): Prisma__permissionClient<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Permission that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {permissionFindUniqueOrThrowArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends permissionFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, permissionFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__permissionClient<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Permission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionFindFirstArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends permissionFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, permissionFindFirstArgs<ExtArgs>>
    ): Prisma__permissionClient<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Permission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionFindFirstOrThrowArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends permissionFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, permissionFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__permissionClient<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Permissions
     * const permissions = await prisma.permission.findMany()
     * 
     * // Get first 10 Permissions
     * const permissions = await prisma.permission.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const permissionWithIdOnly = await prisma.permission.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends permissionFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, permissionFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Permission.
     * @param {permissionCreateArgs} args - Arguments to create a Permission.
     * @example
     * // Create one Permission
     * const Permission = await prisma.permission.create({
     *   data: {
     *     // ... data to create a Permission
     *   }
     * })
     * 
    **/
    create<T extends permissionCreateArgs<ExtArgs>>(
      args: SelectSubset<T, permissionCreateArgs<ExtArgs>>
    ): Prisma__permissionClient<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Permissions.
     *     @param {permissionCreateManyArgs} args - Arguments to create many Permissions.
     *     @example
     *     // Create many Permissions
     *     const permission = await prisma.permission.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends permissionCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, permissionCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Permission.
     * @param {permissionDeleteArgs} args - Arguments to delete one Permission.
     * @example
     * // Delete one Permission
     * const Permission = await prisma.permission.delete({
     *   where: {
     *     // ... filter to delete one Permission
     *   }
     * })
     * 
    **/
    delete<T extends permissionDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, permissionDeleteArgs<ExtArgs>>
    ): Prisma__permissionClient<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Permission.
     * @param {permissionUpdateArgs} args - Arguments to update one Permission.
     * @example
     * // Update one Permission
     * const permission = await prisma.permission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends permissionUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, permissionUpdateArgs<ExtArgs>>
    ): Prisma__permissionClient<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Permissions.
     * @param {permissionDeleteManyArgs} args - Arguments to filter Permissions to delete.
     * @example
     * // Delete a few Permissions
     * const { count } = await prisma.permission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends permissionDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, permissionDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Permissions
     * const permission = await prisma.permission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends permissionUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, permissionUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Permission.
     * @param {permissionUpsertArgs} args - Arguments to update or create a Permission.
     * @example
     * // Update or create a Permission
     * const permission = await prisma.permission.upsert({
     *   create: {
     *     // ... data to create a Permission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Permission we want to update
     *   }
     * })
    **/
    upsert<T extends permissionUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, permissionUpsertArgs<ExtArgs>>
    ): Prisma__permissionClient<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionCountArgs} args - Arguments to filter Permissions to count.
     * @example
     * // Count the number of Permissions
     * const count = await prisma.permission.count({
     *   where: {
     *     // ... the filter for the Permissions we want to count
     *   }
     * })
    **/
    count<T extends permissionCountArgs>(
      args?: Subset<T, permissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PermissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Permission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PermissionAggregateArgs>(args: Subset<T, PermissionAggregateArgs>): Prisma.PrismaPromise<GetPermissionAggregateType<T>>

    /**
     * Group by Permission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends permissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: permissionGroupByArgs['orderBy'] }
        : { orderBy?: permissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, permissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPermissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the permission model
   */
  readonly fields: permissionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for permission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__permissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    createduser<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    updateduser<T extends permission$updateduserArgs<ExtArgs> = {}>(args?: Subset<T, permission$updateduserArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    rolepermissions<T extends permission$rolepermissionsArgs<ExtArgs> = {}>(args?: Subset<T, permission$rolepermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolepermissionPayload<ExtArgs>, T, 'findMany'> | Null>;

    userpermissions<T extends permission$userpermissionsArgs<ExtArgs> = {}>(args?: Subset<T, permission$userpermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userpermissionPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the permission model
   */ 
  interface permissionFieldRefs {
    readonly id: FieldRef<"permission", 'Int'>
    readonly name: FieldRef<"permission", 'String'>
    readonly value: FieldRef<"permission", 'String'>
    readonly group: FieldRef<"permission", 'String'>
    readonly description: FieldRef<"permission", 'String'>
    readonly createdby: FieldRef<"permission", 'Int'>
    readonly createdat: FieldRef<"permission", 'DateTime'>
    readonly updatedby: FieldRef<"permission", 'Int'>
    readonly updatedat: FieldRef<"permission", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * permission findUnique
   */
  export type permissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: permissionInclude<ExtArgs> | null
    /**
     * Filter, which permission to fetch.
     */
    where: permissionWhereUniqueInput
  }


  /**
   * permission findUniqueOrThrow
   */
  export type permissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: permissionInclude<ExtArgs> | null
    /**
     * Filter, which permission to fetch.
     */
    where: permissionWhereUniqueInput
  }


  /**
   * permission findFirst
   */
  export type permissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: permissionInclude<ExtArgs> | null
    /**
     * Filter, which permission to fetch.
     */
    where?: permissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permissions to fetch.
     */
    orderBy?: permissionOrderByWithRelationInput | permissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for permissions.
     */
    cursor?: permissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of permissions.
     */
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }


  /**
   * permission findFirstOrThrow
   */
  export type permissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: permissionInclude<ExtArgs> | null
    /**
     * Filter, which permission to fetch.
     */
    where?: permissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permissions to fetch.
     */
    orderBy?: permissionOrderByWithRelationInput | permissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for permissions.
     */
    cursor?: permissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of permissions.
     */
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }


  /**
   * permission findMany
   */
  export type permissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: permissionInclude<ExtArgs> | null
    /**
     * Filter, which permissions to fetch.
     */
    where?: permissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permissions to fetch.
     */
    orderBy?: permissionOrderByWithRelationInput | permissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing permissions.
     */
    cursor?: permissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permissions.
     */
    skip?: number
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }


  /**
   * permission create
   */
  export type permissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: permissionInclude<ExtArgs> | null
    /**
     * The data needed to create a permission.
     */
    data: XOR<permissionCreateInput, permissionUncheckedCreateInput>
  }


  /**
   * permission createMany
   */
  export type permissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many permissions.
     */
    data: permissionCreateManyInput | permissionCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * permission update
   */
  export type permissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: permissionInclude<ExtArgs> | null
    /**
     * The data needed to update a permission.
     */
    data: XOR<permissionUpdateInput, permissionUncheckedUpdateInput>
    /**
     * Choose, which permission to update.
     */
    where: permissionWhereUniqueInput
  }


  /**
   * permission updateMany
   */
  export type permissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update permissions.
     */
    data: XOR<permissionUpdateManyMutationInput, permissionUncheckedUpdateManyInput>
    /**
     * Filter which permissions to update
     */
    where?: permissionWhereInput
  }


  /**
   * permission upsert
   */
  export type permissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: permissionInclude<ExtArgs> | null
    /**
     * The filter to search for the permission to update in case it exists.
     */
    where: permissionWhereUniqueInput
    /**
     * In case the permission found by the `where` argument doesn't exist, create a new permission with this data.
     */
    create: XOR<permissionCreateInput, permissionUncheckedCreateInput>
    /**
     * In case the permission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<permissionUpdateInput, permissionUncheckedUpdateInput>
  }


  /**
   * permission delete
   */
  export type permissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: permissionInclude<ExtArgs> | null
    /**
     * Filter which permission to delete.
     */
    where: permissionWhereUniqueInput
  }


  /**
   * permission deleteMany
   */
  export type permissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which permissions to delete
     */
    where?: permissionWhereInput
  }


  /**
   * permission.updateduser
   */
  export type permission$updateduserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
  }


  /**
   * permission.rolepermissions
   */
  export type permission$rolepermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: rolepermissionInclude<ExtArgs> | null
    where?: rolepermissionWhereInput
    orderBy?: rolepermissionOrderByWithRelationInput | rolepermissionOrderByWithRelationInput[]
    cursor?: rolepermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RolepermissionScalarFieldEnum | RolepermissionScalarFieldEnum[]
  }


  /**
   * permission.userpermissions
   */
  export type permission$userpermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userpermissionInclude<ExtArgs> | null
    where?: userpermissionWhereInput
    orderBy?: userpermissionOrderByWithRelationInput | userpermissionOrderByWithRelationInput[]
    cursor?: userpermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserpermissionScalarFieldEnum | UserpermissionScalarFieldEnum[]
  }


  /**
   * permission without action
   */
  export type permissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: permissionInclude<ExtArgs> | null
  }



  /**
   * Model rolepermission
   */

  export type AggregateRolepermission = {
    _count: RolepermissionCountAggregateOutputType | null
    _avg: RolepermissionAvgAggregateOutputType | null
    _sum: RolepermissionSumAggregateOutputType | null
    _min: RolepermissionMinAggregateOutputType | null
    _max: RolepermissionMaxAggregateOutputType | null
  }

  export type RolepermissionAvgAggregateOutputType = {
    id: number | null
    roleid: number | null
    permissionid: number | null
    createdby: number | null
    updatedby: number | null
  }

  export type RolepermissionSumAggregateOutputType = {
    id: number | null
    roleid: number | null
    permissionid: number | null
    createdby: number | null
    updatedby: number | null
  }

  export type RolepermissionMinAggregateOutputType = {
    id: number | null
    roleid: number | null
    permissionid: number | null
    createdat: Date | null
    createdby: number | null
    updatedby: number | null
    updatedat: Date | null
  }

  export type RolepermissionMaxAggregateOutputType = {
    id: number | null
    roleid: number | null
    permissionid: number | null
    createdat: Date | null
    createdby: number | null
    updatedby: number | null
    updatedat: Date | null
  }

  export type RolepermissionCountAggregateOutputType = {
    id: number
    roleid: number
    permissionid: number
    createdat: number
    createdby: number
    updatedby: number
    updatedat: number
    _all: number
  }


  export type RolepermissionAvgAggregateInputType = {
    id?: true
    roleid?: true
    permissionid?: true
    createdby?: true
    updatedby?: true
  }

  export type RolepermissionSumAggregateInputType = {
    id?: true
    roleid?: true
    permissionid?: true
    createdby?: true
    updatedby?: true
  }

  export type RolepermissionMinAggregateInputType = {
    id?: true
    roleid?: true
    permissionid?: true
    createdat?: true
    createdby?: true
    updatedby?: true
    updatedat?: true
  }

  export type RolepermissionMaxAggregateInputType = {
    id?: true
    roleid?: true
    permissionid?: true
    createdat?: true
    createdby?: true
    updatedby?: true
    updatedat?: true
  }

  export type RolepermissionCountAggregateInputType = {
    id?: true
    roleid?: true
    permissionid?: true
    createdat?: true
    createdby?: true
    updatedby?: true
    updatedat?: true
    _all?: true
  }

  export type RolepermissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which rolepermission to aggregate.
     */
    where?: rolepermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of rolepermissions to fetch.
     */
    orderBy?: rolepermissionOrderByWithRelationInput | rolepermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: rolepermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` rolepermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` rolepermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned rolepermissions
    **/
    _count?: true | RolepermissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RolepermissionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RolepermissionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RolepermissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RolepermissionMaxAggregateInputType
  }

  export type GetRolepermissionAggregateType<T extends RolepermissionAggregateArgs> = {
        [P in keyof T & keyof AggregateRolepermission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRolepermission[P]>
      : GetScalarType<T[P], AggregateRolepermission[P]>
  }




  export type rolepermissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: rolepermissionWhereInput
    orderBy?: rolepermissionOrderByWithAggregationInput | rolepermissionOrderByWithAggregationInput[]
    by: RolepermissionScalarFieldEnum[] | RolepermissionScalarFieldEnum
    having?: rolepermissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RolepermissionCountAggregateInputType | true
    _avg?: RolepermissionAvgAggregateInputType
    _sum?: RolepermissionSumAggregateInputType
    _min?: RolepermissionMinAggregateInputType
    _max?: RolepermissionMaxAggregateInputType
  }

  export type RolepermissionGroupByOutputType = {
    id: number
    roleid: number
    permissionid: number
    createdat: Date
    createdby: number
    updatedby: number | null
    updatedat: Date | null
    _count: RolepermissionCountAggregateOutputType | null
    _avg: RolepermissionAvgAggregateOutputType | null
    _sum: RolepermissionSumAggregateOutputType | null
    _min: RolepermissionMinAggregateOutputType | null
    _max: RolepermissionMaxAggregateOutputType | null
  }

  type GetRolepermissionGroupByPayload<T extends rolepermissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RolepermissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RolepermissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RolepermissionGroupByOutputType[P]>
            : GetScalarType<T[P], RolepermissionGroupByOutputType[P]>
        }
      >
    >


  export type rolepermissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    roleid?: boolean
    permissionid?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedby?: boolean
    updatedat?: boolean
    createduser?: boolean | userDefaultArgs<ExtArgs>
    permission?: boolean | permissionDefaultArgs<ExtArgs>
    role?: boolean | roleDefaultArgs<ExtArgs>
    updateduser?: boolean | rolepermission$updateduserArgs<ExtArgs>
  }, ExtArgs["result"]["rolepermission"]>

  export type rolepermissionSelectScalar = {
    id?: boolean
    roleid?: boolean
    permissionid?: boolean
    createdat?: boolean
    createdby?: boolean
    updatedby?: boolean
    updatedat?: boolean
  }

  export type rolepermissionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createduser?: boolean | userDefaultArgs<ExtArgs>
    permission?: boolean | permissionDefaultArgs<ExtArgs>
    role?: boolean | roleDefaultArgs<ExtArgs>
    updateduser?: boolean | rolepermission$updateduserArgs<ExtArgs>
  }


  export type $rolepermissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "rolepermission"
    objects: {
      createduser: Prisma.$userPayload<ExtArgs>
      permission: Prisma.$permissionPayload<ExtArgs>
      role: Prisma.$rolePayload<ExtArgs>
      updateduser: Prisma.$userPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      roleid: number
      permissionid: number
      createdat: Date
      createdby: number
      updatedby: number | null
      updatedat: Date | null
    }, ExtArgs["result"]["rolepermission"]>
    composites: {}
  }


  type rolepermissionGetPayload<S extends boolean | null | undefined | rolepermissionDefaultArgs> = $Result.GetResult<Prisma.$rolepermissionPayload, S>

  type rolepermissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<rolepermissionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: RolepermissionCountAggregateInputType | true
    }

  export interface rolepermissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['rolepermission'], meta: { name: 'rolepermission' } }
    /**
     * Find zero or one Rolepermission that matches the filter.
     * @param {rolepermissionFindUniqueArgs} args - Arguments to find a Rolepermission
     * @example
     * // Get one Rolepermission
     * const rolepermission = await prisma.rolepermission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends rolepermissionFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, rolepermissionFindUniqueArgs<ExtArgs>>
    ): Prisma__rolepermissionClient<$Result.GetResult<Prisma.$rolepermissionPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Rolepermission that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {rolepermissionFindUniqueOrThrowArgs} args - Arguments to find a Rolepermission
     * @example
     * // Get one Rolepermission
     * const rolepermission = await prisma.rolepermission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends rolepermissionFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, rolepermissionFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__rolepermissionClient<$Result.GetResult<Prisma.$rolepermissionPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Rolepermission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolepermissionFindFirstArgs} args - Arguments to find a Rolepermission
     * @example
     * // Get one Rolepermission
     * const rolepermission = await prisma.rolepermission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends rolepermissionFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, rolepermissionFindFirstArgs<ExtArgs>>
    ): Prisma__rolepermissionClient<$Result.GetResult<Prisma.$rolepermissionPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Rolepermission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolepermissionFindFirstOrThrowArgs} args - Arguments to find a Rolepermission
     * @example
     * // Get one Rolepermission
     * const rolepermission = await prisma.rolepermission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends rolepermissionFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, rolepermissionFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__rolepermissionClient<$Result.GetResult<Prisma.$rolepermissionPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Rolepermissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolepermissionFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Rolepermissions
     * const rolepermissions = await prisma.rolepermission.findMany()
     * 
     * // Get first 10 Rolepermissions
     * const rolepermissions = await prisma.rolepermission.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rolepermissionWithIdOnly = await prisma.rolepermission.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends rolepermissionFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, rolepermissionFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolepermissionPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Rolepermission.
     * @param {rolepermissionCreateArgs} args - Arguments to create a Rolepermission.
     * @example
     * // Create one Rolepermission
     * const Rolepermission = await prisma.rolepermission.create({
     *   data: {
     *     // ... data to create a Rolepermission
     *   }
     * })
     * 
    **/
    create<T extends rolepermissionCreateArgs<ExtArgs>>(
      args: SelectSubset<T, rolepermissionCreateArgs<ExtArgs>>
    ): Prisma__rolepermissionClient<$Result.GetResult<Prisma.$rolepermissionPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Rolepermissions.
     *     @param {rolepermissionCreateManyArgs} args - Arguments to create many Rolepermissions.
     *     @example
     *     // Create many Rolepermissions
     *     const rolepermission = await prisma.rolepermission.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends rolepermissionCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, rolepermissionCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Rolepermission.
     * @param {rolepermissionDeleteArgs} args - Arguments to delete one Rolepermission.
     * @example
     * // Delete one Rolepermission
     * const Rolepermission = await prisma.rolepermission.delete({
     *   where: {
     *     // ... filter to delete one Rolepermission
     *   }
     * })
     * 
    **/
    delete<T extends rolepermissionDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, rolepermissionDeleteArgs<ExtArgs>>
    ): Prisma__rolepermissionClient<$Result.GetResult<Prisma.$rolepermissionPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Rolepermission.
     * @param {rolepermissionUpdateArgs} args - Arguments to update one Rolepermission.
     * @example
     * // Update one Rolepermission
     * const rolepermission = await prisma.rolepermission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends rolepermissionUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, rolepermissionUpdateArgs<ExtArgs>>
    ): Prisma__rolepermissionClient<$Result.GetResult<Prisma.$rolepermissionPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Rolepermissions.
     * @param {rolepermissionDeleteManyArgs} args - Arguments to filter Rolepermissions to delete.
     * @example
     * // Delete a few Rolepermissions
     * const { count } = await prisma.rolepermission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends rolepermissionDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, rolepermissionDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Rolepermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolepermissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Rolepermissions
     * const rolepermission = await prisma.rolepermission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends rolepermissionUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, rolepermissionUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Rolepermission.
     * @param {rolepermissionUpsertArgs} args - Arguments to update or create a Rolepermission.
     * @example
     * // Update or create a Rolepermission
     * const rolepermission = await prisma.rolepermission.upsert({
     *   create: {
     *     // ... data to create a Rolepermission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Rolepermission we want to update
     *   }
     * })
    **/
    upsert<T extends rolepermissionUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, rolepermissionUpsertArgs<ExtArgs>>
    ): Prisma__rolepermissionClient<$Result.GetResult<Prisma.$rolepermissionPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Rolepermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolepermissionCountArgs} args - Arguments to filter Rolepermissions to count.
     * @example
     * // Count the number of Rolepermissions
     * const count = await prisma.rolepermission.count({
     *   where: {
     *     // ... the filter for the Rolepermissions we want to count
     *   }
     * })
    **/
    count<T extends rolepermissionCountArgs>(
      args?: Subset<T, rolepermissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RolepermissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Rolepermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolepermissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RolepermissionAggregateArgs>(args: Subset<T, RolepermissionAggregateArgs>): Prisma.PrismaPromise<GetRolepermissionAggregateType<T>>

    /**
     * Group by Rolepermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolepermissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends rolepermissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: rolepermissionGroupByArgs['orderBy'] }
        : { orderBy?: rolepermissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, rolepermissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRolepermissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the rolepermission model
   */
  readonly fields: rolepermissionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for rolepermission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__rolepermissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    createduser<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    permission<T extends permissionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, permissionDefaultArgs<ExtArgs>>): Prisma__permissionClient<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    role<T extends roleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, roleDefaultArgs<ExtArgs>>): Prisma__roleClient<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    updateduser<T extends rolepermission$updateduserArgs<ExtArgs> = {}>(args?: Subset<T, rolepermission$updateduserArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the rolepermission model
   */ 
  interface rolepermissionFieldRefs {
    readonly id: FieldRef<"rolepermission", 'Int'>
    readonly roleid: FieldRef<"rolepermission", 'Int'>
    readonly permissionid: FieldRef<"rolepermission", 'Int'>
    readonly createdat: FieldRef<"rolepermission", 'DateTime'>
    readonly createdby: FieldRef<"rolepermission", 'Int'>
    readonly updatedby: FieldRef<"rolepermission", 'Int'>
    readonly updatedat: FieldRef<"rolepermission", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * rolepermission findUnique
   */
  export type rolepermissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: rolepermissionInclude<ExtArgs> | null
    /**
     * Filter, which rolepermission to fetch.
     */
    where: rolepermissionWhereUniqueInput
  }


  /**
   * rolepermission findUniqueOrThrow
   */
  export type rolepermissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: rolepermissionInclude<ExtArgs> | null
    /**
     * Filter, which rolepermission to fetch.
     */
    where: rolepermissionWhereUniqueInput
  }


  /**
   * rolepermission findFirst
   */
  export type rolepermissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: rolepermissionInclude<ExtArgs> | null
    /**
     * Filter, which rolepermission to fetch.
     */
    where?: rolepermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of rolepermissions to fetch.
     */
    orderBy?: rolepermissionOrderByWithRelationInput | rolepermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for rolepermissions.
     */
    cursor?: rolepermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` rolepermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` rolepermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of rolepermissions.
     */
    distinct?: RolepermissionScalarFieldEnum | RolepermissionScalarFieldEnum[]
  }


  /**
   * rolepermission findFirstOrThrow
   */
  export type rolepermissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: rolepermissionInclude<ExtArgs> | null
    /**
     * Filter, which rolepermission to fetch.
     */
    where?: rolepermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of rolepermissions to fetch.
     */
    orderBy?: rolepermissionOrderByWithRelationInput | rolepermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for rolepermissions.
     */
    cursor?: rolepermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` rolepermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` rolepermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of rolepermissions.
     */
    distinct?: RolepermissionScalarFieldEnum | RolepermissionScalarFieldEnum[]
  }


  /**
   * rolepermission findMany
   */
  export type rolepermissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: rolepermissionInclude<ExtArgs> | null
    /**
     * Filter, which rolepermissions to fetch.
     */
    where?: rolepermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of rolepermissions to fetch.
     */
    orderBy?: rolepermissionOrderByWithRelationInput | rolepermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing rolepermissions.
     */
    cursor?: rolepermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` rolepermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` rolepermissions.
     */
    skip?: number
    distinct?: RolepermissionScalarFieldEnum | RolepermissionScalarFieldEnum[]
  }


  /**
   * rolepermission create
   */
  export type rolepermissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: rolepermissionInclude<ExtArgs> | null
    /**
     * The data needed to create a rolepermission.
     */
    data: XOR<rolepermissionCreateInput, rolepermissionUncheckedCreateInput>
  }


  /**
   * rolepermission createMany
   */
  export type rolepermissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many rolepermissions.
     */
    data: rolepermissionCreateManyInput | rolepermissionCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * rolepermission update
   */
  export type rolepermissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: rolepermissionInclude<ExtArgs> | null
    /**
     * The data needed to update a rolepermission.
     */
    data: XOR<rolepermissionUpdateInput, rolepermissionUncheckedUpdateInput>
    /**
     * Choose, which rolepermission to update.
     */
    where: rolepermissionWhereUniqueInput
  }


  /**
   * rolepermission updateMany
   */
  export type rolepermissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update rolepermissions.
     */
    data: XOR<rolepermissionUpdateManyMutationInput, rolepermissionUncheckedUpdateManyInput>
    /**
     * Filter which rolepermissions to update
     */
    where?: rolepermissionWhereInput
  }


  /**
   * rolepermission upsert
   */
  export type rolepermissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: rolepermissionInclude<ExtArgs> | null
    /**
     * The filter to search for the rolepermission to update in case it exists.
     */
    where: rolepermissionWhereUniqueInput
    /**
     * In case the rolepermission found by the `where` argument doesn't exist, create a new rolepermission with this data.
     */
    create: XOR<rolepermissionCreateInput, rolepermissionUncheckedCreateInput>
    /**
     * In case the rolepermission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<rolepermissionUpdateInput, rolepermissionUncheckedUpdateInput>
  }


  /**
   * rolepermission delete
   */
  export type rolepermissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: rolepermissionInclude<ExtArgs> | null
    /**
     * Filter which rolepermission to delete.
     */
    where: rolepermissionWhereUniqueInput
  }


  /**
   * rolepermission deleteMany
   */
  export type rolepermissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which rolepermissions to delete
     */
    where?: rolepermissionWhereInput
  }


  /**
   * rolepermission.updateduser
   */
  export type rolepermission$updateduserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
  }


  /**
   * rolepermission without action
   */
  export type rolepermissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: rolepermissionInclude<ExtArgs> | null
  }



  /**
   * Model user
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
    createdby: number | null
    updatedby: number | null
    status: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
    createdby: number | null
    updatedby: number | null
    status: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    firstname: string | null
    lastname: string | null
    phone: string | null
    email: string | null
    password: string | null
    createdby: number | null
    createdat: Date | null
    updatedby: number | null
    updatedat: Date | null
    status: number | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    firstname: string | null
    lastname: string | null
    phone: string | null
    email: string | null
    password: string | null
    createdby: number | null
    createdat: Date | null
    updatedby: number | null
    updatedat: Date | null
    status: number | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    firstname: number
    lastname: number
    phone: number
    email: number
    password: number
    createdby: number
    createdat: number
    updatedby: number
    updatedat: number
    status: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
    createdby?: true
    updatedby?: true
    status?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
    createdby?: true
    updatedby?: true
    status?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    firstname?: true
    lastname?: true
    phone?: true
    email?: true
    password?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
    status?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    firstname?: true
    lastname?: true
    phone?: true
    email?: true
    password?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
    status?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    firstname?: true
    lastname?: true
    phone?: true
    email?: true
    password?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
    status?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user to aggregate.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type userGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userWhereInput
    orderBy?: userOrderByWithAggregationInput | userOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: userScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    firstname: string
    lastname: string
    phone: string | null
    email: string
    password: string
    createdby: number
    createdat: Date
    updatedby: number | null
    updatedat: Date | null
    status: number
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends userGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type userSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firstname?: boolean
    lastname?: boolean
    phone?: boolean
    email?: boolean
    password?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
    status?: boolean
    notificationuser?: boolean | user$notificationuserArgs<ExtArgs>
    createdapiclients?: boolean | user$createdapiclientsArgs<ExtArgs>
    updatedapiclients?: boolean | user$updatedapiclientsArgs<ExtArgs>
    createdpermissions?: boolean | user$createdpermissionsArgs<ExtArgs>
    updatedpermissions?: boolean | user$updatedpermissionsArgs<ExtArgs>
    refreshtokens?: boolean | user$refreshtokensArgs<ExtArgs>
    createdroles?: boolean | user$createdrolesArgs<ExtArgs>
    updatedroles?: boolean | user$updatedrolesArgs<ExtArgs>
    createdrolepermissions?: boolean | user$createdrolepermissionsArgs<ExtArgs>
    updatedrolepermissions?: boolean | user$updatedrolepermissionsArgs<ExtArgs>
    createduser?: boolean | userDefaultArgs<ExtArgs>
    createdusers?: boolean | user$createdusersArgs<ExtArgs>
    updateduser?: boolean | user$updateduserArgs<ExtArgs>
    updatedusers?: boolean | user$updatedusersArgs<ExtArgs>
    createduserpermissions?: boolean | user$createduserpermissionsArgs<ExtArgs>
    updateduserpermissions?: boolean | user$updateduserpermissionsArgs<ExtArgs>
    userpermissions?: boolean | user$userpermissionsArgs<ExtArgs>
    createduserroles?: boolean | user$createduserrolesArgs<ExtArgs>
    updateduserroles?: boolean | user$updateduserrolesArgs<ExtArgs>
    userroles?: boolean | user$userrolesArgs<ExtArgs>
    useroffers?: boolean | user$useroffersArgs<ExtArgs>
    usercontacts?: boolean | user$usercontactsArgs<ExtArgs>
    userpages?: boolean | user$userpagesArgs<ExtArgs>
    userservicecategory?: boolean | user$userservicecategoryArgs<ExtArgs>
    userservice?: boolean | user$userserviceArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type userSelectScalar = {
    id?: boolean
    firstname?: boolean
    lastname?: boolean
    phone?: boolean
    email?: boolean
    password?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
    status?: boolean
  }

  export type userInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    notificationuser?: boolean | user$notificationuserArgs<ExtArgs>
    createdapiclients?: boolean | user$createdapiclientsArgs<ExtArgs>
    updatedapiclients?: boolean | user$updatedapiclientsArgs<ExtArgs>
    createdpermissions?: boolean | user$createdpermissionsArgs<ExtArgs>
    updatedpermissions?: boolean | user$updatedpermissionsArgs<ExtArgs>
    refreshtokens?: boolean | user$refreshtokensArgs<ExtArgs>
    createdroles?: boolean | user$createdrolesArgs<ExtArgs>
    updatedroles?: boolean | user$updatedrolesArgs<ExtArgs>
    createdrolepermissions?: boolean | user$createdrolepermissionsArgs<ExtArgs>
    updatedrolepermissions?: boolean | user$updatedrolepermissionsArgs<ExtArgs>
    createduser?: boolean | userDefaultArgs<ExtArgs>
    createdusers?: boolean | user$createdusersArgs<ExtArgs>
    updateduser?: boolean | user$updateduserArgs<ExtArgs>
    updatedusers?: boolean | user$updatedusersArgs<ExtArgs>
    createduserpermissions?: boolean | user$createduserpermissionsArgs<ExtArgs>
    updateduserpermissions?: boolean | user$updateduserpermissionsArgs<ExtArgs>
    userpermissions?: boolean | user$userpermissionsArgs<ExtArgs>
    createduserroles?: boolean | user$createduserrolesArgs<ExtArgs>
    updateduserroles?: boolean | user$updateduserrolesArgs<ExtArgs>
    userroles?: boolean | user$userrolesArgs<ExtArgs>
    useroffers?: boolean | user$useroffersArgs<ExtArgs>
    usercontacts?: boolean | user$usercontactsArgs<ExtArgs>
    userpages?: boolean | user$userpagesArgs<ExtArgs>
    userservicecategory?: boolean | user$userservicecategoryArgs<ExtArgs>
    userservice?: boolean | user$userserviceArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $userPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user"
    objects: {
      notificationuser: Prisma.$notificationPayload<ExtArgs>[]
      createdapiclients: Prisma.$apiclientPayload<ExtArgs>[]
      updatedapiclients: Prisma.$apiclientPayload<ExtArgs>[]
      createdpermissions: Prisma.$permissionPayload<ExtArgs>[]
      updatedpermissions: Prisma.$permissionPayload<ExtArgs>[]
      refreshtokens: Prisma.$refreshtokenPayload<ExtArgs>[]
      createdroles: Prisma.$rolePayload<ExtArgs>[]
      updatedroles: Prisma.$rolePayload<ExtArgs>[]
      createdrolepermissions: Prisma.$rolepermissionPayload<ExtArgs>[]
      updatedrolepermissions: Prisma.$rolepermissionPayload<ExtArgs>[]
      createduser: Prisma.$userPayload<ExtArgs>
      createdusers: Prisma.$userPayload<ExtArgs>[]
      updateduser: Prisma.$userPayload<ExtArgs> | null
      updatedusers: Prisma.$userPayload<ExtArgs>[]
      createduserpermissions: Prisma.$userpermissionPayload<ExtArgs>[]
      updateduserpermissions: Prisma.$userpermissionPayload<ExtArgs>[]
      userpermissions: Prisma.$userpermissionPayload<ExtArgs>[]
      createduserroles: Prisma.$userrolePayload<ExtArgs>[]
      updateduserroles: Prisma.$userrolePayload<ExtArgs>[]
      userroles: Prisma.$userrolePayload<ExtArgs>[]
      useroffers: Prisma.$offerPayload<ExtArgs>[]
      usercontacts: Prisma.$contactPayload<ExtArgs>[]
      userpages: Prisma.$pagePayload<ExtArgs>[]
      userservicecategory: Prisma.$servicecategoryPayload<ExtArgs>[]
      userservice: Prisma.$servicePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      firstname: string
      lastname: string
      phone: string | null
      email: string
      password: string
      createdby: number
      createdat: Date
      updatedby: number | null
      updatedat: Date | null
      status: number
    }, ExtArgs["result"]["user"]>
    composites: {}
  }


  type userGetPayload<S extends boolean | null | undefined | userDefaultArgs> = $Result.GetResult<Prisma.$userPayload, S>

  type userCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<userFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface userDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user'], meta: { name: 'user' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {userFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends userFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, userFindUniqueArgs<ExtArgs>>
    ): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {userFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends userFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, userFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends userFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, userFindFirstArgs<ExtArgs>>
    ): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends userFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, userFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends userFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, userFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a User.
     * @param {userCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
    **/
    create<T extends userCreateArgs<ExtArgs>>(
      args: SelectSubset<T, userCreateArgs<ExtArgs>>
    ): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Users.
     *     @param {userCreateManyArgs} args - Arguments to create many Users.
     *     @example
     *     // Create many Users
     *     const user = await prisma.user.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends userCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, userCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User.
     * @param {userDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
    **/
    delete<T extends userDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, userDeleteArgs<ExtArgs>>
    ): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one User.
     * @param {userUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends userUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, userUpdateArgs<ExtArgs>>
    ): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {userDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends userDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, userDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends userUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, userUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {userUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
    **/
    upsert<T extends userUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, userUpsertArgs<ExtArgs>>
    ): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends userCountArgs>(
      args?: Subset<T, userCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends userGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: userGroupByArgs['orderBy'] }
        : { orderBy?: userGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, userGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user model
   */
  readonly fields: userFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__userClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    notificationuser<T extends user$notificationuserArgs<ExtArgs> = {}>(args?: Subset<T, user$notificationuserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, 'findMany'> | Null>;

    createdapiclients<T extends user$createdapiclientsArgs<ExtArgs> = {}>(args?: Subset<T, user$createdapiclientsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$apiclientPayload<ExtArgs>, T, 'findMany'> | Null>;

    updatedapiclients<T extends user$updatedapiclientsArgs<ExtArgs> = {}>(args?: Subset<T, user$updatedapiclientsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$apiclientPayload<ExtArgs>, T, 'findMany'> | Null>;

    createdpermissions<T extends user$createdpermissionsArgs<ExtArgs> = {}>(args?: Subset<T, user$createdpermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, 'findMany'> | Null>;

    updatedpermissions<T extends user$updatedpermissionsArgs<ExtArgs> = {}>(args?: Subset<T, user$updatedpermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, 'findMany'> | Null>;

    refreshtokens<T extends user$refreshtokensArgs<ExtArgs> = {}>(args?: Subset<T, user$refreshtokensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$refreshtokenPayload<ExtArgs>, T, 'findMany'> | Null>;

    createdroles<T extends user$createdrolesArgs<ExtArgs> = {}>(args?: Subset<T, user$createdrolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, 'findMany'> | Null>;

    updatedroles<T extends user$updatedrolesArgs<ExtArgs> = {}>(args?: Subset<T, user$updatedrolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, 'findMany'> | Null>;

    createdrolepermissions<T extends user$createdrolepermissionsArgs<ExtArgs> = {}>(args?: Subset<T, user$createdrolepermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolepermissionPayload<ExtArgs>, T, 'findMany'> | Null>;

    updatedrolepermissions<T extends user$updatedrolepermissionsArgs<ExtArgs> = {}>(args?: Subset<T, user$updatedrolepermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolepermissionPayload<ExtArgs>, T, 'findMany'> | Null>;

    createduser<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    createdusers<T extends user$createdusersArgs<ExtArgs> = {}>(args?: Subset<T, user$createdusersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findMany'> | Null>;

    updateduser<T extends user$updateduserArgs<ExtArgs> = {}>(args?: Subset<T, user$updateduserArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    updatedusers<T extends user$updatedusersArgs<ExtArgs> = {}>(args?: Subset<T, user$updatedusersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findMany'> | Null>;

    createduserpermissions<T extends user$createduserpermissionsArgs<ExtArgs> = {}>(args?: Subset<T, user$createduserpermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userpermissionPayload<ExtArgs>, T, 'findMany'> | Null>;

    updateduserpermissions<T extends user$updateduserpermissionsArgs<ExtArgs> = {}>(args?: Subset<T, user$updateduserpermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userpermissionPayload<ExtArgs>, T, 'findMany'> | Null>;

    userpermissions<T extends user$userpermissionsArgs<ExtArgs> = {}>(args?: Subset<T, user$userpermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userpermissionPayload<ExtArgs>, T, 'findMany'> | Null>;

    createduserroles<T extends user$createduserrolesArgs<ExtArgs> = {}>(args?: Subset<T, user$createduserrolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userrolePayload<ExtArgs>, T, 'findMany'> | Null>;

    updateduserroles<T extends user$updateduserrolesArgs<ExtArgs> = {}>(args?: Subset<T, user$updateduserrolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userrolePayload<ExtArgs>, T, 'findMany'> | Null>;

    userroles<T extends user$userrolesArgs<ExtArgs> = {}>(args?: Subset<T, user$userrolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userrolePayload<ExtArgs>, T, 'findMany'> | Null>;

    useroffers<T extends user$useroffersArgs<ExtArgs> = {}>(args?: Subset<T, user$useroffersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$offerPayload<ExtArgs>, T, 'findMany'> | Null>;

    usercontacts<T extends user$usercontactsArgs<ExtArgs> = {}>(args?: Subset<T, user$usercontactsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$contactPayload<ExtArgs>, T, 'findMany'> | Null>;

    userpages<T extends user$userpagesArgs<ExtArgs> = {}>(args?: Subset<T, user$userpagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pagePayload<ExtArgs>, T, 'findMany'> | Null>;

    userservicecategory<T extends user$userservicecategoryArgs<ExtArgs> = {}>(args?: Subset<T, user$userservicecategoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$servicecategoryPayload<ExtArgs>, T, 'findMany'> | Null>;

    userservice<T extends user$userserviceArgs<ExtArgs> = {}>(args?: Subset<T, user$userserviceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$servicePayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the user model
   */ 
  interface userFieldRefs {
    readonly id: FieldRef<"user", 'Int'>
    readonly firstname: FieldRef<"user", 'String'>
    readonly lastname: FieldRef<"user", 'String'>
    readonly phone: FieldRef<"user", 'String'>
    readonly email: FieldRef<"user", 'String'>
    readonly password: FieldRef<"user", 'String'>
    readonly createdby: FieldRef<"user", 'Int'>
    readonly createdat: FieldRef<"user", 'DateTime'>
    readonly updatedby: FieldRef<"user", 'Int'>
    readonly updatedat: FieldRef<"user", 'DateTime'>
    readonly status: FieldRef<"user", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * user findUnique
   */
  export type userFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where: userWhereUniqueInput
  }


  /**
   * user findUniqueOrThrow
   */
  export type userFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where: userWhereUniqueInput
  }


  /**
   * user findFirst
   */
  export type userFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }


  /**
   * user findFirstOrThrow
   */
  export type userFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }


  /**
   * user findMany
   */
  export type userFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }


  /**
   * user create
   */
  export type userCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The data needed to create a user.
     */
    data: XOR<userCreateInput, userUncheckedCreateInput>
  }


  /**
   * user createMany
   */
  export type userCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: userCreateManyInput | userCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * user update
   */
  export type userUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The data needed to update a user.
     */
    data: XOR<userUpdateInput, userUncheckedUpdateInput>
    /**
     * Choose, which user to update.
     */
    where: userWhereUniqueInput
  }


  /**
   * user updateMany
   */
  export type userUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<userUpdateManyMutationInput, userUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: userWhereInput
  }


  /**
   * user upsert
   */
  export type userUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The filter to search for the user to update in case it exists.
     */
    where: userWhereUniqueInput
    /**
     * In case the user found by the `where` argument doesn't exist, create a new user with this data.
     */
    create: XOR<userCreateInput, userUncheckedCreateInput>
    /**
     * In case the user was found with the provided `where` argument, update it with this data.
     */
    update: XOR<userUpdateInput, userUncheckedUpdateInput>
  }


  /**
   * user delete
   */
  export type userDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter which user to delete.
     */
    where: userWhereUniqueInput
  }


  /**
   * user deleteMany
   */
  export type userDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: userWhereInput
  }


  /**
   * user.notificationuser
   */
  export type user$notificationuserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: notificationInclude<ExtArgs> | null
    where?: notificationWhereInput
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    cursor?: notificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }


  /**
   * user.createdapiclients
   */
  export type user$createdapiclientsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apiclient
     */
    select?: apiclientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: apiclientInclude<ExtArgs> | null
    where?: apiclientWhereInput
    orderBy?: apiclientOrderByWithRelationInput | apiclientOrderByWithRelationInput[]
    cursor?: apiclientWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ApiclientScalarFieldEnum | ApiclientScalarFieldEnum[]
  }


  /**
   * user.updatedapiclients
   */
  export type user$updatedapiclientsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the apiclient
     */
    select?: apiclientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: apiclientInclude<ExtArgs> | null
    where?: apiclientWhereInput
    orderBy?: apiclientOrderByWithRelationInput | apiclientOrderByWithRelationInput[]
    cursor?: apiclientWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ApiclientScalarFieldEnum | ApiclientScalarFieldEnum[]
  }


  /**
   * user.createdpermissions
   */
  export type user$createdpermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: permissionInclude<ExtArgs> | null
    where?: permissionWhereInput
    orderBy?: permissionOrderByWithRelationInput | permissionOrderByWithRelationInput[]
    cursor?: permissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }


  /**
   * user.updatedpermissions
   */
  export type user$updatedpermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: permissionInclude<ExtArgs> | null
    where?: permissionWhereInput
    orderBy?: permissionOrderByWithRelationInput | permissionOrderByWithRelationInput[]
    cursor?: permissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }


  /**
   * user.refreshtokens
   */
  export type user$refreshtokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refreshtoken
     */
    select?: refreshtokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: refreshtokenInclude<ExtArgs> | null
    where?: refreshtokenWhereInput
    orderBy?: refreshtokenOrderByWithRelationInput | refreshtokenOrderByWithRelationInput[]
    cursor?: refreshtokenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RefreshtokenScalarFieldEnum | RefreshtokenScalarFieldEnum[]
  }


  /**
   * user.createdroles
   */
  export type user$createdrolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: roleInclude<ExtArgs> | null
    where?: roleWhereInput
    orderBy?: roleOrderByWithRelationInput | roleOrderByWithRelationInput[]
    cursor?: roleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }


  /**
   * user.updatedroles
   */
  export type user$updatedrolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: roleInclude<ExtArgs> | null
    where?: roleWhereInput
    orderBy?: roleOrderByWithRelationInput | roleOrderByWithRelationInput[]
    cursor?: roleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }


  /**
   * user.createdrolepermissions
   */
  export type user$createdrolepermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: rolepermissionInclude<ExtArgs> | null
    where?: rolepermissionWhereInput
    orderBy?: rolepermissionOrderByWithRelationInput | rolepermissionOrderByWithRelationInput[]
    cursor?: rolepermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RolepermissionScalarFieldEnum | RolepermissionScalarFieldEnum[]
  }


  /**
   * user.updatedrolepermissions
   */
  export type user$updatedrolepermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rolepermission
     */
    select?: rolepermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: rolepermissionInclude<ExtArgs> | null
    where?: rolepermissionWhereInput
    orderBy?: rolepermissionOrderByWithRelationInput | rolepermissionOrderByWithRelationInput[]
    cursor?: rolepermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RolepermissionScalarFieldEnum | RolepermissionScalarFieldEnum[]
  }


  /**
   * user.createdusers
   */
  export type user$createdusersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    cursor?: userWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }


  /**
   * user.updateduser
   */
  export type user$updateduserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
  }


  /**
   * user.updatedusers
   */
  export type user$updatedusersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    cursor?: userWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }


  /**
   * user.createduserpermissions
   */
  export type user$createduserpermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userpermissionInclude<ExtArgs> | null
    where?: userpermissionWhereInput
    orderBy?: userpermissionOrderByWithRelationInput | userpermissionOrderByWithRelationInput[]
    cursor?: userpermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserpermissionScalarFieldEnum | UserpermissionScalarFieldEnum[]
  }


  /**
   * user.updateduserpermissions
   */
  export type user$updateduserpermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userpermissionInclude<ExtArgs> | null
    where?: userpermissionWhereInput
    orderBy?: userpermissionOrderByWithRelationInput | userpermissionOrderByWithRelationInput[]
    cursor?: userpermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserpermissionScalarFieldEnum | UserpermissionScalarFieldEnum[]
  }


  /**
   * user.userpermissions
   */
  export type user$userpermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userpermissionInclude<ExtArgs> | null
    where?: userpermissionWhereInput
    orderBy?: userpermissionOrderByWithRelationInput | userpermissionOrderByWithRelationInput[]
    cursor?: userpermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserpermissionScalarFieldEnum | UserpermissionScalarFieldEnum[]
  }


  /**
   * user.createduserroles
   */
  export type user$createduserrolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userroleInclude<ExtArgs> | null
    where?: userroleWhereInput
    orderBy?: userroleOrderByWithRelationInput | userroleOrderByWithRelationInput[]
    cursor?: userroleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserroleScalarFieldEnum | UserroleScalarFieldEnum[]
  }


  /**
   * user.updateduserroles
   */
  export type user$updateduserrolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userroleInclude<ExtArgs> | null
    where?: userroleWhereInput
    orderBy?: userroleOrderByWithRelationInput | userroleOrderByWithRelationInput[]
    cursor?: userroleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserroleScalarFieldEnum | UserroleScalarFieldEnum[]
  }


  /**
   * user.userroles
   */
  export type user$userrolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userroleInclude<ExtArgs> | null
    where?: userroleWhereInput
    orderBy?: userroleOrderByWithRelationInput | userroleOrderByWithRelationInput[]
    cursor?: userroleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserroleScalarFieldEnum | UserroleScalarFieldEnum[]
  }


  /**
   * user.useroffers
   */
  export type user$useroffersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offer
     */
    select?: offerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: offerInclude<ExtArgs> | null
    where?: offerWhereInput
    orderBy?: offerOrderByWithRelationInput | offerOrderByWithRelationInput[]
    cursor?: offerWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OfferScalarFieldEnum | OfferScalarFieldEnum[]
  }


  /**
   * user.usercontacts
   */
  export type user$usercontactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact
     */
    select?: contactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contactInclude<ExtArgs> | null
    where?: contactWhereInput
    orderBy?: contactOrderByWithRelationInput | contactOrderByWithRelationInput[]
    cursor?: contactWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }


  /**
   * user.userpages
   */
  export type user$userpagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the page
     */
    select?: pageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: pageInclude<ExtArgs> | null
    where?: pageWhereInput
    orderBy?: pageOrderByWithRelationInput | pageOrderByWithRelationInput[]
    cursor?: pageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PageScalarFieldEnum | PageScalarFieldEnum[]
  }


  /**
   * user.userservicecategory
   */
  export type user$userservicecategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicecategory
     */
    select?: servicecategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: servicecategoryInclude<ExtArgs> | null
    where?: servicecategoryWhereInput
    orderBy?: servicecategoryOrderByWithRelationInput | servicecategoryOrderByWithRelationInput[]
    cursor?: servicecategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServicecategoryScalarFieldEnum | ServicecategoryScalarFieldEnum[]
  }


  /**
   * user.userservice
   */
  export type user$userserviceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service
     */
    select?: serviceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: serviceInclude<ExtArgs> | null
    where?: serviceWhereInput
    orderBy?: serviceOrderByWithRelationInput | serviceOrderByWithRelationInput[]
    cursor?: serviceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServiceScalarFieldEnum | ServiceScalarFieldEnum[]
  }


  /**
   * user without action
   */
  export type userDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userInclude<ExtArgs> | null
  }



  /**
   * Model userpermission
   */

  export type AggregateUserpermission = {
    _count: UserpermissionCountAggregateOutputType | null
    _avg: UserpermissionAvgAggregateOutputType | null
    _sum: UserpermissionSumAggregateOutputType | null
    _min: UserpermissionMinAggregateOutputType | null
    _max: UserpermissionMaxAggregateOutputType | null
  }

  export type UserpermissionAvgAggregateOutputType = {
    id: number | null
    userid: number | null
    permissionid: number | null
    createdby: number | null
    updatedby: number | null
  }

  export type UserpermissionSumAggregateOutputType = {
    id: number | null
    userid: number | null
    permissionid: number | null
    createdby: number | null
    updatedby: number | null
  }

  export type UserpermissionMinAggregateOutputType = {
    id: number | null
    userid: number | null
    permissionid: number | null
    createdby: number | null
    createdat: Date | null
    updatedby: number | null
    updatedat: Date | null
  }

  export type UserpermissionMaxAggregateOutputType = {
    id: number | null
    userid: number | null
    permissionid: number | null
    createdby: number | null
    createdat: Date | null
    updatedby: number | null
    updatedat: Date | null
  }

  export type UserpermissionCountAggregateOutputType = {
    id: number
    userid: number
    permissionid: number
    createdby: number
    createdat: number
    updatedby: number
    updatedat: number
    _all: number
  }


  export type UserpermissionAvgAggregateInputType = {
    id?: true
    userid?: true
    permissionid?: true
    createdby?: true
    updatedby?: true
  }

  export type UserpermissionSumAggregateInputType = {
    id?: true
    userid?: true
    permissionid?: true
    createdby?: true
    updatedby?: true
  }

  export type UserpermissionMinAggregateInputType = {
    id?: true
    userid?: true
    permissionid?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
  }

  export type UserpermissionMaxAggregateInputType = {
    id?: true
    userid?: true
    permissionid?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
  }

  export type UserpermissionCountAggregateInputType = {
    id?: true
    userid?: true
    permissionid?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
    _all?: true
  }

  export type UserpermissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which userpermission to aggregate.
     */
    where?: userpermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of userpermissions to fetch.
     */
    orderBy?: userpermissionOrderByWithRelationInput | userpermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: userpermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` userpermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` userpermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned userpermissions
    **/
    _count?: true | UserpermissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserpermissionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserpermissionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserpermissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserpermissionMaxAggregateInputType
  }

  export type GetUserpermissionAggregateType<T extends UserpermissionAggregateArgs> = {
        [P in keyof T & keyof AggregateUserpermission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserpermission[P]>
      : GetScalarType<T[P], AggregateUserpermission[P]>
  }




  export type userpermissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userpermissionWhereInput
    orderBy?: userpermissionOrderByWithAggregationInput | userpermissionOrderByWithAggregationInput[]
    by: UserpermissionScalarFieldEnum[] | UserpermissionScalarFieldEnum
    having?: userpermissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserpermissionCountAggregateInputType | true
    _avg?: UserpermissionAvgAggregateInputType
    _sum?: UserpermissionSumAggregateInputType
    _min?: UserpermissionMinAggregateInputType
    _max?: UserpermissionMaxAggregateInputType
  }

  export type UserpermissionGroupByOutputType = {
    id: number
    userid: number
    permissionid: number
    createdby: number
    createdat: Date
    updatedby: number | null
    updatedat: Date | null
    _count: UserpermissionCountAggregateOutputType | null
    _avg: UserpermissionAvgAggregateOutputType | null
    _sum: UserpermissionSumAggregateOutputType | null
    _min: UserpermissionMinAggregateOutputType | null
    _max: UserpermissionMaxAggregateOutputType | null
  }

  type GetUserpermissionGroupByPayload<T extends userpermissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserpermissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserpermissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserpermissionGroupByOutputType[P]>
            : GetScalarType<T[P], UserpermissionGroupByOutputType[P]>
        }
      >
    >


  export type userpermissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userid?: boolean
    permissionid?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
    createduser?: boolean | userDefaultArgs<ExtArgs>
    permission?: boolean | permissionDefaultArgs<ExtArgs>
    updateduser?: boolean | userpermission$updateduserArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userpermission"]>

  export type userpermissionSelectScalar = {
    id?: boolean
    userid?: boolean
    permissionid?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
  }

  export type userpermissionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createduser?: boolean | userDefaultArgs<ExtArgs>
    permission?: boolean | permissionDefaultArgs<ExtArgs>
    updateduser?: boolean | userpermission$updateduserArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }


  export type $userpermissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "userpermission"
    objects: {
      createduser: Prisma.$userPayload<ExtArgs>
      permission: Prisma.$permissionPayload<ExtArgs>
      updateduser: Prisma.$userPayload<ExtArgs> | null
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userid: number
      permissionid: number
      createdby: number
      createdat: Date
      updatedby: number | null
      updatedat: Date | null
    }, ExtArgs["result"]["userpermission"]>
    composites: {}
  }


  type userpermissionGetPayload<S extends boolean | null | undefined | userpermissionDefaultArgs> = $Result.GetResult<Prisma.$userpermissionPayload, S>

  type userpermissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<userpermissionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserpermissionCountAggregateInputType | true
    }

  export interface userpermissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['userpermission'], meta: { name: 'userpermission' } }
    /**
     * Find zero or one Userpermission that matches the filter.
     * @param {userpermissionFindUniqueArgs} args - Arguments to find a Userpermission
     * @example
     * // Get one Userpermission
     * const userpermission = await prisma.userpermission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends userpermissionFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, userpermissionFindUniqueArgs<ExtArgs>>
    ): Prisma__userpermissionClient<$Result.GetResult<Prisma.$userpermissionPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Userpermission that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {userpermissionFindUniqueOrThrowArgs} args - Arguments to find a Userpermission
     * @example
     * // Get one Userpermission
     * const userpermission = await prisma.userpermission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends userpermissionFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, userpermissionFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__userpermissionClient<$Result.GetResult<Prisma.$userpermissionPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Userpermission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userpermissionFindFirstArgs} args - Arguments to find a Userpermission
     * @example
     * // Get one Userpermission
     * const userpermission = await prisma.userpermission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends userpermissionFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, userpermissionFindFirstArgs<ExtArgs>>
    ): Prisma__userpermissionClient<$Result.GetResult<Prisma.$userpermissionPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Userpermission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userpermissionFindFirstOrThrowArgs} args - Arguments to find a Userpermission
     * @example
     * // Get one Userpermission
     * const userpermission = await prisma.userpermission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends userpermissionFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, userpermissionFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__userpermissionClient<$Result.GetResult<Prisma.$userpermissionPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Userpermissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userpermissionFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Userpermissions
     * const userpermissions = await prisma.userpermission.findMany()
     * 
     * // Get first 10 Userpermissions
     * const userpermissions = await prisma.userpermission.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userpermissionWithIdOnly = await prisma.userpermission.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends userpermissionFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, userpermissionFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userpermissionPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Userpermission.
     * @param {userpermissionCreateArgs} args - Arguments to create a Userpermission.
     * @example
     * // Create one Userpermission
     * const Userpermission = await prisma.userpermission.create({
     *   data: {
     *     // ... data to create a Userpermission
     *   }
     * })
     * 
    **/
    create<T extends userpermissionCreateArgs<ExtArgs>>(
      args: SelectSubset<T, userpermissionCreateArgs<ExtArgs>>
    ): Prisma__userpermissionClient<$Result.GetResult<Prisma.$userpermissionPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Userpermissions.
     *     @param {userpermissionCreateManyArgs} args - Arguments to create many Userpermissions.
     *     @example
     *     // Create many Userpermissions
     *     const userpermission = await prisma.userpermission.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends userpermissionCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, userpermissionCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Userpermission.
     * @param {userpermissionDeleteArgs} args - Arguments to delete one Userpermission.
     * @example
     * // Delete one Userpermission
     * const Userpermission = await prisma.userpermission.delete({
     *   where: {
     *     // ... filter to delete one Userpermission
     *   }
     * })
     * 
    **/
    delete<T extends userpermissionDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, userpermissionDeleteArgs<ExtArgs>>
    ): Prisma__userpermissionClient<$Result.GetResult<Prisma.$userpermissionPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Userpermission.
     * @param {userpermissionUpdateArgs} args - Arguments to update one Userpermission.
     * @example
     * // Update one Userpermission
     * const userpermission = await prisma.userpermission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends userpermissionUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, userpermissionUpdateArgs<ExtArgs>>
    ): Prisma__userpermissionClient<$Result.GetResult<Prisma.$userpermissionPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Userpermissions.
     * @param {userpermissionDeleteManyArgs} args - Arguments to filter Userpermissions to delete.
     * @example
     * // Delete a few Userpermissions
     * const { count } = await prisma.userpermission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends userpermissionDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, userpermissionDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Userpermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userpermissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Userpermissions
     * const userpermission = await prisma.userpermission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends userpermissionUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, userpermissionUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Userpermission.
     * @param {userpermissionUpsertArgs} args - Arguments to update or create a Userpermission.
     * @example
     * // Update or create a Userpermission
     * const userpermission = await prisma.userpermission.upsert({
     *   create: {
     *     // ... data to create a Userpermission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Userpermission we want to update
     *   }
     * })
    **/
    upsert<T extends userpermissionUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, userpermissionUpsertArgs<ExtArgs>>
    ): Prisma__userpermissionClient<$Result.GetResult<Prisma.$userpermissionPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Userpermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userpermissionCountArgs} args - Arguments to filter Userpermissions to count.
     * @example
     * // Count the number of Userpermissions
     * const count = await prisma.userpermission.count({
     *   where: {
     *     // ... the filter for the Userpermissions we want to count
     *   }
     * })
    **/
    count<T extends userpermissionCountArgs>(
      args?: Subset<T, userpermissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserpermissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Userpermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserpermissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserpermissionAggregateArgs>(args: Subset<T, UserpermissionAggregateArgs>): Prisma.PrismaPromise<GetUserpermissionAggregateType<T>>

    /**
     * Group by Userpermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userpermissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends userpermissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: userpermissionGroupByArgs['orderBy'] }
        : { orderBy?: userpermissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, userpermissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserpermissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the userpermission model
   */
  readonly fields: userpermissionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for userpermission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__userpermissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    createduser<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    permission<T extends permissionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, permissionDefaultArgs<ExtArgs>>): Prisma__permissionClient<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    updateduser<T extends userpermission$updateduserArgs<ExtArgs> = {}>(args?: Subset<T, userpermission$updateduserArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the userpermission model
   */ 
  interface userpermissionFieldRefs {
    readonly id: FieldRef<"userpermission", 'Int'>
    readonly userid: FieldRef<"userpermission", 'Int'>
    readonly permissionid: FieldRef<"userpermission", 'Int'>
    readonly createdby: FieldRef<"userpermission", 'Int'>
    readonly createdat: FieldRef<"userpermission", 'DateTime'>
    readonly updatedby: FieldRef<"userpermission", 'Int'>
    readonly updatedat: FieldRef<"userpermission", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * userpermission findUnique
   */
  export type userpermissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userpermissionInclude<ExtArgs> | null
    /**
     * Filter, which userpermission to fetch.
     */
    where: userpermissionWhereUniqueInput
  }


  /**
   * userpermission findUniqueOrThrow
   */
  export type userpermissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userpermissionInclude<ExtArgs> | null
    /**
     * Filter, which userpermission to fetch.
     */
    where: userpermissionWhereUniqueInput
  }


  /**
   * userpermission findFirst
   */
  export type userpermissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userpermissionInclude<ExtArgs> | null
    /**
     * Filter, which userpermission to fetch.
     */
    where?: userpermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of userpermissions to fetch.
     */
    orderBy?: userpermissionOrderByWithRelationInput | userpermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for userpermissions.
     */
    cursor?: userpermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` userpermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` userpermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of userpermissions.
     */
    distinct?: UserpermissionScalarFieldEnum | UserpermissionScalarFieldEnum[]
  }


  /**
   * userpermission findFirstOrThrow
   */
  export type userpermissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userpermissionInclude<ExtArgs> | null
    /**
     * Filter, which userpermission to fetch.
     */
    where?: userpermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of userpermissions to fetch.
     */
    orderBy?: userpermissionOrderByWithRelationInput | userpermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for userpermissions.
     */
    cursor?: userpermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` userpermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` userpermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of userpermissions.
     */
    distinct?: UserpermissionScalarFieldEnum | UserpermissionScalarFieldEnum[]
  }


  /**
   * userpermission findMany
   */
  export type userpermissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userpermissionInclude<ExtArgs> | null
    /**
     * Filter, which userpermissions to fetch.
     */
    where?: userpermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of userpermissions to fetch.
     */
    orderBy?: userpermissionOrderByWithRelationInput | userpermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing userpermissions.
     */
    cursor?: userpermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` userpermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` userpermissions.
     */
    skip?: number
    distinct?: UserpermissionScalarFieldEnum | UserpermissionScalarFieldEnum[]
  }


  /**
   * userpermission create
   */
  export type userpermissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userpermissionInclude<ExtArgs> | null
    /**
     * The data needed to create a userpermission.
     */
    data: XOR<userpermissionCreateInput, userpermissionUncheckedCreateInput>
  }


  /**
   * userpermission createMany
   */
  export type userpermissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many userpermissions.
     */
    data: userpermissionCreateManyInput | userpermissionCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * userpermission update
   */
  export type userpermissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userpermissionInclude<ExtArgs> | null
    /**
     * The data needed to update a userpermission.
     */
    data: XOR<userpermissionUpdateInput, userpermissionUncheckedUpdateInput>
    /**
     * Choose, which userpermission to update.
     */
    where: userpermissionWhereUniqueInput
  }


  /**
   * userpermission updateMany
   */
  export type userpermissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update userpermissions.
     */
    data: XOR<userpermissionUpdateManyMutationInput, userpermissionUncheckedUpdateManyInput>
    /**
     * Filter which userpermissions to update
     */
    where?: userpermissionWhereInput
  }


  /**
   * userpermission upsert
   */
  export type userpermissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userpermissionInclude<ExtArgs> | null
    /**
     * The filter to search for the userpermission to update in case it exists.
     */
    where: userpermissionWhereUniqueInput
    /**
     * In case the userpermission found by the `where` argument doesn't exist, create a new userpermission with this data.
     */
    create: XOR<userpermissionCreateInput, userpermissionUncheckedCreateInput>
    /**
     * In case the userpermission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<userpermissionUpdateInput, userpermissionUncheckedUpdateInput>
  }


  /**
   * userpermission delete
   */
  export type userpermissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userpermissionInclude<ExtArgs> | null
    /**
     * Filter which userpermission to delete.
     */
    where: userpermissionWhereUniqueInput
  }


  /**
   * userpermission deleteMany
   */
  export type userpermissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which userpermissions to delete
     */
    where?: userpermissionWhereInput
  }


  /**
   * userpermission.updateduser
   */
  export type userpermission$updateduserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
  }


  /**
   * userpermission without action
   */
  export type userpermissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userpermission
     */
    select?: userpermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userpermissionInclude<ExtArgs> | null
  }



  /**
   * Model userrole
   */

  export type AggregateUserrole = {
    _count: UserroleCountAggregateOutputType | null
    _avg: UserroleAvgAggregateOutputType | null
    _sum: UserroleSumAggregateOutputType | null
    _min: UserroleMinAggregateOutputType | null
    _max: UserroleMaxAggregateOutputType | null
  }

  export type UserroleAvgAggregateOutputType = {
    id: number | null
    userid: number | null
    roleid: number | null
    createdby: number | null
    updatedby: number | null
  }

  export type UserroleSumAggregateOutputType = {
    id: number | null
    userid: number | null
    roleid: number | null
    createdby: number | null
    updatedby: number | null
  }

  export type UserroleMinAggregateOutputType = {
    id: number | null
    userid: number | null
    roleid: number | null
    createdby: number | null
    createdat: Date | null
    updatedby: number | null
    updatedat: Date | null
  }

  export type UserroleMaxAggregateOutputType = {
    id: number | null
    userid: number | null
    roleid: number | null
    createdby: number | null
    createdat: Date | null
    updatedby: number | null
    updatedat: Date | null
  }

  export type UserroleCountAggregateOutputType = {
    id: number
    userid: number
    roleid: number
    createdby: number
    createdat: number
    updatedby: number
    updatedat: number
    _all: number
  }


  export type UserroleAvgAggregateInputType = {
    id?: true
    userid?: true
    roleid?: true
    createdby?: true
    updatedby?: true
  }

  export type UserroleSumAggregateInputType = {
    id?: true
    userid?: true
    roleid?: true
    createdby?: true
    updatedby?: true
  }

  export type UserroleMinAggregateInputType = {
    id?: true
    userid?: true
    roleid?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
  }

  export type UserroleMaxAggregateInputType = {
    id?: true
    userid?: true
    roleid?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
  }

  export type UserroleCountAggregateInputType = {
    id?: true
    userid?: true
    roleid?: true
    createdby?: true
    createdat?: true
    updatedby?: true
    updatedat?: true
    _all?: true
  }

  export type UserroleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which userrole to aggregate.
     */
    where?: userroleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of userroles to fetch.
     */
    orderBy?: userroleOrderByWithRelationInput | userroleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: userroleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` userroles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` userroles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned userroles
    **/
    _count?: true | UserroleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserroleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserroleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserroleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserroleMaxAggregateInputType
  }

  export type GetUserroleAggregateType<T extends UserroleAggregateArgs> = {
        [P in keyof T & keyof AggregateUserrole]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserrole[P]>
      : GetScalarType<T[P], AggregateUserrole[P]>
  }




  export type userroleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userroleWhereInput
    orderBy?: userroleOrderByWithAggregationInput | userroleOrderByWithAggregationInput[]
    by: UserroleScalarFieldEnum[] | UserroleScalarFieldEnum
    having?: userroleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserroleCountAggregateInputType | true
    _avg?: UserroleAvgAggregateInputType
    _sum?: UserroleSumAggregateInputType
    _min?: UserroleMinAggregateInputType
    _max?: UserroleMaxAggregateInputType
  }

  export type UserroleGroupByOutputType = {
    id: number
    userid: number
    roleid: number
    createdby: number
    createdat: Date
    updatedby: number | null
    updatedat: Date | null
    _count: UserroleCountAggregateOutputType | null
    _avg: UserroleAvgAggregateOutputType | null
    _sum: UserroleSumAggregateOutputType | null
    _min: UserroleMinAggregateOutputType | null
    _max: UserroleMaxAggregateOutputType | null
  }

  type GetUserroleGroupByPayload<T extends userroleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserroleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserroleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserroleGroupByOutputType[P]>
            : GetScalarType<T[P], UserroleGroupByOutputType[P]>
        }
      >
    >


  export type userroleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userid?: boolean
    roleid?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
    createduser?: boolean | userDefaultArgs<ExtArgs>
    role?: boolean | roleDefaultArgs<ExtArgs>
    updateduser?: boolean | userrole$updateduserArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userrole"]>

  export type userroleSelectScalar = {
    id?: boolean
    userid?: boolean
    roleid?: boolean
    createdby?: boolean
    createdat?: boolean
    updatedby?: boolean
    updatedat?: boolean
  }

  export type userroleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createduser?: boolean | userDefaultArgs<ExtArgs>
    role?: boolean | roleDefaultArgs<ExtArgs>
    updateduser?: boolean | userrole$updateduserArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }


  export type $userrolePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "userrole"
    objects: {
      createduser: Prisma.$userPayload<ExtArgs>
      role: Prisma.$rolePayload<ExtArgs>
      updateduser: Prisma.$userPayload<ExtArgs> | null
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userid: number
      roleid: number
      createdby: number
      createdat: Date
      updatedby: number | null
      updatedat: Date | null
    }, ExtArgs["result"]["userrole"]>
    composites: {}
  }


  type userroleGetPayload<S extends boolean | null | undefined | userroleDefaultArgs> = $Result.GetResult<Prisma.$userrolePayload, S>

  type userroleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<userroleFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserroleCountAggregateInputType | true
    }

  export interface userroleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['userrole'], meta: { name: 'userrole' } }
    /**
     * Find zero or one Userrole that matches the filter.
     * @param {userroleFindUniqueArgs} args - Arguments to find a Userrole
     * @example
     * // Get one Userrole
     * const userrole = await prisma.userrole.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends userroleFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, userroleFindUniqueArgs<ExtArgs>>
    ): Prisma__userroleClient<$Result.GetResult<Prisma.$userrolePayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Userrole that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {userroleFindUniqueOrThrowArgs} args - Arguments to find a Userrole
     * @example
     * // Get one Userrole
     * const userrole = await prisma.userrole.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends userroleFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, userroleFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__userroleClient<$Result.GetResult<Prisma.$userrolePayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Userrole that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userroleFindFirstArgs} args - Arguments to find a Userrole
     * @example
     * // Get one Userrole
     * const userrole = await prisma.userrole.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends userroleFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, userroleFindFirstArgs<ExtArgs>>
    ): Prisma__userroleClient<$Result.GetResult<Prisma.$userrolePayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Userrole that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userroleFindFirstOrThrowArgs} args - Arguments to find a Userrole
     * @example
     * // Get one Userrole
     * const userrole = await prisma.userrole.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends userroleFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, userroleFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__userroleClient<$Result.GetResult<Prisma.$userrolePayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Userroles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userroleFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Userroles
     * const userroles = await prisma.userrole.findMany()
     * 
     * // Get first 10 Userroles
     * const userroles = await prisma.userrole.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userroleWithIdOnly = await prisma.userrole.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends userroleFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, userroleFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userrolePayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Userrole.
     * @param {userroleCreateArgs} args - Arguments to create a Userrole.
     * @example
     * // Create one Userrole
     * const Userrole = await prisma.userrole.create({
     *   data: {
     *     // ... data to create a Userrole
     *   }
     * })
     * 
    **/
    create<T extends userroleCreateArgs<ExtArgs>>(
      args: SelectSubset<T, userroleCreateArgs<ExtArgs>>
    ): Prisma__userroleClient<$Result.GetResult<Prisma.$userrolePayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Userroles.
     *     @param {userroleCreateManyArgs} args - Arguments to create many Userroles.
     *     @example
     *     // Create many Userroles
     *     const userrole = await prisma.userrole.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends userroleCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, userroleCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Userrole.
     * @param {userroleDeleteArgs} args - Arguments to delete one Userrole.
     * @example
     * // Delete one Userrole
     * const Userrole = await prisma.userrole.delete({
     *   where: {
     *     // ... filter to delete one Userrole
     *   }
     * })
     * 
    **/
    delete<T extends userroleDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, userroleDeleteArgs<ExtArgs>>
    ): Prisma__userroleClient<$Result.GetResult<Prisma.$userrolePayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Userrole.
     * @param {userroleUpdateArgs} args - Arguments to update one Userrole.
     * @example
     * // Update one Userrole
     * const userrole = await prisma.userrole.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends userroleUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, userroleUpdateArgs<ExtArgs>>
    ): Prisma__userroleClient<$Result.GetResult<Prisma.$userrolePayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Userroles.
     * @param {userroleDeleteManyArgs} args - Arguments to filter Userroles to delete.
     * @example
     * // Delete a few Userroles
     * const { count } = await prisma.userrole.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends userroleDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, userroleDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Userroles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userroleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Userroles
     * const userrole = await prisma.userrole.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends userroleUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, userroleUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Userrole.
     * @param {userroleUpsertArgs} args - Arguments to update or create a Userrole.
     * @example
     * // Update or create a Userrole
     * const userrole = await prisma.userrole.upsert({
     *   create: {
     *     // ... data to create a Userrole
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Userrole we want to update
     *   }
     * })
    **/
    upsert<T extends userroleUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, userroleUpsertArgs<ExtArgs>>
    ): Prisma__userroleClient<$Result.GetResult<Prisma.$userrolePayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Userroles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userroleCountArgs} args - Arguments to filter Userroles to count.
     * @example
     * // Count the number of Userroles
     * const count = await prisma.userrole.count({
     *   where: {
     *     // ... the filter for the Userroles we want to count
     *   }
     * })
    **/
    count<T extends userroleCountArgs>(
      args?: Subset<T, userroleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserroleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Userrole.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserroleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserroleAggregateArgs>(args: Subset<T, UserroleAggregateArgs>): Prisma.PrismaPromise<GetUserroleAggregateType<T>>

    /**
     * Group by Userrole.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userroleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends userroleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: userroleGroupByArgs['orderBy'] }
        : { orderBy?: userroleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, userroleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserroleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the userrole model
   */
  readonly fields: userroleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for userrole.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__userroleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    createduser<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    role<T extends roleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, roleDefaultArgs<ExtArgs>>): Prisma__roleClient<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    updateduser<T extends userrole$updateduserArgs<ExtArgs> = {}>(args?: Subset<T, userrole$updateduserArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the userrole model
   */ 
  interface userroleFieldRefs {
    readonly id: FieldRef<"userrole", 'Int'>
    readonly userid: FieldRef<"userrole", 'Int'>
    readonly roleid: FieldRef<"userrole", 'Int'>
    readonly createdby: FieldRef<"userrole", 'Int'>
    readonly createdat: FieldRef<"userrole", 'DateTime'>
    readonly updatedby: FieldRef<"userrole", 'Int'>
    readonly updatedat: FieldRef<"userrole", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * userrole findUnique
   */
  export type userroleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userroleInclude<ExtArgs> | null
    /**
     * Filter, which userrole to fetch.
     */
    where: userroleWhereUniqueInput
  }


  /**
   * userrole findUniqueOrThrow
   */
  export type userroleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userroleInclude<ExtArgs> | null
    /**
     * Filter, which userrole to fetch.
     */
    where: userroleWhereUniqueInput
  }


  /**
   * userrole findFirst
   */
  export type userroleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userroleInclude<ExtArgs> | null
    /**
     * Filter, which userrole to fetch.
     */
    where?: userroleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of userroles to fetch.
     */
    orderBy?: userroleOrderByWithRelationInput | userroleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for userroles.
     */
    cursor?: userroleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` userroles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` userroles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of userroles.
     */
    distinct?: UserroleScalarFieldEnum | UserroleScalarFieldEnum[]
  }


  /**
   * userrole findFirstOrThrow
   */
  export type userroleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userroleInclude<ExtArgs> | null
    /**
     * Filter, which userrole to fetch.
     */
    where?: userroleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of userroles to fetch.
     */
    orderBy?: userroleOrderByWithRelationInput | userroleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for userroles.
     */
    cursor?: userroleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` userroles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` userroles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of userroles.
     */
    distinct?: UserroleScalarFieldEnum | UserroleScalarFieldEnum[]
  }


  /**
   * userrole findMany
   */
  export type userroleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userroleInclude<ExtArgs> | null
    /**
     * Filter, which userroles to fetch.
     */
    where?: userroleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of userroles to fetch.
     */
    orderBy?: userroleOrderByWithRelationInput | userroleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing userroles.
     */
    cursor?: userroleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` userroles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` userroles.
     */
    skip?: number
    distinct?: UserroleScalarFieldEnum | UserroleScalarFieldEnum[]
  }


  /**
   * userrole create
   */
  export type userroleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userroleInclude<ExtArgs> | null
    /**
     * The data needed to create a userrole.
     */
    data: XOR<userroleCreateInput, userroleUncheckedCreateInput>
  }


  /**
   * userrole createMany
   */
  export type userroleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many userroles.
     */
    data: userroleCreateManyInput | userroleCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * userrole update
   */
  export type userroleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userroleInclude<ExtArgs> | null
    /**
     * The data needed to update a userrole.
     */
    data: XOR<userroleUpdateInput, userroleUncheckedUpdateInput>
    /**
     * Choose, which userrole to update.
     */
    where: userroleWhereUniqueInput
  }


  /**
   * userrole updateMany
   */
  export type userroleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update userroles.
     */
    data: XOR<userroleUpdateManyMutationInput, userroleUncheckedUpdateManyInput>
    /**
     * Filter which userroles to update
     */
    where?: userroleWhereInput
  }


  /**
   * userrole upsert
   */
  export type userroleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userroleInclude<ExtArgs> | null
    /**
     * The filter to search for the userrole to update in case it exists.
     */
    where: userroleWhereUniqueInput
    /**
     * In case the userrole found by the `where` argument doesn't exist, create a new userrole with this data.
     */
    create: XOR<userroleCreateInput, userroleUncheckedCreateInput>
    /**
     * In case the userrole was found with the provided `where` argument, update it with this data.
     */
    update: XOR<userroleUpdateInput, userroleUncheckedUpdateInput>
  }


  /**
   * userrole delete
   */
  export type userroleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userroleInclude<ExtArgs> | null
    /**
     * Filter which userrole to delete.
     */
    where: userroleWhereUniqueInput
  }


  /**
   * userrole deleteMany
   */
  export type userroleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which userroles to delete
     */
    where?: userroleWhereInput
  }


  /**
   * userrole.updateduser
   */
  export type userrole$updateduserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
  }


  /**
   * userrole without action
   */
  export type userroleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the userrole
     */
    select?: userroleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: userroleInclude<ExtArgs> | null
  }



  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const BlogcommentScalarFieldEnum: {
    id: 'id',
    blogid: 'blogid',
    name: 'name',
    email: 'email',
    comment: 'comment',
    createdat: 'createdat',
    createdby: 'createdby',
    updatedat: 'updatedat',
    updatedby: 'updatedby',
    isactive: 'isactive'
  };

  export type BlogcommentScalarFieldEnum = (typeof BlogcommentScalarFieldEnum)[keyof typeof BlogcommentScalarFieldEnum]


  export const BlogScalarFieldEnum: {
    id: 'id',
    title: 'title',
    content: 'content',
    slug: 'slug',
    featuredimage: 'featuredimage',
    blogcategoryid: 'blogcategoryid',
    metaid: 'metaid',
    createdat: 'createdat',
    createdby: 'createdby',
    updatedat: 'updatedat',
    updatedby: 'updatedby',
    isactive: 'isactive'
  };

  export type BlogScalarFieldEnum = (typeof BlogScalarFieldEnum)[keyof typeof BlogScalarFieldEnum]


  export const BlogcategoryScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    featuredimage: 'featuredimage',
    metaid: 'metaid',
    createdat: 'createdat',
    createdby: 'createdby',
    updatedat: 'updatedat',
    updatedby: 'updatedby',
    isactive: 'isactive'
  };

  export type BlogcategoryScalarFieldEnum = (typeof BlogcategoryScalarFieldEnum)[keyof typeof BlogcategoryScalarFieldEnum]


  export const MetaScalarFieldEnum: {
    id: 'id',
    metatitle: 'metatitle',
    metadescription: 'metadescription',
    metakeywords: 'metakeywords',
    metarobots: 'metarobots',
    metahttpequiv: 'metahttpequiv',
    metalanguage: 'metalanguage',
    metaauthor: 'metaauthor',
    metarevisit: 'metarevisit',
    createdat: 'createdat',
    createdby: 'createdby',
    updatedat: 'updatedat',
    updatedby: 'updatedby'
  };

  export type MetaScalarFieldEnum = (typeof MetaScalarFieldEnum)[keyof typeof MetaScalarFieldEnum]


  export const OfferScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    saleprice: 'saleprice',
    salepricecurrency: 'salepricecurrency',
    salepriceperiod: 'salepriceperiod',
    discountprice: 'discountprice',
    discountamount: 'discountamount',
    createdat: 'createdat',
    createdby: 'createdby',
    updatedat: 'updatedat',
    updatedby: 'updatedby',
    isactive: 'isactive',
    serviceid: 'serviceid'
  };

  export type OfferScalarFieldEnum = (typeof OfferScalarFieldEnum)[keyof typeof OfferScalarFieldEnum]


  export const NewsletterScalarFieldEnum: {
    id: 'id',
    email: 'email',
    createdat: 'createdat',
    createdby: 'createdby',
    updatedat: 'updatedat',
    updatedby: 'updatedby'
  };

  export type NewsletterScalarFieldEnum = (typeof NewsletterScalarFieldEnum)[keyof typeof NewsletterScalarFieldEnum]


  export const ContactScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    phone: 'phone',
    message: 'message',
    attachment: 'attachment',
    createdat: 'createdat',
    createdby: 'createdby',
    updatedat: 'updatedat',
    updatedby: 'updatedby',
    isclosed: 'isclosed',
    servicecategoryid: 'servicecategoryid',
    serviceid: 'serviceid'
  };

  export type ContactScalarFieldEnum = (typeof ContactScalarFieldEnum)[keyof typeof ContactScalarFieldEnum]


  export const PageScalarFieldEnum: {
    id: 'id',
    metaid: 'metaid',
    name: 'name',
    content: 'content',
    slug: 'slug',
    createdat: 'createdat',
    createdby: 'createdby',
    updatedat: 'updatedat',
    updatedby: 'updatedby',
    isactive: 'isactive',
    serviceid: 'serviceid'
  };

  export type PageScalarFieldEnum = (typeof PageScalarFieldEnum)[keyof typeof PageScalarFieldEnum]


  export const ServicecategoryScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    metaid: 'metaid',
    createdat: 'createdat',
    createdby: 'createdby',
    updatedat: 'updatedat',
    updatedby: 'updatedby',
    isactive: 'isactive'
  };

  export type ServicecategoryScalarFieldEnum = (typeof ServicecategoryScalarFieldEnum)[keyof typeof ServicecategoryScalarFieldEnum]


  export const ServiceScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    servicecategoryid: 'servicecategoryid',
    metaid: 'metaid',
    createdat: 'createdat',
    createdby: 'createdby',
    updatedat: 'updatedat',
    updatedby: 'updatedby',
    isactive: 'isactive'
  };

  export type ServiceScalarFieldEnum = (typeof ServiceScalarFieldEnum)[keyof typeof ServiceScalarFieldEnum]


  export const EntranceScalarFieldEnum: {
    id: 'id',
    type: 'type',
    useragent: 'useragent',
    ipaddress: 'ipaddress',
    userid: 'userid',
    createdat: 'createdat'
  };

  export type EntranceScalarFieldEnum = (typeof EntranceScalarFieldEnum)[keyof typeof EntranceScalarFieldEnum]


  export const ApiclientScalarFieldEnum: {
    id: 'id',
    name: 'name',
    key: 'key',
    secret: 'secret',
    type: 'type',
    createdat: 'createdat',
    createdby: 'createdby',
    updatedat: 'updatedat',
    updatedby: 'updatedby',
    isactive: 'isactive'
  };

  export type ApiclientScalarFieldEnum = (typeof ApiclientScalarFieldEnum)[keyof typeof ApiclientScalarFieldEnum]


  export const RefreshtokenScalarFieldEnum: {
    id: 'id',
    userid: 'userid',
    token: 'token',
    createdat: 'createdat',
    updatedat: 'updatedat',
    expiresat: 'expiresat'
  };

  export type RefreshtokenScalarFieldEnum = (typeof RefreshtokenScalarFieldEnum)[keyof typeof RefreshtokenScalarFieldEnum]


  export const RevokedtokenScalarFieldEnum: {
    id: 'id',
    token: 'token',
    date: 'date'
  };

  export type RevokedtokenScalarFieldEnum = (typeof RevokedtokenScalarFieldEnum)[keyof typeof RevokedtokenScalarFieldEnum]


  export const RoleScalarFieldEnum: {
    id: 'id',
    name: 'name',
    createdby: 'createdby',
    createdat: 'createdat',
    updatedby: 'updatedby',
    updatedat: 'updatedat',
    issystemrole: 'issystemrole'
  };

  export type RoleScalarFieldEnum = (typeof RoleScalarFieldEnum)[keyof typeof RoleScalarFieldEnum]


  export const NotificationScalarFieldEnum: {
    id: 'id',
    touserid: 'touserid',
    message: 'message',
    url: 'url',
    createdby: 'createdby',
    createdat: 'createdat',
    readedat: 'readedat'
  };

  export type NotificationScalarFieldEnum = (typeof NotificationScalarFieldEnum)[keyof typeof NotificationScalarFieldEnum]


  export const PermissionScalarFieldEnum: {
    id: 'id',
    name: 'name',
    value: 'value',
    group: 'group',
    description: 'description',
    createdby: 'createdby',
    createdat: 'createdat',
    updatedby: 'updatedby',
    updatedat: 'updatedat'
  };

  export type PermissionScalarFieldEnum = (typeof PermissionScalarFieldEnum)[keyof typeof PermissionScalarFieldEnum]


  export const RolepermissionScalarFieldEnum: {
    id: 'id',
    roleid: 'roleid',
    permissionid: 'permissionid',
    createdat: 'createdat',
    createdby: 'createdby',
    updatedby: 'updatedby',
    updatedat: 'updatedat'
  };

  export type RolepermissionScalarFieldEnum = (typeof RolepermissionScalarFieldEnum)[keyof typeof RolepermissionScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    firstname: 'firstname',
    lastname: 'lastname',
    phone: 'phone',
    email: 'email',
    password: 'password',
    createdby: 'createdby',
    createdat: 'createdat',
    updatedby: 'updatedby',
    updatedat: 'updatedat',
    status: 'status'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const UserpermissionScalarFieldEnum: {
    id: 'id',
    userid: 'userid',
    permissionid: 'permissionid',
    createdby: 'createdby',
    createdat: 'createdat',
    updatedby: 'updatedby',
    updatedat: 'updatedat'
  };

  export type UserpermissionScalarFieldEnum = (typeof UserpermissionScalarFieldEnum)[keyof typeof UserpermissionScalarFieldEnum]


  export const UserroleScalarFieldEnum: {
    id: 'id',
    userid: 'userid',
    roleid: 'roleid',
    createdby: 'createdby',
    createdat: 'createdat',
    updatedby: 'updatedby',
    updatedat: 'updatedat'
  };

  export type UserroleScalarFieldEnum = (typeof UserroleScalarFieldEnum)[keyof typeof UserroleScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    
  /**
   * Deep Input Types
   */


  export type blogcommentWhereInput = {
    AND?: blogcommentWhereInput | blogcommentWhereInput[]
    OR?: blogcommentWhereInput[]
    NOT?: blogcommentWhereInput | blogcommentWhereInput[]
    id?: IntFilter<"blogcomment"> | number
    blogid?: IntFilter<"blogcomment"> | number
    name?: StringFilter<"blogcomment"> | string
    email?: StringFilter<"blogcomment"> | string
    comment?: StringFilter<"blogcomment"> | string
    createdat?: DateTimeFilter<"blogcomment"> | Date | string
    createdby?: IntFilter<"blogcomment"> | number
    updatedat?: DateTimeNullableFilter<"blogcomment"> | Date | string | null
    updatedby?: IntNullableFilter<"blogcomment"> | number | null
    isactive?: IntFilter<"blogcomment"> | number
    blog?: XOR<BlogRelationFilter, blogWhereInput>
  }

  export type blogcommentOrderByWithRelationInput = {
    id?: SortOrder
    blogid?: SortOrder
    name?: SortOrder
    email?: SortOrder
    comment?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    updatedby?: SortOrderInput | SortOrder
    isactive?: SortOrder
    blog?: blogOrderByWithRelationInput
  }

  export type blogcommentWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: blogcommentWhereInput | blogcommentWhereInput[]
    OR?: blogcommentWhereInput[]
    NOT?: blogcommentWhereInput | blogcommentWhereInput[]
    blogid?: IntFilter<"blogcomment"> | number
    name?: StringFilter<"blogcomment"> | string
    email?: StringFilter<"blogcomment"> | string
    comment?: StringFilter<"blogcomment"> | string
    createdat?: DateTimeFilter<"blogcomment"> | Date | string
    createdby?: IntFilter<"blogcomment"> | number
    updatedat?: DateTimeNullableFilter<"blogcomment"> | Date | string | null
    updatedby?: IntNullableFilter<"blogcomment"> | number | null
    isactive?: IntFilter<"blogcomment"> | number
    blog?: XOR<BlogRelationFilter, blogWhereInput>
  }, "id">

  export type blogcommentOrderByWithAggregationInput = {
    id?: SortOrder
    blogid?: SortOrder
    name?: SortOrder
    email?: SortOrder
    comment?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    updatedby?: SortOrderInput | SortOrder
    isactive?: SortOrder
    _count?: blogcommentCountOrderByAggregateInput
    _avg?: blogcommentAvgOrderByAggregateInput
    _max?: blogcommentMaxOrderByAggregateInput
    _min?: blogcommentMinOrderByAggregateInput
    _sum?: blogcommentSumOrderByAggregateInput
  }

  export type blogcommentScalarWhereWithAggregatesInput = {
    AND?: blogcommentScalarWhereWithAggregatesInput | blogcommentScalarWhereWithAggregatesInput[]
    OR?: blogcommentScalarWhereWithAggregatesInput[]
    NOT?: blogcommentScalarWhereWithAggregatesInput | blogcommentScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"blogcomment"> | number
    blogid?: IntWithAggregatesFilter<"blogcomment"> | number
    name?: StringWithAggregatesFilter<"blogcomment"> | string
    email?: StringWithAggregatesFilter<"blogcomment"> | string
    comment?: StringWithAggregatesFilter<"blogcomment"> | string
    createdat?: DateTimeWithAggregatesFilter<"blogcomment"> | Date | string
    createdby?: IntWithAggregatesFilter<"blogcomment"> | number
    updatedat?: DateTimeNullableWithAggregatesFilter<"blogcomment"> | Date | string | null
    updatedby?: IntNullableWithAggregatesFilter<"blogcomment"> | number | null
    isactive?: IntWithAggregatesFilter<"blogcomment"> | number
  }

  export type blogWhereInput = {
    AND?: blogWhereInput | blogWhereInput[]
    OR?: blogWhereInput[]
    NOT?: blogWhereInput | blogWhereInput[]
    id?: IntFilter<"blog"> | number
    title?: StringFilter<"blog"> | string
    content?: StringFilter<"blog"> | string
    slug?: StringFilter<"blog"> | string
    featuredimage?: StringFilter<"blog"> | string
    blogcategoryid?: IntFilter<"blog"> | number
    metaid?: IntFilter<"blog"> | number
    createdat?: DateTimeFilter<"blog"> | Date | string
    createdby?: IntFilter<"blog"> | number
    updatedat?: DateTimeNullableFilter<"blog"> | Date | string | null
    updatedby?: IntNullableFilter<"blog"> | number | null
    isactive?: IntFilter<"blog"> | number
    blogcategory?: XOR<BlogcategoryRelationFilter, blogcategoryWhereInput>
    blogcomments?: BlogcommentListRelationFilter
  }

  export type blogOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    slug?: SortOrder
    featuredimage?: SortOrder
    blogcategoryid?: SortOrder
    metaid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    updatedby?: SortOrderInput | SortOrder
    isactive?: SortOrder
    blogcategory?: blogcategoryOrderByWithRelationInput
    blogcomments?: blogcommentOrderByRelationAggregateInput
  }

  export type blogWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: blogWhereInput | blogWhereInput[]
    OR?: blogWhereInput[]
    NOT?: blogWhereInput | blogWhereInput[]
    title?: StringFilter<"blog"> | string
    content?: StringFilter<"blog"> | string
    slug?: StringFilter<"blog"> | string
    featuredimage?: StringFilter<"blog"> | string
    blogcategoryid?: IntFilter<"blog"> | number
    metaid?: IntFilter<"blog"> | number
    createdat?: DateTimeFilter<"blog"> | Date | string
    createdby?: IntFilter<"blog"> | number
    updatedat?: DateTimeNullableFilter<"blog"> | Date | string | null
    updatedby?: IntNullableFilter<"blog"> | number | null
    isactive?: IntFilter<"blog"> | number
    blogcategory?: XOR<BlogcategoryRelationFilter, blogcategoryWhereInput>
    blogcomments?: BlogcommentListRelationFilter
  }, "id">

  export type blogOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    slug?: SortOrder
    featuredimage?: SortOrder
    blogcategoryid?: SortOrder
    metaid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    updatedby?: SortOrderInput | SortOrder
    isactive?: SortOrder
    _count?: blogCountOrderByAggregateInput
    _avg?: blogAvgOrderByAggregateInput
    _max?: blogMaxOrderByAggregateInput
    _min?: blogMinOrderByAggregateInput
    _sum?: blogSumOrderByAggregateInput
  }

  export type blogScalarWhereWithAggregatesInput = {
    AND?: blogScalarWhereWithAggregatesInput | blogScalarWhereWithAggregatesInput[]
    OR?: blogScalarWhereWithAggregatesInput[]
    NOT?: blogScalarWhereWithAggregatesInput | blogScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"blog"> | number
    title?: StringWithAggregatesFilter<"blog"> | string
    content?: StringWithAggregatesFilter<"blog"> | string
    slug?: StringWithAggregatesFilter<"blog"> | string
    featuredimage?: StringWithAggregatesFilter<"blog"> | string
    blogcategoryid?: IntWithAggregatesFilter<"blog"> | number
    metaid?: IntWithAggregatesFilter<"blog"> | number
    createdat?: DateTimeWithAggregatesFilter<"blog"> | Date | string
    createdby?: IntWithAggregatesFilter<"blog"> | number
    updatedat?: DateTimeNullableWithAggregatesFilter<"blog"> | Date | string | null
    updatedby?: IntNullableWithAggregatesFilter<"blog"> | number | null
    isactive?: IntWithAggregatesFilter<"blog"> | number
  }

  export type blogcategoryWhereInput = {
    AND?: blogcategoryWhereInput | blogcategoryWhereInput[]
    OR?: blogcategoryWhereInput[]
    NOT?: blogcategoryWhereInput | blogcategoryWhereInput[]
    id?: IntFilter<"blogcategory"> | number
    name?: StringFilter<"blogcategory"> | string
    description?: StringFilter<"blogcategory"> | string
    featuredimage?: StringFilter<"blogcategory"> | string
    metaid?: IntFilter<"blogcategory"> | number
    createdat?: DateTimeFilter<"blogcategory"> | Date | string
    createdby?: IntFilter<"blogcategory"> | number
    updatedat?: DateTimeNullableFilter<"blogcategory"> | Date | string | null
    updatedby?: IntNullableFilter<"blogcategory"> | number | null
    isactive?: IntFilter<"blogcategory"> | number
    blogs?: BlogListRelationFilter
    blogcategorymeta?: XOR<MetaNullableRelationFilter, metaWhereInput> | null
  }

  export type blogcategoryOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    featuredimage?: SortOrder
    metaid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    updatedby?: SortOrderInput | SortOrder
    isactive?: SortOrder
    blogs?: blogOrderByRelationAggregateInput
    blogcategorymeta?: metaOrderByWithRelationInput
  }

  export type blogcategoryWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: blogcategoryWhereInput | blogcategoryWhereInput[]
    OR?: blogcategoryWhereInput[]
    NOT?: blogcategoryWhereInput | blogcategoryWhereInput[]
    name?: StringFilter<"blogcategory"> | string
    description?: StringFilter<"blogcategory"> | string
    featuredimage?: StringFilter<"blogcategory"> | string
    metaid?: IntFilter<"blogcategory"> | number
    createdat?: DateTimeFilter<"blogcategory"> | Date | string
    createdby?: IntFilter<"blogcategory"> | number
    updatedat?: DateTimeNullableFilter<"blogcategory"> | Date | string | null
    updatedby?: IntNullableFilter<"blogcategory"> | number | null
    isactive?: IntFilter<"blogcategory"> | number
    blogs?: BlogListRelationFilter
    blogcategorymeta?: XOR<MetaNullableRelationFilter, metaWhereInput> | null
  }, "id">

  export type blogcategoryOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    featuredimage?: SortOrder
    metaid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    updatedby?: SortOrderInput | SortOrder
    isactive?: SortOrder
    _count?: blogcategoryCountOrderByAggregateInput
    _avg?: blogcategoryAvgOrderByAggregateInput
    _max?: blogcategoryMaxOrderByAggregateInput
    _min?: blogcategoryMinOrderByAggregateInput
    _sum?: blogcategorySumOrderByAggregateInput
  }

  export type blogcategoryScalarWhereWithAggregatesInput = {
    AND?: blogcategoryScalarWhereWithAggregatesInput | blogcategoryScalarWhereWithAggregatesInput[]
    OR?: blogcategoryScalarWhereWithAggregatesInput[]
    NOT?: blogcategoryScalarWhereWithAggregatesInput | blogcategoryScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"blogcategory"> | number
    name?: StringWithAggregatesFilter<"blogcategory"> | string
    description?: StringWithAggregatesFilter<"blogcategory"> | string
    featuredimage?: StringWithAggregatesFilter<"blogcategory"> | string
    metaid?: IntWithAggregatesFilter<"blogcategory"> | number
    createdat?: DateTimeWithAggregatesFilter<"blogcategory"> | Date | string
    createdby?: IntWithAggregatesFilter<"blogcategory"> | number
    updatedat?: DateTimeNullableWithAggregatesFilter<"blogcategory"> | Date | string | null
    updatedby?: IntNullableWithAggregatesFilter<"blogcategory"> | number | null
    isactive?: IntWithAggregatesFilter<"blogcategory"> | number
  }

  export type metaWhereInput = {
    AND?: metaWhereInput | metaWhereInput[]
    OR?: metaWhereInput[]
    NOT?: metaWhereInput | metaWhereInput[]
    id?: IntFilter<"meta"> | number
    metatitle?: StringFilter<"meta"> | string
    metadescription?: StringFilter<"meta"> | string
    metakeywords?: StringFilter<"meta"> | string
    metarobots?: StringFilter<"meta"> | string
    metahttpequiv?: StringFilter<"meta"> | string
    metalanguage?: StringFilter<"meta"> | string
    metaauthor?: StringFilter<"meta"> | string
    metarevisit?: StringFilter<"meta"> | string
    createdat?: DateTimeFilter<"meta"> | Date | string
    createdby?: IntFilter<"meta"> | number
    updatedat?: DateTimeNullableFilter<"meta"> | Date | string | null
    updatedby?: IntNullableFilter<"meta"> | number | null
    pages?: PageListRelationFilter
    services?: ServiceListRelationFilter
    servicecategory?: ServicecategoryListRelationFilter
    blogcategory?: BlogcategoryListRelationFilter
  }

  export type metaOrderByWithRelationInput = {
    id?: SortOrder
    metatitle?: SortOrder
    metadescription?: SortOrder
    metakeywords?: SortOrder
    metarobots?: SortOrder
    metahttpequiv?: SortOrder
    metalanguage?: SortOrder
    metaauthor?: SortOrder
    metarevisit?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    updatedby?: SortOrderInput | SortOrder
    pages?: pageOrderByRelationAggregateInput
    services?: serviceOrderByRelationAggregateInput
    servicecategory?: servicecategoryOrderByRelationAggregateInput
    blogcategory?: blogcategoryOrderByRelationAggregateInput
  }

  export type metaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: metaWhereInput | metaWhereInput[]
    OR?: metaWhereInput[]
    NOT?: metaWhereInput | metaWhereInput[]
    metatitle?: StringFilter<"meta"> | string
    metadescription?: StringFilter<"meta"> | string
    metakeywords?: StringFilter<"meta"> | string
    metarobots?: StringFilter<"meta"> | string
    metahttpequiv?: StringFilter<"meta"> | string
    metalanguage?: StringFilter<"meta"> | string
    metaauthor?: StringFilter<"meta"> | string
    metarevisit?: StringFilter<"meta"> | string
    createdat?: DateTimeFilter<"meta"> | Date | string
    createdby?: IntFilter<"meta"> | number
    updatedat?: DateTimeNullableFilter<"meta"> | Date | string | null
    updatedby?: IntNullableFilter<"meta"> | number | null
    pages?: PageListRelationFilter
    services?: ServiceListRelationFilter
    servicecategory?: ServicecategoryListRelationFilter
    blogcategory?: BlogcategoryListRelationFilter
  }, "id">

  export type metaOrderByWithAggregationInput = {
    id?: SortOrder
    metatitle?: SortOrder
    metadescription?: SortOrder
    metakeywords?: SortOrder
    metarobots?: SortOrder
    metahttpequiv?: SortOrder
    metalanguage?: SortOrder
    metaauthor?: SortOrder
    metarevisit?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    updatedby?: SortOrderInput | SortOrder
    _count?: metaCountOrderByAggregateInput
    _avg?: metaAvgOrderByAggregateInput
    _max?: metaMaxOrderByAggregateInput
    _min?: metaMinOrderByAggregateInput
    _sum?: metaSumOrderByAggregateInput
  }

  export type metaScalarWhereWithAggregatesInput = {
    AND?: metaScalarWhereWithAggregatesInput | metaScalarWhereWithAggregatesInput[]
    OR?: metaScalarWhereWithAggregatesInput[]
    NOT?: metaScalarWhereWithAggregatesInput | metaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"meta"> | number
    metatitle?: StringWithAggregatesFilter<"meta"> | string
    metadescription?: StringWithAggregatesFilter<"meta"> | string
    metakeywords?: StringWithAggregatesFilter<"meta"> | string
    metarobots?: StringWithAggregatesFilter<"meta"> | string
    metahttpequiv?: StringWithAggregatesFilter<"meta"> | string
    metalanguage?: StringWithAggregatesFilter<"meta"> | string
    metaauthor?: StringWithAggregatesFilter<"meta"> | string
    metarevisit?: StringWithAggregatesFilter<"meta"> | string
    createdat?: DateTimeWithAggregatesFilter<"meta"> | Date | string
    createdby?: IntWithAggregatesFilter<"meta"> | number
    updatedat?: DateTimeNullableWithAggregatesFilter<"meta"> | Date | string | null
    updatedby?: IntNullableWithAggregatesFilter<"meta"> | number | null
  }

  export type offerWhereInput = {
    AND?: offerWhereInput | offerWhereInput[]
    OR?: offerWhereInput[]
    NOT?: offerWhereInput | offerWhereInput[]
    id?: IntFilter<"offer"> | number
    name?: StringFilter<"offer"> | string
    description?: StringFilter<"offer"> | string
    saleprice?: FloatFilter<"offer"> | number
    salepricecurrency?: StringFilter<"offer"> | string
    salepriceperiod?: StringFilter<"offer"> | string
    discountprice?: FloatFilter<"offer"> | number
    discountamount?: StringFilter<"offer"> | string
    createdat?: DateTimeFilter<"offer"> | Date | string
    createdby?: IntFilter<"offer"> | number
    updatedat?: DateTimeNullableFilter<"offer"> | Date | string | null
    updatedby?: IntNullableFilter<"offer"> | number | null
    isactive?: IntFilter<"offer"> | number
    serviceid?: IntFilter<"offer"> | number
    service?: XOR<ServiceNullableRelationFilter, serviceWhereInput> | null
    useroffers?: XOR<UserNullableRelationFilter, userWhereInput> | null
  }

  export type offerOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    saleprice?: SortOrder
    salepricecurrency?: SortOrder
    salepriceperiod?: SortOrder
    discountprice?: SortOrder
    discountamount?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    updatedby?: SortOrderInput | SortOrder
    isactive?: SortOrder
    serviceid?: SortOrder
    service?: serviceOrderByWithRelationInput
    useroffers?: userOrderByWithRelationInput
  }

  export type offerWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: offerWhereInput | offerWhereInput[]
    OR?: offerWhereInput[]
    NOT?: offerWhereInput | offerWhereInput[]
    name?: StringFilter<"offer"> | string
    description?: StringFilter<"offer"> | string
    saleprice?: FloatFilter<"offer"> | number
    salepricecurrency?: StringFilter<"offer"> | string
    salepriceperiod?: StringFilter<"offer"> | string
    discountprice?: FloatFilter<"offer"> | number
    discountamount?: StringFilter<"offer"> | string
    createdat?: DateTimeFilter<"offer"> | Date | string
    createdby?: IntFilter<"offer"> | number
    updatedat?: DateTimeNullableFilter<"offer"> | Date | string | null
    updatedby?: IntNullableFilter<"offer"> | number | null
    isactive?: IntFilter<"offer"> | number
    serviceid?: IntFilter<"offer"> | number
    service?: XOR<ServiceNullableRelationFilter, serviceWhereInput> | null
    useroffers?: XOR<UserNullableRelationFilter, userWhereInput> | null
  }, "id">

  export type offerOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    saleprice?: SortOrder
    salepricecurrency?: SortOrder
    salepriceperiod?: SortOrder
    discountprice?: SortOrder
    discountamount?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    updatedby?: SortOrderInput | SortOrder
    isactive?: SortOrder
    serviceid?: SortOrder
    _count?: offerCountOrderByAggregateInput
    _avg?: offerAvgOrderByAggregateInput
    _max?: offerMaxOrderByAggregateInput
    _min?: offerMinOrderByAggregateInput
    _sum?: offerSumOrderByAggregateInput
  }

  export type offerScalarWhereWithAggregatesInput = {
    AND?: offerScalarWhereWithAggregatesInput | offerScalarWhereWithAggregatesInput[]
    OR?: offerScalarWhereWithAggregatesInput[]
    NOT?: offerScalarWhereWithAggregatesInput | offerScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"offer"> | number
    name?: StringWithAggregatesFilter<"offer"> | string
    description?: StringWithAggregatesFilter<"offer"> | string
    saleprice?: FloatWithAggregatesFilter<"offer"> | number
    salepricecurrency?: StringWithAggregatesFilter<"offer"> | string
    salepriceperiod?: StringWithAggregatesFilter<"offer"> | string
    discountprice?: FloatWithAggregatesFilter<"offer"> | number
    discountamount?: StringWithAggregatesFilter<"offer"> | string
    createdat?: DateTimeWithAggregatesFilter<"offer"> | Date | string
    createdby?: IntWithAggregatesFilter<"offer"> | number
    updatedat?: DateTimeNullableWithAggregatesFilter<"offer"> | Date | string | null
    updatedby?: IntNullableWithAggregatesFilter<"offer"> | number | null
    isactive?: IntWithAggregatesFilter<"offer"> | number
    serviceid?: IntWithAggregatesFilter<"offer"> | number
  }

  export type newsletterWhereInput = {
    AND?: newsletterWhereInput | newsletterWhereInput[]
    OR?: newsletterWhereInput[]
    NOT?: newsletterWhereInput | newsletterWhereInput[]
    id?: IntFilter<"newsletter"> | number
    email?: StringFilter<"newsletter"> | string
    createdat?: DateTimeFilter<"newsletter"> | Date | string
    createdby?: IntFilter<"newsletter"> | number
    updatedat?: DateTimeNullableFilter<"newsletter"> | Date | string | null
    updatedby?: IntNullableFilter<"newsletter"> | number | null
  }

  export type newsletterOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    updatedby?: SortOrderInput | SortOrder
  }

  export type newsletterWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: newsletterWhereInput | newsletterWhereInput[]
    OR?: newsletterWhereInput[]
    NOT?: newsletterWhereInput | newsletterWhereInput[]
    email?: StringFilter<"newsletter"> | string
    createdat?: DateTimeFilter<"newsletter"> | Date | string
    createdby?: IntFilter<"newsletter"> | number
    updatedat?: DateTimeNullableFilter<"newsletter"> | Date | string | null
    updatedby?: IntNullableFilter<"newsletter"> | number | null
  }, "id">

  export type newsletterOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    updatedby?: SortOrderInput | SortOrder
    _count?: newsletterCountOrderByAggregateInput
    _avg?: newsletterAvgOrderByAggregateInput
    _max?: newsletterMaxOrderByAggregateInput
    _min?: newsletterMinOrderByAggregateInput
    _sum?: newsletterSumOrderByAggregateInput
  }

  export type newsletterScalarWhereWithAggregatesInput = {
    AND?: newsletterScalarWhereWithAggregatesInput | newsletterScalarWhereWithAggregatesInput[]
    OR?: newsletterScalarWhereWithAggregatesInput[]
    NOT?: newsletterScalarWhereWithAggregatesInput | newsletterScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"newsletter"> | number
    email?: StringWithAggregatesFilter<"newsletter"> | string
    createdat?: DateTimeWithAggregatesFilter<"newsletter"> | Date | string
    createdby?: IntWithAggregatesFilter<"newsletter"> | number
    updatedat?: DateTimeNullableWithAggregatesFilter<"newsletter"> | Date | string | null
    updatedby?: IntNullableWithAggregatesFilter<"newsletter"> | number | null
  }

  export type contactWhereInput = {
    AND?: contactWhereInput | contactWhereInput[]
    OR?: contactWhereInput[]
    NOT?: contactWhereInput | contactWhereInput[]
    id?: IntFilter<"contact"> | number
    name?: StringFilter<"contact"> | string
    email?: StringFilter<"contact"> | string
    phone?: StringFilter<"contact"> | string
    message?: StringFilter<"contact"> | string
    attachment?: StringNullableFilter<"contact"> | string | null
    createdat?: DateTimeFilter<"contact"> | Date | string
    createdby?: IntFilter<"contact"> | number
    updatedat?: DateTimeNullableFilter<"contact"> | Date | string | null
    updatedby?: IntNullableFilter<"contact"> | number | null
    isclosed?: IntFilter<"contact"> | number
    servicecategoryid?: IntFilter<"contact"> | number
    serviceid?: IntFilter<"contact"> | number
    servicecategory?: XOR<ServicecategoryNullableRelationFilter, servicecategoryWhereInput> | null
    service?: XOR<ServiceNullableRelationFilter, serviceWhereInput> | null
    usercontacts?: XOR<UserNullableRelationFilter, userWhereInput> | null
  }

  export type contactOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    message?: SortOrder
    attachment?: SortOrderInput | SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    updatedby?: SortOrderInput | SortOrder
    isclosed?: SortOrder
    servicecategoryid?: SortOrder
    serviceid?: SortOrder
    servicecategory?: servicecategoryOrderByWithRelationInput
    service?: serviceOrderByWithRelationInput
    usercontacts?: userOrderByWithRelationInput
  }

  export type contactWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: contactWhereInput | contactWhereInput[]
    OR?: contactWhereInput[]
    NOT?: contactWhereInput | contactWhereInput[]
    name?: StringFilter<"contact"> | string
    email?: StringFilter<"contact"> | string
    phone?: StringFilter<"contact"> | string
    message?: StringFilter<"contact"> | string
    attachment?: StringNullableFilter<"contact"> | string | null
    createdat?: DateTimeFilter<"contact"> | Date | string
    createdby?: IntFilter<"contact"> | number
    updatedat?: DateTimeNullableFilter<"contact"> | Date | string | null
    updatedby?: IntNullableFilter<"contact"> | number | null
    isclosed?: IntFilter<"contact"> | number
    servicecategoryid?: IntFilter<"contact"> | number
    serviceid?: IntFilter<"contact"> | number
    servicecategory?: XOR<ServicecategoryNullableRelationFilter, servicecategoryWhereInput> | null
    service?: XOR<ServiceNullableRelationFilter, serviceWhereInput> | null
    usercontacts?: XOR<UserNullableRelationFilter, userWhereInput> | null
  }, "id">

  export type contactOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    message?: SortOrder
    attachment?: SortOrderInput | SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    updatedby?: SortOrderInput | SortOrder
    isclosed?: SortOrder
    servicecategoryid?: SortOrder
    serviceid?: SortOrder
    _count?: contactCountOrderByAggregateInput
    _avg?: contactAvgOrderByAggregateInput
    _max?: contactMaxOrderByAggregateInput
    _min?: contactMinOrderByAggregateInput
    _sum?: contactSumOrderByAggregateInput
  }

  export type contactScalarWhereWithAggregatesInput = {
    AND?: contactScalarWhereWithAggregatesInput | contactScalarWhereWithAggregatesInput[]
    OR?: contactScalarWhereWithAggregatesInput[]
    NOT?: contactScalarWhereWithAggregatesInput | contactScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"contact"> | number
    name?: StringWithAggregatesFilter<"contact"> | string
    email?: StringWithAggregatesFilter<"contact"> | string
    phone?: StringWithAggregatesFilter<"contact"> | string
    message?: StringWithAggregatesFilter<"contact"> | string
    attachment?: StringNullableWithAggregatesFilter<"contact"> | string | null
    createdat?: DateTimeWithAggregatesFilter<"contact"> | Date | string
    createdby?: IntWithAggregatesFilter<"contact"> | number
    updatedat?: DateTimeNullableWithAggregatesFilter<"contact"> | Date | string | null
    updatedby?: IntNullableWithAggregatesFilter<"contact"> | number | null
    isclosed?: IntWithAggregatesFilter<"contact"> | number
    servicecategoryid?: IntWithAggregatesFilter<"contact"> | number
    serviceid?: IntWithAggregatesFilter<"contact"> | number
  }

  export type pageWhereInput = {
    AND?: pageWhereInput | pageWhereInput[]
    OR?: pageWhereInput[]
    NOT?: pageWhereInput | pageWhereInput[]
    id?: IntFilter<"page"> | number
    metaid?: IntFilter<"page"> | number
    name?: StringFilter<"page"> | string
    content?: StringFilter<"page"> | string
    slug?: StringFilter<"page"> | string
    createdat?: DateTimeFilter<"page"> | Date | string
    createdby?: IntFilter<"page"> | number
    updatedat?: DateTimeNullableFilter<"page"> | Date | string | null
    updatedby?: IntNullableFilter<"page"> | number | null
    isactive?: IntFilter<"page"> | number
    serviceid?: IntFilter<"page"> | number
    service?: XOR<ServiceNullableRelationFilter, serviceWhereInput> | null
    userpages?: XOR<UserNullableRelationFilter, userWhereInput> | null
    metatags?: XOR<MetaNullableRelationFilter, metaWhereInput> | null
  }

  export type pageOrderByWithRelationInput = {
    id?: SortOrder
    metaid?: SortOrder
    name?: SortOrder
    content?: SortOrder
    slug?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    updatedby?: SortOrderInput | SortOrder
    isactive?: SortOrder
    serviceid?: SortOrder
    service?: serviceOrderByWithRelationInput
    userpages?: userOrderByWithRelationInput
    metatags?: metaOrderByWithRelationInput
  }

  export type pageWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: pageWhereInput | pageWhereInput[]
    OR?: pageWhereInput[]
    NOT?: pageWhereInput | pageWhereInput[]
    metaid?: IntFilter<"page"> | number
    name?: StringFilter<"page"> | string
    content?: StringFilter<"page"> | string
    slug?: StringFilter<"page"> | string
    createdat?: DateTimeFilter<"page"> | Date | string
    createdby?: IntFilter<"page"> | number
    updatedat?: DateTimeNullableFilter<"page"> | Date | string | null
    updatedby?: IntNullableFilter<"page"> | number | null
    isactive?: IntFilter<"page"> | number
    serviceid?: IntFilter<"page"> | number
    service?: XOR<ServiceNullableRelationFilter, serviceWhereInput> | null
    userpages?: XOR<UserNullableRelationFilter, userWhereInput> | null
    metatags?: XOR<MetaNullableRelationFilter, metaWhereInput> | null
  }, "id">

  export type pageOrderByWithAggregationInput = {
    id?: SortOrder
    metaid?: SortOrder
    name?: SortOrder
    content?: SortOrder
    slug?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    updatedby?: SortOrderInput | SortOrder
    isactive?: SortOrder
    serviceid?: SortOrder
    _count?: pageCountOrderByAggregateInput
    _avg?: pageAvgOrderByAggregateInput
    _max?: pageMaxOrderByAggregateInput
    _min?: pageMinOrderByAggregateInput
    _sum?: pageSumOrderByAggregateInput
  }

  export type pageScalarWhereWithAggregatesInput = {
    AND?: pageScalarWhereWithAggregatesInput | pageScalarWhereWithAggregatesInput[]
    OR?: pageScalarWhereWithAggregatesInput[]
    NOT?: pageScalarWhereWithAggregatesInput | pageScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"page"> | number
    metaid?: IntWithAggregatesFilter<"page"> | number
    name?: StringWithAggregatesFilter<"page"> | string
    content?: StringWithAggregatesFilter<"page"> | string
    slug?: StringWithAggregatesFilter<"page"> | string
    createdat?: DateTimeWithAggregatesFilter<"page"> | Date | string
    createdby?: IntWithAggregatesFilter<"page"> | number
    updatedat?: DateTimeNullableWithAggregatesFilter<"page"> | Date | string | null
    updatedby?: IntNullableWithAggregatesFilter<"page"> | number | null
    isactive?: IntWithAggregatesFilter<"page"> | number
    serviceid?: IntWithAggregatesFilter<"page"> | number
  }

  export type servicecategoryWhereInput = {
    AND?: servicecategoryWhereInput | servicecategoryWhereInput[]
    OR?: servicecategoryWhereInput[]
    NOT?: servicecategoryWhereInput | servicecategoryWhereInput[]
    id?: IntFilter<"servicecategory"> | number
    name?: StringFilter<"servicecategory"> | string
    description?: StringFilter<"servicecategory"> | string
    metaid?: IntFilter<"servicecategory"> | number
    createdat?: DateTimeFilter<"servicecategory"> | Date | string
    createdby?: IntFilter<"servicecategory"> | number
    updatedat?: DateTimeNullableFilter<"servicecategory"> | Date | string | null
    updatedby?: IntNullableFilter<"servicecategory"> | number | null
    isactive?: IntFilter<"servicecategory"> | number
    services?: ServiceListRelationFilter
    contacts?: ContactListRelationFilter
    userservicecategory?: XOR<UserNullableRelationFilter, userWhereInput> | null
    metatags?: XOR<MetaNullableRelationFilter, metaWhereInput> | null
  }

  export type servicecategoryOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    metaid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    updatedby?: SortOrderInput | SortOrder
    isactive?: SortOrder
    services?: serviceOrderByRelationAggregateInput
    contacts?: contactOrderByRelationAggregateInput
    userservicecategory?: userOrderByWithRelationInput
    metatags?: metaOrderByWithRelationInput
  }

  export type servicecategoryWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: servicecategoryWhereInput | servicecategoryWhereInput[]
    OR?: servicecategoryWhereInput[]
    NOT?: servicecategoryWhereInput | servicecategoryWhereInput[]
    name?: StringFilter<"servicecategory"> | string
    description?: StringFilter<"servicecategory"> | string
    metaid?: IntFilter<"servicecategory"> | number
    createdat?: DateTimeFilter<"servicecategory"> | Date | string
    createdby?: IntFilter<"servicecategory"> | number
    updatedat?: DateTimeNullableFilter<"servicecategory"> | Date | string | null
    updatedby?: IntNullableFilter<"servicecategory"> | number | null
    isactive?: IntFilter<"servicecategory"> | number
    services?: ServiceListRelationFilter
    contacts?: ContactListRelationFilter
    userservicecategory?: XOR<UserNullableRelationFilter, userWhereInput> | null
    metatags?: XOR<MetaNullableRelationFilter, metaWhereInput> | null
  }, "id">

  export type servicecategoryOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    metaid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    updatedby?: SortOrderInput | SortOrder
    isactive?: SortOrder
    _count?: servicecategoryCountOrderByAggregateInput
    _avg?: servicecategoryAvgOrderByAggregateInput
    _max?: servicecategoryMaxOrderByAggregateInput
    _min?: servicecategoryMinOrderByAggregateInput
    _sum?: servicecategorySumOrderByAggregateInput
  }

  export type servicecategoryScalarWhereWithAggregatesInput = {
    AND?: servicecategoryScalarWhereWithAggregatesInput | servicecategoryScalarWhereWithAggregatesInput[]
    OR?: servicecategoryScalarWhereWithAggregatesInput[]
    NOT?: servicecategoryScalarWhereWithAggregatesInput | servicecategoryScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"servicecategory"> | number
    name?: StringWithAggregatesFilter<"servicecategory"> | string
    description?: StringWithAggregatesFilter<"servicecategory"> | string
    metaid?: IntWithAggregatesFilter<"servicecategory"> | number
    createdat?: DateTimeWithAggregatesFilter<"servicecategory"> | Date | string
    createdby?: IntWithAggregatesFilter<"servicecategory"> | number
    updatedat?: DateTimeNullableWithAggregatesFilter<"servicecategory"> | Date | string | null
    updatedby?: IntNullableWithAggregatesFilter<"servicecategory"> | number | null
    isactive?: IntWithAggregatesFilter<"servicecategory"> | number
  }

  export type serviceWhereInput = {
    AND?: serviceWhereInput | serviceWhereInput[]
    OR?: serviceWhereInput[]
    NOT?: serviceWhereInput | serviceWhereInput[]
    id?: IntFilter<"service"> | number
    name?: StringFilter<"service"> | string
    description?: JsonFilter<"service">
    servicecategoryid?: IntFilter<"service"> | number
    metaid?: IntFilter<"service"> | number
    createdat?: DateTimeFilter<"service"> | Date | string
    createdby?: IntFilter<"service"> | number
    updatedat?: DateTimeNullableFilter<"service"> | Date | string | null
    updatedby?: IntNullableFilter<"service"> | number | null
    isactive?: IntFilter<"service"> | number
    servicecategory?: XOR<ServicecategoryRelationFilter, servicecategoryWhereInput>
    pages?: PageListRelationFilter
    contacts?: ContactListRelationFilter
    offers?: OfferListRelationFilter
    userservice?: XOR<UserNullableRelationFilter, userWhereInput> | null
    metatags?: XOR<MetaNullableRelationFilter, metaWhereInput> | null
  }

  export type serviceOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    servicecategoryid?: SortOrder
    metaid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    updatedby?: SortOrderInput | SortOrder
    isactive?: SortOrder
    servicecategory?: servicecategoryOrderByWithRelationInput
    pages?: pageOrderByRelationAggregateInput
    contacts?: contactOrderByRelationAggregateInput
    offers?: offerOrderByRelationAggregateInput
    userservice?: userOrderByWithRelationInput
    metatags?: metaOrderByWithRelationInput
  }

  export type serviceWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: serviceWhereInput | serviceWhereInput[]
    OR?: serviceWhereInput[]
    NOT?: serviceWhereInput | serviceWhereInput[]
    name?: StringFilter<"service"> | string
    description?: JsonFilter<"service">
    servicecategoryid?: IntFilter<"service"> | number
    metaid?: IntFilter<"service"> | number
    createdat?: DateTimeFilter<"service"> | Date | string
    createdby?: IntFilter<"service"> | number
    updatedat?: DateTimeNullableFilter<"service"> | Date | string | null
    updatedby?: IntNullableFilter<"service"> | number | null
    isactive?: IntFilter<"service"> | number
    servicecategory?: XOR<ServicecategoryRelationFilter, servicecategoryWhereInput>
    pages?: PageListRelationFilter
    contacts?: ContactListRelationFilter
    offers?: OfferListRelationFilter
    userservice?: XOR<UserNullableRelationFilter, userWhereInput> | null
    metatags?: XOR<MetaNullableRelationFilter, metaWhereInput> | null
  }, "id">

  export type serviceOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    servicecategoryid?: SortOrder
    metaid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    updatedby?: SortOrderInput | SortOrder
    isactive?: SortOrder
    _count?: serviceCountOrderByAggregateInput
    _avg?: serviceAvgOrderByAggregateInput
    _max?: serviceMaxOrderByAggregateInput
    _min?: serviceMinOrderByAggregateInput
    _sum?: serviceSumOrderByAggregateInput
  }

  export type serviceScalarWhereWithAggregatesInput = {
    AND?: serviceScalarWhereWithAggregatesInput | serviceScalarWhereWithAggregatesInput[]
    OR?: serviceScalarWhereWithAggregatesInput[]
    NOT?: serviceScalarWhereWithAggregatesInput | serviceScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"service"> | number
    name?: StringWithAggregatesFilter<"service"> | string
    description?: JsonWithAggregatesFilter<"service">
    servicecategoryid?: IntWithAggregatesFilter<"service"> | number
    metaid?: IntWithAggregatesFilter<"service"> | number
    createdat?: DateTimeWithAggregatesFilter<"service"> | Date | string
    createdby?: IntWithAggregatesFilter<"service"> | number
    updatedat?: DateTimeNullableWithAggregatesFilter<"service"> | Date | string | null
    updatedby?: IntNullableWithAggregatesFilter<"service"> | number | null
    isactive?: IntWithAggregatesFilter<"service"> | number
  }

  export type entranceWhereInput = {
    AND?: entranceWhereInput | entranceWhereInput[]
    OR?: entranceWhereInput[]
    NOT?: entranceWhereInput | entranceWhereInput[]
    id?: IntFilter<"entrance"> | number
    type?: IntFilter<"entrance"> | number
    useragent?: StringFilter<"entrance"> | string
    ipaddress?: StringFilter<"entrance"> | string
    userid?: IntFilter<"entrance"> | number
    createdat?: DateTimeFilter<"entrance"> | Date | string
  }

  export type entranceOrderByWithRelationInput = {
    id?: SortOrder
    type?: SortOrder
    useragent?: SortOrder
    ipaddress?: SortOrder
    userid?: SortOrder
    createdat?: SortOrder
  }

  export type entranceWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: entranceWhereInput | entranceWhereInput[]
    OR?: entranceWhereInput[]
    NOT?: entranceWhereInput | entranceWhereInput[]
    type?: IntFilter<"entrance"> | number
    useragent?: StringFilter<"entrance"> | string
    ipaddress?: StringFilter<"entrance"> | string
    userid?: IntFilter<"entrance"> | number
    createdat?: DateTimeFilter<"entrance"> | Date | string
  }, "id">

  export type entranceOrderByWithAggregationInput = {
    id?: SortOrder
    type?: SortOrder
    useragent?: SortOrder
    ipaddress?: SortOrder
    userid?: SortOrder
    createdat?: SortOrder
    _count?: entranceCountOrderByAggregateInput
    _avg?: entranceAvgOrderByAggregateInput
    _max?: entranceMaxOrderByAggregateInput
    _min?: entranceMinOrderByAggregateInput
    _sum?: entranceSumOrderByAggregateInput
  }

  export type entranceScalarWhereWithAggregatesInput = {
    AND?: entranceScalarWhereWithAggregatesInput | entranceScalarWhereWithAggregatesInput[]
    OR?: entranceScalarWhereWithAggregatesInput[]
    NOT?: entranceScalarWhereWithAggregatesInput | entranceScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"entrance"> | number
    type?: IntWithAggregatesFilter<"entrance"> | number
    useragent?: StringWithAggregatesFilter<"entrance"> | string
    ipaddress?: StringWithAggregatesFilter<"entrance"> | string
    userid?: IntWithAggregatesFilter<"entrance"> | number
    createdat?: DateTimeWithAggregatesFilter<"entrance"> | Date | string
  }

  export type apiclientWhereInput = {
    AND?: apiclientWhereInput | apiclientWhereInput[]
    OR?: apiclientWhereInput[]
    NOT?: apiclientWhereInput | apiclientWhereInput[]
    id?: IntFilter<"apiclient"> | number
    name?: StringFilter<"apiclient"> | string
    key?: StringFilter<"apiclient"> | string
    secret?: StringFilter<"apiclient"> | string
    type?: IntFilter<"apiclient"> | number
    createdat?: DateTimeFilter<"apiclient"> | Date | string
    createdby?: IntFilter<"apiclient"> | number
    updatedat?: DateTimeNullableFilter<"apiclient"> | Date | string | null
    updatedby?: IntNullableFilter<"apiclient"> | number | null
    isactive?: BoolFilter<"apiclient"> | boolean
    createduser?: XOR<UserRelationFilter, userWhereInput>
    updateduser?: XOR<UserNullableRelationFilter, userWhereInput> | null
  }

  export type apiclientOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    key?: SortOrder
    secret?: SortOrder
    type?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    updatedby?: SortOrderInput | SortOrder
    isactive?: SortOrder
    createduser?: userOrderByWithRelationInput
    updateduser?: userOrderByWithRelationInput
  }

  export type apiclientWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    key?: string
    secret?: string
    AND?: apiclientWhereInput | apiclientWhereInput[]
    OR?: apiclientWhereInput[]
    NOT?: apiclientWhereInput | apiclientWhereInput[]
    name?: StringFilter<"apiclient"> | string
    type?: IntFilter<"apiclient"> | number
    createdat?: DateTimeFilter<"apiclient"> | Date | string
    createdby?: IntFilter<"apiclient"> | number
    updatedat?: DateTimeNullableFilter<"apiclient"> | Date | string | null
    updatedby?: IntNullableFilter<"apiclient"> | number | null
    isactive?: BoolFilter<"apiclient"> | boolean
    createduser?: XOR<UserRelationFilter, userWhereInput>
    updateduser?: XOR<UserNullableRelationFilter, userWhereInput> | null
  }, "id" | "key" | "secret">

  export type apiclientOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    key?: SortOrder
    secret?: SortOrder
    type?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    updatedby?: SortOrderInput | SortOrder
    isactive?: SortOrder
    _count?: apiclientCountOrderByAggregateInput
    _avg?: apiclientAvgOrderByAggregateInput
    _max?: apiclientMaxOrderByAggregateInput
    _min?: apiclientMinOrderByAggregateInput
    _sum?: apiclientSumOrderByAggregateInput
  }

  export type apiclientScalarWhereWithAggregatesInput = {
    AND?: apiclientScalarWhereWithAggregatesInput | apiclientScalarWhereWithAggregatesInput[]
    OR?: apiclientScalarWhereWithAggregatesInput[]
    NOT?: apiclientScalarWhereWithAggregatesInput | apiclientScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"apiclient"> | number
    name?: StringWithAggregatesFilter<"apiclient"> | string
    key?: StringWithAggregatesFilter<"apiclient"> | string
    secret?: StringWithAggregatesFilter<"apiclient"> | string
    type?: IntWithAggregatesFilter<"apiclient"> | number
    createdat?: DateTimeWithAggregatesFilter<"apiclient"> | Date | string
    createdby?: IntWithAggregatesFilter<"apiclient"> | number
    updatedat?: DateTimeNullableWithAggregatesFilter<"apiclient"> | Date | string | null
    updatedby?: IntNullableWithAggregatesFilter<"apiclient"> | number | null
    isactive?: BoolWithAggregatesFilter<"apiclient"> | boolean
  }

  export type refreshtokenWhereInput = {
    AND?: refreshtokenWhereInput | refreshtokenWhereInput[]
    OR?: refreshtokenWhereInput[]
    NOT?: refreshtokenWhereInput | refreshtokenWhereInput[]
    id?: IntFilter<"refreshtoken"> | number
    userid?: IntFilter<"refreshtoken"> | number
    token?: StringFilter<"refreshtoken"> | string
    createdat?: DateTimeFilter<"refreshtoken"> | Date | string
    updatedat?: DateTimeNullableFilter<"refreshtoken"> | Date | string | null
    expiresat?: DateTimeNullableFilter<"refreshtoken"> | Date | string | null
    user?: XOR<UserRelationFilter, userWhereInput>
  }

  export type refreshtokenOrderByWithRelationInput = {
    id?: SortOrder
    userid?: SortOrder
    token?: SortOrder
    createdat?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    expiresat?: SortOrderInput | SortOrder
    user?: userOrderByWithRelationInput
  }

  export type refreshtokenWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: refreshtokenWhereInput | refreshtokenWhereInput[]
    OR?: refreshtokenWhereInput[]
    NOT?: refreshtokenWhereInput | refreshtokenWhereInput[]
    userid?: IntFilter<"refreshtoken"> | number
    token?: StringFilter<"refreshtoken"> | string
    createdat?: DateTimeFilter<"refreshtoken"> | Date | string
    updatedat?: DateTimeNullableFilter<"refreshtoken"> | Date | string | null
    expiresat?: DateTimeNullableFilter<"refreshtoken"> | Date | string | null
    user?: XOR<UserRelationFilter, userWhereInput>
  }, "id">

  export type refreshtokenOrderByWithAggregationInput = {
    id?: SortOrder
    userid?: SortOrder
    token?: SortOrder
    createdat?: SortOrder
    updatedat?: SortOrderInput | SortOrder
    expiresat?: SortOrderInput | SortOrder
    _count?: refreshtokenCountOrderByAggregateInput
    _avg?: refreshtokenAvgOrderByAggregateInput
    _max?: refreshtokenMaxOrderByAggregateInput
    _min?: refreshtokenMinOrderByAggregateInput
    _sum?: refreshtokenSumOrderByAggregateInput
  }

  export type refreshtokenScalarWhereWithAggregatesInput = {
    AND?: refreshtokenScalarWhereWithAggregatesInput | refreshtokenScalarWhereWithAggregatesInput[]
    OR?: refreshtokenScalarWhereWithAggregatesInput[]
    NOT?: refreshtokenScalarWhereWithAggregatesInput | refreshtokenScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"refreshtoken"> | number
    userid?: IntWithAggregatesFilter<"refreshtoken"> | number
    token?: StringWithAggregatesFilter<"refreshtoken"> | string
    createdat?: DateTimeWithAggregatesFilter<"refreshtoken"> | Date | string
    updatedat?: DateTimeNullableWithAggregatesFilter<"refreshtoken"> | Date | string | null
    expiresat?: DateTimeNullableWithAggregatesFilter<"refreshtoken"> | Date | string | null
  }

  export type revokedtokenWhereInput = {
    AND?: revokedtokenWhereInput | revokedtokenWhereInput[]
    OR?: revokedtokenWhereInput[]
    NOT?: revokedtokenWhereInput | revokedtokenWhereInput[]
    id?: IntFilter<"revokedtoken"> | number
    token?: StringFilter<"revokedtoken"> | string
    date?: DateTimeFilter<"revokedtoken"> | Date | string
  }

  export type revokedtokenOrderByWithRelationInput = {
    id?: SortOrder
    token?: SortOrder
    date?: SortOrder
  }

  export type revokedtokenWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    token?: string
    AND?: revokedtokenWhereInput | revokedtokenWhereInput[]
    OR?: revokedtokenWhereInput[]
    NOT?: revokedtokenWhereInput | revokedtokenWhereInput[]
    date?: DateTimeFilter<"revokedtoken"> | Date | string
  }, "id" | "token">

  export type revokedtokenOrderByWithAggregationInput = {
    id?: SortOrder
    token?: SortOrder
    date?: SortOrder
    _count?: revokedtokenCountOrderByAggregateInput
    _avg?: revokedtokenAvgOrderByAggregateInput
    _max?: revokedtokenMaxOrderByAggregateInput
    _min?: revokedtokenMinOrderByAggregateInput
    _sum?: revokedtokenSumOrderByAggregateInput
  }

  export type revokedtokenScalarWhereWithAggregatesInput = {
    AND?: revokedtokenScalarWhereWithAggregatesInput | revokedtokenScalarWhereWithAggregatesInput[]
    OR?: revokedtokenScalarWhereWithAggregatesInput[]
    NOT?: revokedtokenScalarWhereWithAggregatesInput | revokedtokenScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"revokedtoken"> | number
    token?: StringWithAggregatesFilter<"revokedtoken"> | string
    date?: DateTimeWithAggregatesFilter<"revokedtoken"> | Date | string
  }

  export type roleWhereInput = {
    AND?: roleWhereInput | roleWhereInput[]
    OR?: roleWhereInput[]
    NOT?: roleWhereInput | roleWhereInput[]
    id?: IntFilter<"role"> | number
    name?: StringFilter<"role"> | string
    createdby?: IntFilter<"role"> | number
    createdat?: DateTimeFilter<"role"> | Date | string
    updatedby?: IntNullableFilter<"role"> | number | null
    updatedat?: DateTimeNullableFilter<"role"> | Date | string | null
    issystemrole?: BoolFilter<"role"> | boolean
    createduser?: XOR<UserRelationFilter, userWhereInput>
    updateduser?: XOR<UserNullableRelationFilter, userWhereInput> | null
    rolepermissions?: RolepermissionListRelationFilter
    userroles?: UserroleListRelationFilter
  }

  export type roleOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrderInput | SortOrder
    updatedat?: SortOrderInput | SortOrder
    issystemrole?: SortOrder
    createduser?: userOrderByWithRelationInput
    updateduser?: userOrderByWithRelationInput
    rolepermissions?: rolepermissionOrderByRelationAggregateInput
    userroles?: userroleOrderByRelationAggregateInput
  }

  export type roleWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: roleWhereInput | roleWhereInput[]
    OR?: roleWhereInput[]
    NOT?: roleWhereInput | roleWhereInput[]
    name?: StringFilter<"role"> | string
    createdby?: IntFilter<"role"> | number
    createdat?: DateTimeFilter<"role"> | Date | string
    updatedby?: IntNullableFilter<"role"> | number | null
    updatedat?: DateTimeNullableFilter<"role"> | Date | string | null
    issystemrole?: BoolFilter<"role"> | boolean
    createduser?: XOR<UserRelationFilter, userWhereInput>
    updateduser?: XOR<UserNullableRelationFilter, userWhereInput> | null
    rolepermissions?: RolepermissionListRelationFilter
    userroles?: UserroleListRelationFilter
  }, "id">

  export type roleOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrderInput | SortOrder
    updatedat?: SortOrderInput | SortOrder
    issystemrole?: SortOrder
    _count?: roleCountOrderByAggregateInput
    _avg?: roleAvgOrderByAggregateInput
    _max?: roleMaxOrderByAggregateInput
    _min?: roleMinOrderByAggregateInput
    _sum?: roleSumOrderByAggregateInput
  }

  export type roleScalarWhereWithAggregatesInput = {
    AND?: roleScalarWhereWithAggregatesInput | roleScalarWhereWithAggregatesInput[]
    OR?: roleScalarWhereWithAggregatesInput[]
    NOT?: roleScalarWhereWithAggregatesInput | roleScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"role"> | number
    name?: StringWithAggregatesFilter<"role"> | string
    createdby?: IntWithAggregatesFilter<"role"> | number
    createdat?: DateTimeWithAggregatesFilter<"role"> | Date | string
    updatedby?: IntNullableWithAggregatesFilter<"role"> | number | null
    updatedat?: DateTimeNullableWithAggregatesFilter<"role"> | Date | string | null
    issystemrole?: BoolWithAggregatesFilter<"role"> | boolean
  }

  export type notificationWhereInput = {
    AND?: notificationWhereInput | notificationWhereInput[]
    OR?: notificationWhereInput[]
    NOT?: notificationWhereInput | notificationWhereInput[]
    id?: IntFilter<"notification"> | number
    touserid?: IntFilter<"notification"> | number
    message?: StringFilter<"notification"> | string
    url?: StringFilter<"notification"> | string
    createdby?: IntFilter<"notification"> | number
    createdat?: DateTimeFilter<"notification"> | Date | string
    readedat?: DateTimeNullableFilter<"notification"> | Date | string | null
    to?: XOR<UserRelationFilter, userWhereInput>
  }

  export type notificationOrderByWithRelationInput = {
    id?: SortOrder
    touserid?: SortOrder
    message?: SortOrder
    url?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    readedat?: SortOrderInput | SortOrder
    to?: userOrderByWithRelationInput
  }

  export type notificationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: notificationWhereInput | notificationWhereInput[]
    OR?: notificationWhereInput[]
    NOT?: notificationWhereInput | notificationWhereInput[]
    touserid?: IntFilter<"notification"> | number
    message?: StringFilter<"notification"> | string
    url?: StringFilter<"notification"> | string
    createdby?: IntFilter<"notification"> | number
    createdat?: DateTimeFilter<"notification"> | Date | string
    readedat?: DateTimeNullableFilter<"notification"> | Date | string | null
    to?: XOR<UserRelationFilter, userWhereInput>
  }, "id">

  export type notificationOrderByWithAggregationInput = {
    id?: SortOrder
    touserid?: SortOrder
    message?: SortOrder
    url?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    readedat?: SortOrderInput | SortOrder
    _count?: notificationCountOrderByAggregateInput
    _avg?: notificationAvgOrderByAggregateInput
    _max?: notificationMaxOrderByAggregateInput
    _min?: notificationMinOrderByAggregateInput
    _sum?: notificationSumOrderByAggregateInput
  }

  export type notificationScalarWhereWithAggregatesInput = {
    AND?: notificationScalarWhereWithAggregatesInput | notificationScalarWhereWithAggregatesInput[]
    OR?: notificationScalarWhereWithAggregatesInput[]
    NOT?: notificationScalarWhereWithAggregatesInput | notificationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"notification"> | number
    touserid?: IntWithAggregatesFilter<"notification"> | number
    message?: StringWithAggregatesFilter<"notification"> | string
    url?: StringWithAggregatesFilter<"notification"> | string
    createdby?: IntWithAggregatesFilter<"notification"> | number
    createdat?: DateTimeWithAggregatesFilter<"notification"> | Date | string
    readedat?: DateTimeNullableWithAggregatesFilter<"notification"> | Date | string | null
  }

  export type permissionWhereInput = {
    AND?: permissionWhereInput | permissionWhereInput[]
    OR?: permissionWhereInput[]
    NOT?: permissionWhereInput | permissionWhereInput[]
    id?: IntFilter<"permission"> | number
    name?: StringFilter<"permission"> | string
    value?: StringFilter<"permission"> | string
    group?: StringFilter<"permission"> | string
    description?: StringFilter<"permission"> | string
    createdby?: IntFilter<"permission"> | number
    createdat?: DateTimeFilter<"permission"> | Date | string
    updatedby?: IntNullableFilter<"permission"> | number | null
    updatedat?: DateTimeNullableFilter<"permission"> | Date | string | null
    createduser?: XOR<UserRelationFilter, userWhereInput>
    updateduser?: XOR<UserNullableRelationFilter, userWhereInput> | null
    rolepermissions?: RolepermissionListRelationFilter
    userpermissions?: UserpermissionListRelationFilter
  }

  export type permissionOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    value?: SortOrder
    group?: SortOrder
    description?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrderInput | SortOrder
    updatedat?: SortOrderInput | SortOrder
    createduser?: userOrderByWithRelationInput
    updateduser?: userOrderByWithRelationInput
    rolepermissions?: rolepermissionOrderByRelationAggregateInput
    userpermissions?: userpermissionOrderByRelationAggregateInput
  }

  export type permissionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    value?: string
    AND?: permissionWhereInput | permissionWhereInput[]
    OR?: permissionWhereInput[]
    NOT?: permissionWhereInput | permissionWhereInput[]
    name?: StringFilter<"permission"> | string
    group?: StringFilter<"permission"> | string
    description?: StringFilter<"permission"> | string
    createdby?: IntFilter<"permission"> | number
    createdat?: DateTimeFilter<"permission"> | Date | string
    updatedby?: IntNullableFilter<"permission"> | number | null
    updatedat?: DateTimeNullableFilter<"permission"> | Date | string | null
    createduser?: XOR<UserRelationFilter, userWhereInput>
    updateduser?: XOR<UserNullableRelationFilter, userWhereInput> | null
    rolepermissions?: RolepermissionListRelationFilter
    userpermissions?: UserpermissionListRelationFilter
  }, "id" | "value">

  export type permissionOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    value?: SortOrder
    group?: SortOrder
    description?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrderInput | SortOrder
    updatedat?: SortOrderInput | SortOrder
    _count?: permissionCountOrderByAggregateInput
    _avg?: permissionAvgOrderByAggregateInput
    _max?: permissionMaxOrderByAggregateInput
    _min?: permissionMinOrderByAggregateInput
    _sum?: permissionSumOrderByAggregateInput
  }

  export type permissionScalarWhereWithAggregatesInput = {
    AND?: permissionScalarWhereWithAggregatesInput | permissionScalarWhereWithAggregatesInput[]
    OR?: permissionScalarWhereWithAggregatesInput[]
    NOT?: permissionScalarWhereWithAggregatesInput | permissionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"permission"> | number
    name?: StringWithAggregatesFilter<"permission"> | string
    value?: StringWithAggregatesFilter<"permission"> | string
    group?: StringWithAggregatesFilter<"permission"> | string
    description?: StringWithAggregatesFilter<"permission"> | string
    createdby?: IntWithAggregatesFilter<"permission"> | number
    createdat?: DateTimeWithAggregatesFilter<"permission"> | Date | string
    updatedby?: IntNullableWithAggregatesFilter<"permission"> | number | null
    updatedat?: DateTimeNullableWithAggregatesFilter<"permission"> | Date | string | null
  }

  export type rolepermissionWhereInput = {
    AND?: rolepermissionWhereInput | rolepermissionWhereInput[]
    OR?: rolepermissionWhereInput[]
    NOT?: rolepermissionWhereInput | rolepermissionWhereInput[]
    id?: IntFilter<"rolepermission"> | number
    roleid?: IntFilter<"rolepermission"> | number
    permissionid?: IntFilter<"rolepermission"> | number
    createdat?: DateTimeFilter<"rolepermission"> | Date | string
    createdby?: IntFilter<"rolepermission"> | number
    updatedby?: IntNullableFilter<"rolepermission"> | number | null
    updatedat?: DateTimeNullableFilter<"rolepermission"> | Date | string | null
    createduser?: XOR<UserRelationFilter, userWhereInput>
    permission?: XOR<PermissionRelationFilter, permissionWhereInput>
    role?: XOR<RoleRelationFilter, roleWhereInput>
    updateduser?: XOR<UserNullableRelationFilter, userWhereInput> | null
  }

  export type rolepermissionOrderByWithRelationInput = {
    id?: SortOrder
    roleid?: SortOrder
    permissionid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrderInput | SortOrder
    updatedat?: SortOrderInput | SortOrder
    createduser?: userOrderByWithRelationInput
    permission?: permissionOrderByWithRelationInput
    role?: roleOrderByWithRelationInput
    updateduser?: userOrderByWithRelationInput
  }

  export type rolepermissionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: rolepermissionWhereInput | rolepermissionWhereInput[]
    OR?: rolepermissionWhereInput[]
    NOT?: rolepermissionWhereInput | rolepermissionWhereInput[]
    roleid?: IntFilter<"rolepermission"> | number
    permissionid?: IntFilter<"rolepermission"> | number
    createdat?: DateTimeFilter<"rolepermission"> | Date | string
    createdby?: IntFilter<"rolepermission"> | number
    updatedby?: IntNullableFilter<"rolepermission"> | number | null
    updatedat?: DateTimeNullableFilter<"rolepermission"> | Date | string | null
    createduser?: XOR<UserRelationFilter, userWhereInput>
    permission?: XOR<PermissionRelationFilter, permissionWhereInput>
    role?: XOR<RoleRelationFilter, roleWhereInput>
    updateduser?: XOR<UserNullableRelationFilter, userWhereInput> | null
  }, "id">

  export type rolepermissionOrderByWithAggregationInput = {
    id?: SortOrder
    roleid?: SortOrder
    permissionid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrderInput | SortOrder
    updatedat?: SortOrderInput | SortOrder
    _count?: rolepermissionCountOrderByAggregateInput
    _avg?: rolepermissionAvgOrderByAggregateInput
    _max?: rolepermissionMaxOrderByAggregateInput
    _min?: rolepermissionMinOrderByAggregateInput
    _sum?: rolepermissionSumOrderByAggregateInput
  }

  export type rolepermissionScalarWhereWithAggregatesInput = {
    AND?: rolepermissionScalarWhereWithAggregatesInput | rolepermissionScalarWhereWithAggregatesInput[]
    OR?: rolepermissionScalarWhereWithAggregatesInput[]
    NOT?: rolepermissionScalarWhereWithAggregatesInput | rolepermissionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"rolepermission"> | number
    roleid?: IntWithAggregatesFilter<"rolepermission"> | number
    permissionid?: IntWithAggregatesFilter<"rolepermission"> | number
    createdat?: DateTimeWithAggregatesFilter<"rolepermission"> | Date | string
    createdby?: IntWithAggregatesFilter<"rolepermission"> | number
    updatedby?: IntNullableWithAggregatesFilter<"rolepermission"> | number | null
    updatedat?: DateTimeNullableWithAggregatesFilter<"rolepermission"> | Date | string | null
  }

  export type userWhereInput = {
    AND?: userWhereInput | userWhereInput[]
    OR?: userWhereInput[]
    NOT?: userWhereInput | userWhereInput[]
    id?: IntFilter<"user"> | number
    firstname?: StringFilter<"user"> | string
    lastname?: StringFilter<"user"> | string
    phone?: StringNullableFilter<"user"> | string | null
    email?: StringFilter<"user"> | string
    password?: StringFilter<"user"> | string
    createdby?: IntFilter<"user"> | number
    createdat?: DateTimeFilter<"user"> | Date | string
    updatedby?: IntNullableFilter<"user"> | number | null
    updatedat?: DateTimeNullableFilter<"user"> | Date | string | null
    status?: IntFilter<"user"> | number
    notificationuser?: NotificationListRelationFilter
    createdapiclients?: ApiclientListRelationFilter
    updatedapiclients?: ApiclientListRelationFilter
    createdpermissions?: PermissionListRelationFilter
    updatedpermissions?: PermissionListRelationFilter
    refreshtokens?: RefreshtokenListRelationFilter
    createdroles?: RoleListRelationFilter
    updatedroles?: RoleListRelationFilter
    createdrolepermissions?: RolepermissionListRelationFilter
    updatedrolepermissions?: RolepermissionListRelationFilter
    createduser?: XOR<UserRelationFilter, userWhereInput>
    createdusers?: UserListRelationFilter
    updateduser?: XOR<UserNullableRelationFilter, userWhereInput> | null
    updatedusers?: UserListRelationFilter
    createduserpermissions?: UserpermissionListRelationFilter
    updateduserpermissions?: UserpermissionListRelationFilter
    userpermissions?: UserpermissionListRelationFilter
    createduserroles?: UserroleListRelationFilter
    updateduserroles?: UserroleListRelationFilter
    userroles?: UserroleListRelationFilter
    useroffers?: OfferListRelationFilter
    usercontacts?: ContactListRelationFilter
    userpages?: PageListRelationFilter
    userservicecategory?: ServicecategoryListRelationFilter
    userservice?: ServiceListRelationFilter
  }

  export type userOrderByWithRelationInput = {
    id?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrder
    password?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrderInput | SortOrder
    updatedat?: SortOrderInput | SortOrder
    status?: SortOrder
    notificationuser?: notificationOrderByRelationAggregateInput
    createdapiclients?: apiclientOrderByRelationAggregateInput
    updatedapiclients?: apiclientOrderByRelationAggregateInput
    createdpermissions?: permissionOrderByRelationAggregateInput
    updatedpermissions?: permissionOrderByRelationAggregateInput
    refreshtokens?: refreshtokenOrderByRelationAggregateInput
    createdroles?: roleOrderByRelationAggregateInput
    updatedroles?: roleOrderByRelationAggregateInput
    createdrolepermissions?: rolepermissionOrderByRelationAggregateInput
    updatedrolepermissions?: rolepermissionOrderByRelationAggregateInput
    createduser?: userOrderByWithRelationInput
    createdusers?: userOrderByRelationAggregateInput
    updateduser?: userOrderByWithRelationInput
    updatedusers?: userOrderByRelationAggregateInput
    createduserpermissions?: userpermissionOrderByRelationAggregateInput
    updateduserpermissions?: userpermissionOrderByRelationAggregateInput
    userpermissions?: userpermissionOrderByRelationAggregateInput
    createduserroles?: userroleOrderByRelationAggregateInput
    updateduserroles?: userroleOrderByRelationAggregateInput
    userroles?: userroleOrderByRelationAggregateInput
    useroffers?: offerOrderByRelationAggregateInput
    usercontacts?: contactOrderByRelationAggregateInput
    userpages?: pageOrderByRelationAggregateInput
    userservicecategory?: servicecategoryOrderByRelationAggregateInput
    userservice?: serviceOrderByRelationAggregateInput
  }

  export type userWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: userWhereInput | userWhereInput[]
    OR?: userWhereInput[]
    NOT?: userWhereInput | userWhereInput[]
    firstname?: StringFilter<"user"> | string
    lastname?: StringFilter<"user"> | string
    phone?: StringNullableFilter<"user"> | string | null
    password?: StringFilter<"user"> | string
    createdby?: IntFilter<"user"> | number
    createdat?: DateTimeFilter<"user"> | Date | string
    updatedby?: IntNullableFilter<"user"> | number | null
    updatedat?: DateTimeNullableFilter<"user"> | Date | string | null
    status?: IntFilter<"user"> | number
    notificationuser?: NotificationListRelationFilter
    createdapiclients?: ApiclientListRelationFilter
    updatedapiclients?: ApiclientListRelationFilter
    createdpermissions?: PermissionListRelationFilter
    updatedpermissions?: PermissionListRelationFilter
    refreshtokens?: RefreshtokenListRelationFilter
    createdroles?: RoleListRelationFilter
    updatedroles?: RoleListRelationFilter
    createdrolepermissions?: RolepermissionListRelationFilter
    updatedrolepermissions?: RolepermissionListRelationFilter
    createduser?: XOR<UserRelationFilter, userWhereInput>
    createdusers?: UserListRelationFilter
    updateduser?: XOR<UserNullableRelationFilter, userWhereInput> | null
    updatedusers?: UserListRelationFilter
    createduserpermissions?: UserpermissionListRelationFilter
    updateduserpermissions?: UserpermissionListRelationFilter
    userpermissions?: UserpermissionListRelationFilter
    createduserroles?: UserroleListRelationFilter
    updateduserroles?: UserroleListRelationFilter
    userroles?: UserroleListRelationFilter
    useroffers?: OfferListRelationFilter
    usercontacts?: ContactListRelationFilter
    userpages?: PageListRelationFilter
    userservicecategory?: ServicecategoryListRelationFilter
    userservice?: ServiceListRelationFilter
  }, "id" | "email">

  export type userOrderByWithAggregationInput = {
    id?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrder
    password?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrderInput | SortOrder
    updatedat?: SortOrderInput | SortOrder
    status?: SortOrder
    _count?: userCountOrderByAggregateInput
    _avg?: userAvgOrderByAggregateInput
    _max?: userMaxOrderByAggregateInput
    _min?: userMinOrderByAggregateInput
    _sum?: userSumOrderByAggregateInput
  }

  export type userScalarWhereWithAggregatesInput = {
    AND?: userScalarWhereWithAggregatesInput | userScalarWhereWithAggregatesInput[]
    OR?: userScalarWhereWithAggregatesInput[]
    NOT?: userScalarWhereWithAggregatesInput | userScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"user"> | number
    firstname?: StringWithAggregatesFilter<"user"> | string
    lastname?: StringWithAggregatesFilter<"user"> | string
    phone?: StringNullableWithAggregatesFilter<"user"> | string | null
    email?: StringWithAggregatesFilter<"user"> | string
    password?: StringWithAggregatesFilter<"user"> | string
    createdby?: IntWithAggregatesFilter<"user"> | number
    createdat?: DateTimeWithAggregatesFilter<"user"> | Date | string
    updatedby?: IntNullableWithAggregatesFilter<"user"> | number | null
    updatedat?: DateTimeNullableWithAggregatesFilter<"user"> | Date | string | null
    status?: IntWithAggregatesFilter<"user"> | number
  }

  export type userpermissionWhereInput = {
    AND?: userpermissionWhereInput | userpermissionWhereInput[]
    OR?: userpermissionWhereInput[]
    NOT?: userpermissionWhereInput | userpermissionWhereInput[]
    id?: IntFilter<"userpermission"> | number
    userid?: IntFilter<"userpermission"> | number
    permissionid?: IntFilter<"userpermission"> | number
    createdby?: IntFilter<"userpermission"> | number
    createdat?: DateTimeFilter<"userpermission"> | Date | string
    updatedby?: IntNullableFilter<"userpermission"> | number | null
    updatedat?: DateTimeNullableFilter<"userpermission"> | Date | string | null
    createduser?: XOR<UserRelationFilter, userWhereInput>
    permission?: XOR<PermissionRelationFilter, permissionWhereInput>
    updateduser?: XOR<UserNullableRelationFilter, userWhereInput> | null
    user?: XOR<UserRelationFilter, userWhereInput>
  }

  export type userpermissionOrderByWithRelationInput = {
    id?: SortOrder
    userid?: SortOrder
    permissionid?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrderInput | SortOrder
    updatedat?: SortOrderInput | SortOrder
    createduser?: userOrderByWithRelationInput
    permission?: permissionOrderByWithRelationInput
    updateduser?: userOrderByWithRelationInput
    user?: userOrderByWithRelationInput
  }

  export type userpermissionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: userpermissionWhereInput | userpermissionWhereInput[]
    OR?: userpermissionWhereInput[]
    NOT?: userpermissionWhereInput | userpermissionWhereInput[]
    userid?: IntFilter<"userpermission"> | number
    permissionid?: IntFilter<"userpermission"> | number
    createdby?: IntFilter<"userpermission"> | number
    createdat?: DateTimeFilter<"userpermission"> | Date | string
    updatedby?: IntNullableFilter<"userpermission"> | number | null
    updatedat?: DateTimeNullableFilter<"userpermission"> | Date | string | null
    createduser?: XOR<UserRelationFilter, userWhereInput>
    permission?: XOR<PermissionRelationFilter, permissionWhereInput>
    updateduser?: XOR<UserNullableRelationFilter, userWhereInput> | null
    user?: XOR<UserRelationFilter, userWhereInput>
  }, "id">

  export type userpermissionOrderByWithAggregationInput = {
    id?: SortOrder
    userid?: SortOrder
    permissionid?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrderInput | SortOrder
    updatedat?: SortOrderInput | SortOrder
    _count?: userpermissionCountOrderByAggregateInput
    _avg?: userpermissionAvgOrderByAggregateInput
    _max?: userpermissionMaxOrderByAggregateInput
    _min?: userpermissionMinOrderByAggregateInput
    _sum?: userpermissionSumOrderByAggregateInput
  }

  export type userpermissionScalarWhereWithAggregatesInput = {
    AND?: userpermissionScalarWhereWithAggregatesInput | userpermissionScalarWhereWithAggregatesInput[]
    OR?: userpermissionScalarWhereWithAggregatesInput[]
    NOT?: userpermissionScalarWhereWithAggregatesInput | userpermissionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"userpermission"> | number
    userid?: IntWithAggregatesFilter<"userpermission"> | number
    permissionid?: IntWithAggregatesFilter<"userpermission"> | number
    createdby?: IntWithAggregatesFilter<"userpermission"> | number
    createdat?: DateTimeWithAggregatesFilter<"userpermission"> | Date | string
    updatedby?: IntNullableWithAggregatesFilter<"userpermission"> | number | null
    updatedat?: DateTimeNullableWithAggregatesFilter<"userpermission"> | Date | string | null
  }

  export type userroleWhereInput = {
    AND?: userroleWhereInput | userroleWhereInput[]
    OR?: userroleWhereInput[]
    NOT?: userroleWhereInput | userroleWhereInput[]
    id?: IntFilter<"userrole"> | number
    userid?: IntFilter<"userrole"> | number
    roleid?: IntFilter<"userrole"> | number
    createdby?: IntFilter<"userrole"> | number
    createdat?: DateTimeFilter<"userrole"> | Date | string
    updatedby?: IntNullableFilter<"userrole"> | number | null
    updatedat?: DateTimeNullableFilter<"userrole"> | Date | string | null
    createduser?: XOR<UserRelationFilter, userWhereInput>
    role?: XOR<RoleRelationFilter, roleWhereInput>
    updateduser?: XOR<UserNullableRelationFilter, userWhereInput> | null
    user?: XOR<UserRelationFilter, userWhereInput>
  }

  export type userroleOrderByWithRelationInput = {
    id?: SortOrder
    userid?: SortOrder
    roleid?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrderInput | SortOrder
    updatedat?: SortOrderInput | SortOrder
    createduser?: userOrderByWithRelationInput
    role?: roleOrderByWithRelationInput
    updateduser?: userOrderByWithRelationInput
    user?: userOrderByWithRelationInput
  }

  export type userroleWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: userroleWhereInput | userroleWhereInput[]
    OR?: userroleWhereInput[]
    NOT?: userroleWhereInput | userroleWhereInput[]
    userid?: IntFilter<"userrole"> | number
    roleid?: IntFilter<"userrole"> | number
    createdby?: IntFilter<"userrole"> | number
    createdat?: DateTimeFilter<"userrole"> | Date | string
    updatedby?: IntNullableFilter<"userrole"> | number | null
    updatedat?: DateTimeNullableFilter<"userrole"> | Date | string | null
    createduser?: XOR<UserRelationFilter, userWhereInput>
    role?: XOR<RoleRelationFilter, roleWhereInput>
    updateduser?: XOR<UserNullableRelationFilter, userWhereInput> | null
    user?: XOR<UserRelationFilter, userWhereInput>
  }, "id">

  export type userroleOrderByWithAggregationInput = {
    id?: SortOrder
    userid?: SortOrder
    roleid?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrderInput | SortOrder
    updatedat?: SortOrderInput | SortOrder
    _count?: userroleCountOrderByAggregateInput
    _avg?: userroleAvgOrderByAggregateInput
    _max?: userroleMaxOrderByAggregateInput
    _min?: userroleMinOrderByAggregateInput
    _sum?: userroleSumOrderByAggregateInput
  }

  export type userroleScalarWhereWithAggregatesInput = {
    AND?: userroleScalarWhereWithAggregatesInput | userroleScalarWhereWithAggregatesInput[]
    OR?: userroleScalarWhereWithAggregatesInput[]
    NOT?: userroleScalarWhereWithAggregatesInput | userroleScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"userrole"> | number
    userid?: IntWithAggregatesFilter<"userrole"> | number
    roleid?: IntWithAggregatesFilter<"userrole"> | number
    createdby?: IntWithAggregatesFilter<"userrole"> | number
    createdat?: DateTimeWithAggregatesFilter<"userrole"> | Date | string
    updatedby?: IntNullableWithAggregatesFilter<"userrole"> | number | null
    updatedat?: DateTimeNullableWithAggregatesFilter<"userrole"> | Date | string | null
  }

  export type blogcommentCreateInput = {
    name: string
    email: string
    comment: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    blog: blogCreateNestedOneWithoutBlogcommentsInput
  }

  export type blogcommentUncheckedCreateInput = {
    id?: number
    blogid: number
    name: string
    email: string
    comment: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
  }

  export type blogcommentUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    comment?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    blog?: blogUpdateOneRequiredWithoutBlogcommentsNestedInput
  }

  export type blogcommentUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    blogid?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    comment?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
  }

  export type blogcommentCreateManyInput = {
    id?: number
    blogid: number
    name: string
    email: string
    comment: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
  }

  export type blogcommentUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    comment?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
  }

  export type blogcommentUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    blogid?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    comment?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
  }

  export type blogCreateInput = {
    title: string
    content: string
    slug: string
    featuredimage: string
    metaid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    blogcategory: blogcategoryCreateNestedOneWithoutBlogsInput
    blogcomments?: blogcommentCreateNestedManyWithoutBlogInput
  }

  export type blogUncheckedCreateInput = {
    id?: number
    title: string
    content: string
    slug: string
    featuredimage: string
    blogcategoryid: number
    metaid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    blogcomments?: blogcommentUncheckedCreateNestedManyWithoutBlogInput
  }

  export type blogUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    featuredimage?: StringFieldUpdateOperationsInput | string
    metaid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    blogcategory?: blogcategoryUpdateOneRequiredWithoutBlogsNestedInput
    blogcomments?: blogcommentUpdateManyWithoutBlogNestedInput
  }

  export type blogUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    featuredimage?: StringFieldUpdateOperationsInput | string
    blogcategoryid?: IntFieldUpdateOperationsInput | number
    metaid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    blogcomments?: blogcommentUncheckedUpdateManyWithoutBlogNestedInput
  }

  export type blogCreateManyInput = {
    id?: number
    title: string
    content: string
    slug: string
    featuredimage: string
    blogcategoryid: number
    metaid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
  }

  export type blogUpdateManyMutationInput = {
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    featuredimage?: StringFieldUpdateOperationsInput | string
    metaid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
  }

  export type blogUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    featuredimage?: StringFieldUpdateOperationsInput | string
    blogcategoryid?: IntFieldUpdateOperationsInput | number
    metaid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
  }

  export type blogcategoryCreateInput = {
    name: string
    description: string
    featuredimage: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    blogs?: blogCreateNestedManyWithoutBlogcategoryInput
    blogcategorymeta?: metaCreateNestedOneWithoutBlogcategoryInput
  }

  export type blogcategoryUncheckedCreateInput = {
    id?: number
    name: string
    description: string
    featuredimage: string
    metaid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    blogs?: blogUncheckedCreateNestedManyWithoutBlogcategoryInput
  }

  export type blogcategoryUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    featuredimage?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    blogs?: blogUpdateManyWithoutBlogcategoryNestedInput
    blogcategorymeta?: metaUpdateOneWithoutBlogcategoryNestedInput
  }

  export type blogcategoryUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    featuredimage?: StringFieldUpdateOperationsInput | string
    metaid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    blogs?: blogUncheckedUpdateManyWithoutBlogcategoryNestedInput
  }

  export type blogcategoryCreateManyInput = {
    id?: number
    name: string
    description: string
    featuredimage: string
    metaid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
  }

  export type blogcategoryUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    featuredimage?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
  }

  export type blogcategoryUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    featuredimage?: StringFieldUpdateOperationsInput | string
    metaid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
  }

  export type metaCreateInput = {
    metatitle: string
    metadescription: string
    metakeywords: string
    metarobots: string
    metahttpequiv: string
    metalanguage: string
    metaauthor: string
    metarevisit: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    pages?: pageCreateNestedManyWithoutMetatagsInput
    services?: serviceCreateNestedManyWithoutMetatagsInput
    servicecategory?: servicecategoryCreateNestedManyWithoutMetatagsInput
    blogcategory?: blogcategoryCreateNestedManyWithoutBlogcategorymetaInput
  }

  export type metaUncheckedCreateInput = {
    id?: number
    metatitle: string
    metadescription: string
    metakeywords: string
    metarobots: string
    metahttpequiv: string
    metalanguage: string
    metaauthor: string
    metarevisit: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    pages?: pageUncheckedCreateNestedManyWithoutMetatagsInput
    services?: serviceUncheckedCreateNestedManyWithoutMetatagsInput
    servicecategory?: servicecategoryUncheckedCreateNestedManyWithoutMetatagsInput
    blogcategory?: blogcategoryUncheckedCreateNestedManyWithoutBlogcategorymetaInput
  }

  export type metaUpdateInput = {
    metatitle?: StringFieldUpdateOperationsInput | string
    metadescription?: StringFieldUpdateOperationsInput | string
    metakeywords?: StringFieldUpdateOperationsInput | string
    metarobots?: StringFieldUpdateOperationsInput | string
    metahttpequiv?: StringFieldUpdateOperationsInput | string
    metalanguage?: StringFieldUpdateOperationsInput | string
    metaauthor?: StringFieldUpdateOperationsInput | string
    metarevisit?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    pages?: pageUpdateManyWithoutMetatagsNestedInput
    services?: serviceUpdateManyWithoutMetatagsNestedInput
    servicecategory?: servicecategoryUpdateManyWithoutMetatagsNestedInput
    blogcategory?: blogcategoryUpdateManyWithoutBlogcategorymetaNestedInput
  }

  export type metaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    metatitle?: StringFieldUpdateOperationsInput | string
    metadescription?: StringFieldUpdateOperationsInput | string
    metakeywords?: StringFieldUpdateOperationsInput | string
    metarobots?: StringFieldUpdateOperationsInput | string
    metahttpequiv?: StringFieldUpdateOperationsInput | string
    metalanguage?: StringFieldUpdateOperationsInput | string
    metaauthor?: StringFieldUpdateOperationsInput | string
    metarevisit?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    pages?: pageUncheckedUpdateManyWithoutMetatagsNestedInput
    services?: serviceUncheckedUpdateManyWithoutMetatagsNestedInput
    servicecategory?: servicecategoryUncheckedUpdateManyWithoutMetatagsNestedInput
    blogcategory?: blogcategoryUncheckedUpdateManyWithoutBlogcategorymetaNestedInput
  }

  export type metaCreateManyInput = {
    id?: number
    metatitle: string
    metadescription: string
    metakeywords: string
    metarobots: string
    metahttpequiv: string
    metalanguage: string
    metaauthor: string
    metarevisit: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
  }

  export type metaUpdateManyMutationInput = {
    metatitle?: StringFieldUpdateOperationsInput | string
    metadescription?: StringFieldUpdateOperationsInput | string
    metakeywords?: StringFieldUpdateOperationsInput | string
    metarobots?: StringFieldUpdateOperationsInput | string
    metahttpequiv?: StringFieldUpdateOperationsInput | string
    metalanguage?: StringFieldUpdateOperationsInput | string
    metaauthor?: StringFieldUpdateOperationsInput | string
    metarevisit?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type metaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    metatitle?: StringFieldUpdateOperationsInput | string
    metadescription?: StringFieldUpdateOperationsInput | string
    metakeywords?: StringFieldUpdateOperationsInput | string
    metarobots?: StringFieldUpdateOperationsInput | string
    metahttpequiv?: StringFieldUpdateOperationsInput | string
    metalanguage?: StringFieldUpdateOperationsInput | string
    metaauthor?: StringFieldUpdateOperationsInput | string
    metarevisit?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type offerCreateInput = {
    name: string
    description: string
    saleprice: number
    salepricecurrency: string
    salepriceperiod: string
    discountprice: number
    discountamount: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    service?: serviceCreateNestedOneWithoutOffersInput
    useroffers?: userCreateNestedOneWithoutUseroffersInput
  }

  export type offerUncheckedCreateInput = {
    id?: number
    name: string
    description: string
    saleprice: number
    salepricecurrency: string
    salepriceperiod: string
    discountprice: number
    discountamount: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    serviceid: number
  }

  export type offerUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    saleprice?: FloatFieldUpdateOperationsInput | number
    salepricecurrency?: StringFieldUpdateOperationsInput | string
    salepriceperiod?: StringFieldUpdateOperationsInput | string
    discountprice?: FloatFieldUpdateOperationsInput | number
    discountamount?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    service?: serviceUpdateOneWithoutOffersNestedInput
    useroffers?: userUpdateOneWithoutUseroffersNestedInput
  }

  export type offerUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    saleprice?: FloatFieldUpdateOperationsInput | number
    salepricecurrency?: StringFieldUpdateOperationsInput | string
    salepriceperiod?: StringFieldUpdateOperationsInput | string
    discountprice?: FloatFieldUpdateOperationsInput | number
    discountamount?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    serviceid?: IntFieldUpdateOperationsInput | number
  }

  export type offerCreateManyInput = {
    id?: number
    name: string
    description: string
    saleprice: number
    salepricecurrency: string
    salepriceperiod: string
    discountprice: number
    discountamount: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    serviceid: number
  }

  export type offerUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    saleprice?: FloatFieldUpdateOperationsInput | number
    salepricecurrency?: StringFieldUpdateOperationsInput | string
    salepriceperiod?: StringFieldUpdateOperationsInput | string
    discountprice?: FloatFieldUpdateOperationsInput | number
    discountamount?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
  }

  export type offerUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    saleprice?: FloatFieldUpdateOperationsInput | number
    salepricecurrency?: StringFieldUpdateOperationsInput | string
    salepriceperiod?: StringFieldUpdateOperationsInput | string
    discountprice?: FloatFieldUpdateOperationsInput | number
    discountamount?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    serviceid?: IntFieldUpdateOperationsInput | number
  }

  export type newsletterCreateInput = {
    email: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
  }

  export type newsletterUncheckedCreateInput = {
    id?: number
    email: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
  }

  export type newsletterUpdateInput = {
    email?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type newsletterUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type newsletterCreateManyInput = {
    id?: number
    email: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
  }

  export type newsletterUpdateManyMutationInput = {
    email?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type newsletterUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type contactCreateInput = {
    name: string
    email: string
    phone: string
    message: string
    attachment?: string | null
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isclosed: number
    servicecategory?: servicecategoryCreateNestedOneWithoutContactsInput
    service?: serviceCreateNestedOneWithoutContactsInput
    usercontacts?: userCreateNestedOneWithoutUsercontactsInput
  }

  export type contactUncheckedCreateInput = {
    id?: number
    name: string
    email: string
    phone: string
    message: string
    attachment?: string | null
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isclosed: number
    servicecategoryid: number
    serviceid: number
  }

  export type contactUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isclosed?: IntFieldUpdateOperationsInput | number
    servicecategory?: servicecategoryUpdateOneWithoutContactsNestedInput
    service?: serviceUpdateOneWithoutContactsNestedInput
    usercontacts?: userUpdateOneWithoutUsercontactsNestedInput
  }

  export type contactUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isclosed?: IntFieldUpdateOperationsInput | number
    servicecategoryid?: IntFieldUpdateOperationsInput | number
    serviceid?: IntFieldUpdateOperationsInput | number
  }

  export type contactCreateManyInput = {
    id?: number
    name: string
    email: string
    phone: string
    message: string
    attachment?: string | null
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isclosed: number
    servicecategoryid: number
    serviceid: number
  }

  export type contactUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isclosed?: IntFieldUpdateOperationsInput | number
  }

  export type contactUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isclosed?: IntFieldUpdateOperationsInput | number
    servicecategoryid?: IntFieldUpdateOperationsInput | number
    serviceid?: IntFieldUpdateOperationsInput | number
  }

  export type pageCreateInput = {
    name: string
    content: string
    slug: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    service?: serviceCreateNestedOneWithoutPagesInput
    userpages?: userCreateNestedOneWithoutUserpagesInput
    metatags?: metaCreateNestedOneWithoutPagesInput
  }

  export type pageUncheckedCreateInput = {
    id?: number
    metaid: number
    name: string
    content: string
    slug: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    serviceid: number
  }

  export type pageUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    service?: serviceUpdateOneWithoutPagesNestedInput
    userpages?: userUpdateOneWithoutUserpagesNestedInput
    metatags?: metaUpdateOneWithoutPagesNestedInput
  }

  export type pageUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    metaid?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    serviceid?: IntFieldUpdateOperationsInput | number
  }

  export type pageCreateManyInput = {
    id?: number
    metaid: number
    name: string
    content: string
    slug: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    serviceid: number
  }

  export type pageUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
  }

  export type pageUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    metaid?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    serviceid?: IntFieldUpdateOperationsInput | number
  }

  export type servicecategoryCreateInput = {
    name: string
    description: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    services?: serviceCreateNestedManyWithoutServicecategoryInput
    contacts?: contactCreateNestedManyWithoutServicecategoryInput
    userservicecategory?: userCreateNestedOneWithoutUserservicecategoryInput
    metatags?: metaCreateNestedOneWithoutServicecategoryInput
  }

  export type servicecategoryUncheckedCreateInput = {
    id?: number
    name: string
    description: string
    metaid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    services?: serviceUncheckedCreateNestedManyWithoutServicecategoryInput
    contacts?: contactUncheckedCreateNestedManyWithoutServicecategoryInput
  }

  export type servicecategoryUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    services?: serviceUpdateManyWithoutServicecategoryNestedInput
    contacts?: contactUpdateManyWithoutServicecategoryNestedInput
    userservicecategory?: userUpdateOneWithoutUserservicecategoryNestedInput
    metatags?: metaUpdateOneWithoutServicecategoryNestedInput
  }

  export type servicecategoryUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    metaid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    services?: serviceUncheckedUpdateManyWithoutServicecategoryNestedInput
    contacts?: contactUncheckedUpdateManyWithoutServicecategoryNestedInput
  }

  export type servicecategoryCreateManyInput = {
    id?: number
    name: string
    description: string
    metaid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
  }

  export type servicecategoryUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
  }

  export type servicecategoryUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    metaid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
  }

  export type serviceCreateInput = {
    name: string
    description: JsonNullValueInput | InputJsonValue
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    servicecategory: servicecategoryCreateNestedOneWithoutServicesInput
    pages?: pageCreateNestedManyWithoutServiceInput
    contacts?: contactCreateNestedManyWithoutServiceInput
    offers?: offerCreateNestedManyWithoutServiceInput
    userservice?: userCreateNestedOneWithoutUserserviceInput
    metatags?: metaCreateNestedOneWithoutServicesInput
  }

  export type serviceUncheckedCreateInput = {
    id?: number
    name: string
    description: JsonNullValueInput | InputJsonValue
    servicecategoryid: number
    metaid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    pages?: pageUncheckedCreateNestedManyWithoutServiceInput
    contacts?: contactUncheckedCreateNestedManyWithoutServiceInput
    offers?: offerUncheckedCreateNestedManyWithoutServiceInput
  }

  export type serviceUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: JsonNullValueInput | InputJsonValue
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    servicecategory?: servicecategoryUpdateOneRequiredWithoutServicesNestedInput
    pages?: pageUpdateManyWithoutServiceNestedInput
    contacts?: contactUpdateManyWithoutServiceNestedInput
    offers?: offerUpdateManyWithoutServiceNestedInput
    userservice?: userUpdateOneWithoutUserserviceNestedInput
    metatags?: metaUpdateOneWithoutServicesNestedInput
  }

  export type serviceUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: JsonNullValueInput | InputJsonValue
    servicecategoryid?: IntFieldUpdateOperationsInput | number
    metaid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    pages?: pageUncheckedUpdateManyWithoutServiceNestedInput
    contacts?: contactUncheckedUpdateManyWithoutServiceNestedInput
    offers?: offerUncheckedUpdateManyWithoutServiceNestedInput
  }

  export type serviceCreateManyInput = {
    id?: number
    name: string
    description: JsonNullValueInput | InputJsonValue
    servicecategoryid: number
    metaid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
  }

  export type serviceUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: JsonNullValueInput | InputJsonValue
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
  }

  export type serviceUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: JsonNullValueInput | InputJsonValue
    servicecategoryid?: IntFieldUpdateOperationsInput | number
    metaid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
  }

  export type entranceCreateInput = {
    type: number
    useragent: string
    ipaddress: string
    userid: number
    createdat?: Date | string
  }

  export type entranceUncheckedCreateInput = {
    id?: number
    type: number
    useragent: string
    ipaddress: string
    userid: number
    createdat?: Date | string
  }

  export type entranceUpdateInput = {
    type?: IntFieldUpdateOperationsInput | number
    useragent?: StringFieldUpdateOperationsInput | string
    ipaddress?: StringFieldUpdateOperationsInput | string
    userid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type entranceUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: IntFieldUpdateOperationsInput | number
    useragent?: StringFieldUpdateOperationsInput | string
    ipaddress?: StringFieldUpdateOperationsInput | string
    userid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type entranceCreateManyInput = {
    id?: number
    type: number
    useragent: string
    ipaddress: string
    userid: number
    createdat?: Date | string
  }

  export type entranceUpdateManyMutationInput = {
    type?: IntFieldUpdateOperationsInput | number
    useragent?: StringFieldUpdateOperationsInput | string
    ipaddress?: StringFieldUpdateOperationsInput | string
    userid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type entranceUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: IntFieldUpdateOperationsInput | number
    useragent?: StringFieldUpdateOperationsInput | string
    ipaddress?: StringFieldUpdateOperationsInput | string
    userid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type apiclientCreateInput = {
    name: string
    key: string
    secret: string
    type: number
    createdat?: Date | string
    updatedat?: Date | string | null
    isactive: boolean
    createduser: userCreateNestedOneWithoutCreatedapiclientsInput
    updateduser?: userCreateNestedOneWithoutUpdatedapiclientsInput
  }

  export type apiclientUncheckedCreateInput = {
    id?: number
    name: string
    key: string
    secret: string
    type: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: boolean
  }

  export type apiclientUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    secret?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: BoolFieldUpdateOperationsInput | boolean
    createduser?: userUpdateOneRequiredWithoutCreatedapiclientsNestedInput
    updateduser?: userUpdateOneWithoutUpdatedapiclientsNestedInput
  }

  export type apiclientUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    secret?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type apiclientCreateManyInput = {
    id?: number
    name: string
    key: string
    secret: string
    type: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: boolean
  }

  export type apiclientUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    secret?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type apiclientUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    secret?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type refreshtokenCreateInput = {
    token: string
    createdat?: Date | string
    updatedat?: Date | string | null
    expiresat?: Date | string | null
    user: userCreateNestedOneWithoutRefreshtokensInput
  }

  export type refreshtokenUncheckedCreateInput = {
    id?: number
    userid: number
    token: string
    createdat?: Date | string
    updatedat?: Date | string | null
    expiresat?: Date | string | null
  }

  export type refreshtokenUpdateInput = {
    token?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: userUpdateOneRequiredWithoutRefreshtokensNestedInput
  }

  export type refreshtokenUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userid?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type refreshtokenCreateManyInput = {
    id?: number
    userid: number
    token: string
    createdat?: Date | string
    updatedat?: Date | string | null
    expiresat?: Date | string | null
  }

  export type refreshtokenUpdateManyMutationInput = {
    token?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type refreshtokenUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userid?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type revokedtokenCreateInput = {
    token: string
    date?: Date | string
  }

  export type revokedtokenUncheckedCreateInput = {
    id?: number
    token: string
    date?: Date | string
  }

  export type revokedtokenUpdateInput = {
    token?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type revokedtokenUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type revokedtokenCreateManyInput = {
    id?: number
    token: string
    date?: Date | string
  }

  export type revokedtokenUpdateManyMutationInput = {
    token?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type revokedtokenUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type roleCreateInput = {
    name: string
    createdat?: Date | string
    updatedat?: Date | string | null
    issystemrole?: boolean
    createduser: userCreateNestedOneWithoutCreatedrolesInput
    updateduser?: userCreateNestedOneWithoutUpdatedrolesInput
    rolepermissions?: rolepermissionCreateNestedManyWithoutRoleInput
    userroles?: userroleCreateNestedManyWithoutRoleInput
  }

  export type roleUncheckedCreateInput = {
    id?: number
    name: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    issystemrole?: boolean
    rolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutRoleInput
    userroles?: userroleUncheckedCreateNestedManyWithoutRoleInput
  }

  export type roleUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    issystemrole?: BoolFieldUpdateOperationsInput | boolean
    createduser?: userUpdateOneRequiredWithoutCreatedrolesNestedInput
    updateduser?: userUpdateOneWithoutUpdatedrolesNestedInput
    rolepermissions?: rolepermissionUpdateManyWithoutRoleNestedInput
    userroles?: userroleUpdateManyWithoutRoleNestedInput
  }

  export type roleUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    issystemrole?: BoolFieldUpdateOperationsInput | boolean
    rolepermissions?: rolepermissionUncheckedUpdateManyWithoutRoleNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type roleCreateManyInput = {
    id?: number
    name: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    issystemrole?: boolean
  }

  export type roleUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    issystemrole?: BoolFieldUpdateOperationsInput | boolean
  }

  export type roleUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    issystemrole?: BoolFieldUpdateOperationsInput | boolean
  }

  export type notificationCreateInput = {
    message: string
    url: string
    createdby: number
    createdat?: Date | string
    readedat?: Date | string | null
    to: userCreateNestedOneWithoutNotificationuserInput
  }

  export type notificationUncheckedCreateInput = {
    id?: number
    touserid: number
    message: string
    url: string
    createdby: number
    createdat?: Date | string
    readedat?: Date | string | null
  }

  export type notificationUpdateInput = {
    message?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    readedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    to?: userUpdateOneRequiredWithoutNotificationuserNestedInput
  }

  export type notificationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    touserid?: IntFieldUpdateOperationsInput | number
    message?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    readedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type notificationCreateManyInput = {
    id?: number
    touserid: number
    message: string
    url: string
    createdby: number
    createdat?: Date | string
    readedat?: Date | string | null
  }

  export type notificationUpdateManyMutationInput = {
    message?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    readedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type notificationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    touserid?: IntFieldUpdateOperationsInput | number
    message?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    readedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type permissionCreateInput = {
    name: string
    value: string
    group: string
    description: string
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreatedpermissionsInput
    updateduser?: userCreateNestedOneWithoutUpdatedpermissionsInput
    rolepermissions?: rolepermissionCreateNestedManyWithoutPermissionInput
    userpermissions?: userpermissionCreateNestedManyWithoutPermissionInput
  }

  export type permissionUncheckedCreateInput = {
    id?: number
    name: string
    value: string
    group: string
    description: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    rolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutPermissionInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutPermissionInput
  }

  export type permissionUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    group?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreatedpermissionsNestedInput
    updateduser?: userUpdateOneWithoutUpdatedpermissionsNestedInput
    rolepermissions?: rolepermissionUpdateManyWithoutPermissionNestedInput
    userpermissions?: userpermissionUpdateManyWithoutPermissionNestedInput
  }

  export type permissionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    group?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rolepermissions?: rolepermissionUncheckedUpdateManyWithoutPermissionNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutPermissionNestedInput
  }

  export type permissionCreateManyInput = {
    id?: number
    name: string
    value: string
    group: string
    description: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
  }

  export type permissionUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    group?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type permissionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    group?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type rolepermissionCreateInput = {
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreatedrolepermissionsInput
    permission: permissionCreateNestedOneWithoutRolepermissionsInput
    role: roleCreateNestedOneWithoutRolepermissionsInput
    updateduser?: userCreateNestedOneWithoutUpdatedrolepermissionsInput
  }

  export type rolepermissionUncheckedCreateInput = {
    id?: number
    roleid: number
    permissionid: number
    createdat?: Date | string
    createdby: number
    updatedby?: number | null
    updatedat?: Date | string | null
  }

  export type rolepermissionUpdateInput = {
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreatedrolepermissionsNestedInput
    permission?: permissionUpdateOneRequiredWithoutRolepermissionsNestedInput
    role?: roleUpdateOneRequiredWithoutRolepermissionsNestedInput
    updateduser?: userUpdateOneWithoutUpdatedrolepermissionsNestedInput
  }

  export type rolepermissionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    roleid?: IntFieldUpdateOperationsInput | number
    permissionid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type rolepermissionCreateManyInput = {
    id?: number
    roleid: number
    permissionid: number
    createdat?: Date | string
    createdby: number
    updatedby?: number | null
    updatedat?: Date | string | null
  }

  export type rolepermissionUpdateManyMutationInput = {
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type rolepermissionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    roleid?: IntFieldUpdateOperationsInput | number
    permissionid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userCreateInput = {
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    useroffers?: offerCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactCreateNestedManyWithoutUsercontactsInput
    userpages?: pageCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceCreateNestedManyWithoutUserserviceInput
  }

  export type userUncheckedCreateInput = {
    id?: number
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    useroffers?: offerUncheckedCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactUncheckedCreateNestedManyWithoutUsercontactsInput
    userpages?: pageUncheckedCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryUncheckedCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceUncheckedCreateNestedManyWithoutUserserviceInput
  }

  export type userUpdateInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    useroffers?: offerUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUpdateManyWithoutUserserviceNestedInput
  }

  export type userUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    useroffers?: offerUncheckedUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUncheckedUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUncheckedUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUncheckedUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUncheckedUpdateManyWithoutUserserviceNestedInput
  }

  export type userCreateManyInput = {
    id?: number
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    status?: number
  }

  export type userUpdateManyMutationInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
  }

  export type userUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
  }

  export type userpermissionCreateInput = {
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreateduserpermissionsInput
    permission: permissionCreateNestedOneWithoutUserpermissionsInput
    updateduser?: userCreateNestedOneWithoutUpdateduserpermissionsInput
    user: userCreateNestedOneWithoutUserpermissionsInput
  }

  export type userpermissionUncheckedCreateInput = {
    id?: number
    userid: number
    permissionid: number
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
  }

  export type userpermissionUpdateInput = {
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreateduserpermissionsNestedInput
    permission?: permissionUpdateOneRequiredWithoutUserpermissionsNestedInput
    updateduser?: userUpdateOneWithoutUpdateduserpermissionsNestedInput
    user?: userUpdateOneRequiredWithoutUserpermissionsNestedInput
  }

  export type userpermissionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userid?: IntFieldUpdateOperationsInput | number
    permissionid?: IntFieldUpdateOperationsInput | number
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userpermissionCreateManyInput = {
    id?: number
    userid: number
    permissionid: number
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
  }

  export type userpermissionUpdateManyMutationInput = {
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userpermissionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userid?: IntFieldUpdateOperationsInput | number
    permissionid?: IntFieldUpdateOperationsInput | number
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userroleCreateInput = {
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreateduserrolesInput
    role: roleCreateNestedOneWithoutUserrolesInput
    updateduser?: userCreateNestedOneWithoutUpdateduserrolesInput
    user: userCreateNestedOneWithoutUserrolesInput
  }

  export type userroleUncheckedCreateInput = {
    id?: number
    userid: number
    roleid: number
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
  }

  export type userroleUpdateInput = {
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreateduserrolesNestedInput
    role?: roleUpdateOneRequiredWithoutUserrolesNestedInput
    updateduser?: userUpdateOneWithoutUpdateduserrolesNestedInput
    user?: userUpdateOneRequiredWithoutUserrolesNestedInput
  }

  export type userroleUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userid?: IntFieldUpdateOperationsInput | number
    roleid?: IntFieldUpdateOperationsInput | number
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userroleCreateManyInput = {
    id?: number
    userid: number
    roleid: number
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
  }

  export type userroleUpdateManyMutationInput = {
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userroleUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userid?: IntFieldUpdateOperationsInput | number
    roleid?: IntFieldUpdateOperationsInput | number
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type BlogRelationFilter = {
    is?: blogWhereInput
    isNot?: blogWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type blogcommentCountOrderByAggregateInput = {
    id?: SortOrder
    blogid?: SortOrder
    name?: SortOrder
    email?: SortOrder
    comment?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }

  export type blogcommentAvgOrderByAggregateInput = {
    id?: SortOrder
    blogid?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }

  export type blogcommentMaxOrderByAggregateInput = {
    id?: SortOrder
    blogid?: SortOrder
    name?: SortOrder
    email?: SortOrder
    comment?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }

  export type blogcommentMinOrderByAggregateInput = {
    id?: SortOrder
    blogid?: SortOrder
    name?: SortOrder
    email?: SortOrder
    comment?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }

  export type blogcommentSumOrderByAggregateInput = {
    id?: SortOrder
    blogid?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type BlogcategoryRelationFilter = {
    is?: blogcategoryWhereInput
    isNot?: blogcategoryWhereInput
  }

  export type BlogcommentListRelationFilter = {
    every?: blogcommentWhereInput
    some?: blogcommentWhereInput
    none?: blogcommentWhereInput
  }

  export type blogcommentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type blogCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    slug?: SortOrder
    featuredimage?: SortOrder
    blogcategoryid?: SortOrder
    metaid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }

  export type blogAvgOrderByAggregateInput = {
    id?: SortOrder
    blogcategoryid?: SortOrder
    metaid?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }

  export type blogMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    slug?: SortOrder
    featuredimage?: SortOrder
    blogcategoryid?: SortOrder
    metaid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }

  export type blogMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    slug?: SortOrder
    featuredimage?: SortOrder
    blogcategoryid?: SortOrder
    metaid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }

  export type blogSumOrderByAggregateInput = {
    id?: SortOrder
    blogcategoryid?: SortOrder
    metaid?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }

  export type BlogListRelationFilter = {
    every?: blogWhereInput
    some?: blogWhereInput
    none?: blogWhereInput
  }

  export type MetaNullableRelationFilter = {
    is?: metaWhereInput | null
    isNot?: metaWhereInput | null
  }

  export type blogOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type blogcategoryCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    featuredimage?: SortOrder
    metaid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }

  export type blogcategoryAvgOrderByAggregateInput = {
    id?: SortOrder
    metaid?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }

  export type blogcategoryMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    featuredimage?: SortOrder
    metaid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }

  export type blogcategoryMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    featuredimage?: SortOrder
    metaid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }

  export type blogcategorySumOrderByAggregateInput = {
    id?: SortOrder
    metaid?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }

  export type PageListRelationFilter = {
    every?: pageWhereInput
    some?: pageWhereInput
    none?: pageWhereInput
  }

  export type ServiceListRelationFilter = {
    every?: serviceWhereInput
    some?: serviceWhereInput
    none?: serviceWhereInput
  }

  export type ServicecategoryListRelationFilter = {
    every?: servicecategoryWhereInput
    some?: servicecategoryWhereInput
    none?: servicecategoryWhereInput
  }

  export type BlogcategoryListRelationFilter = {
    every?: blogcategoryWhereInput
    some?: blogcategoryWhereInput
    none?: blogcategoryWhereInput
  }

  export type pageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type serviceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type servicecategoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type blogcategoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type metaCountOrderByAggregateInput = {
    id?: SortOrder
    metatitle?: SortOrder
    metadescription?: SortOrder
    metakeywords?: SortOrder
    metarobots?: SortOrder
    metahttpequiv?: SortOrder
    metalanguage?: SortOrder
    metaauthor?: SortOrder
    metarevisit?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
  }

  export type metaAvgOrderByAggregateInput = {
    id?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
  }

  export type metaMaxOrderByAggregateInput = {
    id?: SortOrder
    metatitle?: SortOrder
    metadescription?: SortOrder
    metakeywords?: SortOrder
    metarobots?: SortOrder
    metahttpequiv?: SortOrder
    metalanguage?: SortOrder
    metaauthor?: SortOrder
    metarevisit?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
  }

  export type metaMinOrderByAggregateInput = {
    id?: SortOrder
    metatitle?: SortOrder
    metadescription?: SortOrder
    metakeywords?: SortOrder
    metarobots?: SortOrder
    metahttpequiv?: SortOrder
    metalanguage?: SortOrder
    metaauthor?: SortOrder
    metarevisit?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
  }

  export type metaSumOrderByAggregateInput = {
    id?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type ServiceNullableRelationFilter = {
    is?: serviceWhereInput | null
    isNot?: serviceWhereInput | null
  }

  export type UserNullableRelationFilter = {
    is?: userWhereInput | null
    isNot?: userWhereInput | null
  }

  export type offerCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    saleprice?: SortOrder
    salepricecurrency?: SortOrder
    salepriceperiod?: SortOrder
    discountprice?: SortOrder
    discountamount?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
    serviceid?: SortOrder
  }

  export type offerAvgOrderByAggregateInput = {
    id?: SortOrder
    saleprice?: SortOrder
    discountprice?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
    serviceid?: SortOrder
  }

  export type offerMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    saleprice?: SortOrder
    salepricecurrency?: SortOrder
    salepriceperiod?: SortOrder
    discountprice?: SortOrder
    discountamount?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
    serviceid?: SortOrder
  }

  export type offerMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    saleprice?: SortOrder
    salepricecurrency?: SortOrder
    salepriceperiod?: SortOrder
    discountprice?: SortOrder
    discountamount?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
    serviceid?: SortOrder
  }

  export type offerSumOrderByAggregateInput = {
    id?: SortOrder
    saleprice?: SortOrder
    discountprice?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
    serviceid?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type newsletterCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
  }

  export type newsletterAvgOrderByAggregateInput = {
    id?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
  }

  export type newsletterMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
  }

  export type newsletterMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
  }

  export type newsletterSumOrderByAggregateInput = {
    id?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type ServicecategoryNullableRelationFilter = {
    is?: servicecategoryWhereInput | null
    isNot?: servicecategoryWhereInput | null
  }

  export type contactCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    message?: SortOrder
    attachment?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isclosed?: SortOrder
    servicecategoryid?: SortOrder
    serviceid?: SortOrder
  }

  export type contactAvgOrderByAggregateInput = {
    id?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
    isclosed?: SortOrder
    servicecategoryid?: SortOrder
    serviceid?: SortOrder
  }

  export type contactMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    message?: SortOrder
    attachment?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isclosed?: SortOrder
    servicecategoryid?: SortOrder
    serviceid?: SortOrder
  }

  export type contactMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    message?: SortOrder
    attachment?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isclosed?: SortOrder
    servicecategoryid?: SortOrder
    serviceid?: SortOrder
  }

  export type contactSumOrderByAggregateInput = {
    id?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
    isclosed?: SortOrder
    servicecategoryid?: SortOrder
    serviceid?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type pageCountOrderByAggregateInput = {
    id?: SortOrder
    metaid?: SortOrder
    name?: SortOrder
    content?: SortOrder
    slug?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
    serviceid?: SortOrder
  }

  export type pageAvgOrderByAggregateInput = {
    id?: SortOrder
    metaid?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
    serviceid?: SortOrder
  }

  export type pageMaxOrderByAggregateInput = {
    id?: SortOrder
    metaid?: SortOrder
    name?: SortOrder
    content?: SortOrder
    slug?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
    serviceid?: SortOrder
  }

  export type pageMinOrderByAggregateInput = {
    id?: SortOrder
    metaid?: SortOrder
    name?: SortOrder
    content?: SortOrder
    slug?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
    serviceid?: SortOrder
  }

  export type pageSumOrderByAggregateInput = {
    id?: SortOrder
    metaid?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
    serviceid?: SortOrder
  }

  export type ContactListRelationFilter = {
    every?: contactWhereInput
    some?: contactWhereInput
    none?: contactWhereInput
  }

  export type contactOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type servicecategoryCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    metaid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }

  export type servicecategoryAvgOrderByAggregateInput = {
    id?: SortOrder
    metaid?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }

  export type servicecategoryMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    metaid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }

  export type servicecategoryMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    metaid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }

  export type servicecategorySumOrderByAggregateInput = {
    id?: SortOrder
    metaid?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }
  export type JsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type ServicecategoryRelationFilter = {
    is?: servicecategoryWhereInput
    isNot?: servicecategoryWhereInput
  }

  export type OfferListRelationFilter = {
    every?: offerWhereInput
    some?: offerWhereInput
    none?: offerWhereInput
  }

  export type offerOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type serviceCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    servicecategoryid?: SortOrder
    metaid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }

  export type serviceAvgOrderByAggregateInput = {
    id?: SortOrder
    servicecategoryid?: SortOrder
    metaid?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }

  export type serviceMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    servicecategoryid?: SortOrder
    metaid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }

  export type serviceMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    servicecategoryid?: SortOrder
    metaid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }

  export type serviceSumOrderByAggregateInput = {
    id?: SortOrder
    servicecategoryid?: SortOrder
    metaid?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type entranceCountOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    useragent?: SortOrder
    ipaddress?: SortOrder
    userid?: SortOrder
    createdat?: SortOrder
  }

  export type entranceAvgOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    userid?: SortOrder
  }

  export type entranceMaxOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    useragent?: SortOrder
    ipaddress?: SortOrder
    userid?: SortOrder
    createdat?: SortOrder
  }

  export type entranceMinOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    useragent?: SortOrder
    ipaddress?: SortOrder
    userid?: SortOrder
    createdat?: SortOrder
  }

  export type entranceSumOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    userid?: SortOrder
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type UserRelationFilter = {
    is?: userWhereInput
    isNot?: userWhereInput
  }

  export type apiclientCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    key?: SortOrder
    secret?: SortOrder
    type?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }

  export type apiclientAvgOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
  }

  export type apiclientMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    key?: SortOrder
    secret?: SortOrder
    type?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }

  export type apiclientMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    key?: SortOrder
    secret?: SortOrder
    type?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedat?: SortOrder
    updatedby?: SortOrder
    isactive?: SortOrder
  }

  export type apiclientSumOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type refreshtokenCountOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
    token?: SortOrder
    createdat?: SortOrder
    updatedat?: SortOrder
    expiresat?: SortOrder
  }

  export type refreshtokenAvgOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
  }

  export type refreshtokenMaxOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
    token?: SortOrder
    createdat?: SortOrder
    updatedat?: SortOrder
    expiresat?: SortOrder
  }

  export type refreshtokenMinOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
    token?: SortOrder
    createdat?: SortOrder
    updatedat?: SortOrder
    expiresat?: SortOrder
  }

  export type refreshtokenSumOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
  }

  export type revokedtokenCountOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    date?: SortOrder
  }

  export type revokedtokenAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type revokedtokenMaxOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    date?: SortOrder
  }

  export type revokedtokenMinOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    date?: SortOrder
  }

  export type revokedtokenSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type RolepermissionListRelationFilter = {
    every?: rolepermissionWhereInput
    some?: rolepermissionWhereInput
    none?: rolepermissionWhereInput
  }

  export type UserroleListRelationFilter = {
    every?: userroleWhereInput
    some?: userroleWhereInput
    none?: userroleWhereInput
  }

  export type rolepermissionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type userroleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type roleCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
    issystemrole?: SortOrder
  }

  export type roleAvgOrderByAggregateInput = {
    id?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
  }

  export type roleMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
    issystemrole?: SortOrder
  }

  export type roleMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
    issystemrole?: SortOrder
  }

  export type roleSumOrderByAggregateInput = {
    id?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
  }

  export type notificationCountOrderByAggregateInput = {
    id?: SortOrder
    touserid?: SortOrder
    message?: SortOrder
    url?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    readedat?: SortOrder
  }

  export type notificationAvgOrderByAggregateInput = {
    id?: SortOrder
    touserid?: SortOrder
    createdby?: SortOrder
  }

  export type notificationMaxOrderByAggregateInput = {
    id?: SortOrder
    touserid?: SortOrder
    message?: SortOrder
    url?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    readedat?: SortOrder
  }

  export type notificationMinOrderByAggregateInput = {
    id?: SortOrder
    touserid?: SortOrder
    message?: SortOrder
    url?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    readedat?: SortOrder
  }

  export type notificationSumOrderByAggregateInput = {
    id?: SortOrder
    touserid?: SortOrder
    createdby?: SortOrder
  }

  export type UserpermissionListRelationFilter = {
    every?: userpermissionWhereInput
    some?: userpermissionWhereInput
    none?: userpermissionWhereInput
  }

  export type userpermissionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type permissionCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    value?: SortOrder
    group?: SortOrder
    description?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
  }

  export type permissionAvgOrderByAggregateInput = {
    id?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
  }

  export type permissionMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    value?: SortOrder
    group?: SortOrder
    description?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
  }

  export type permissionMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    value?: SortOrder
    group?: SortOrder
    description?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
  }

  export type permissionSumOrderByAggregateInput = {
    id?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
  }

  export type PermissionRelationFilter = {
    is?: permissionWhereInput
    isNot?: permissionWhereInput
  }

  export type RoleRelationFilter = {
    is?: roleWhereInput
    isNot?: roleWhereInput
  }

  export type rolepermissionCountOrderByAggregateInput = {
    id?: SortOrder
    roleid?: SortOrder
    permissionid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
  }

  export type rolepermissionAvgOrderByAggregateInput = {
    id?: SortOrder
    roleid?: SortOrder
    permissionid?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
  }

  export type rolepermissionMaxOrderByAggregateInput = {
    id?: SortOrder
    roleid?: SortOrder
    permissionid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
  }

  export type rolepermissionMinOrderByAggregateInput = {
    id?: SortOrder
    roleid?: SortOrder
    permissionid?: SortOrder
    createdat?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
  }

  export type rolepermissionSumOrderByAggregateInput = {
    id?: SortOrder
    roleid?: SortOrder
    permissionid?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
  }

  export type NotificationListRelationFilter = {
    every?: notificationWhereInput
    some?: notificationWhereInput
    none?: notificationWhereInput
  }

  export type ApiclientListRelationFilter = {
    every?: apiclientWhereInput
    some?: apiclientWhereInput
    none?: apiclientWhereInput
  }

  export type PermissionListRelationFilter = {
    every?: permissionWhereInput
    some?: permissionWhereInput
    none?: permissionWhereInput
  }

  export type RefreshtokenListRelationFilter = {
    every?: refreshtokenWhereInput
    some?: refreshtokenWhereInput
    none?: refreshtokenWhereInput
  }

  export type RoleListRelationFilter = {
    every?: roleWhereInput
    some?: roleWhereInput
    none?: roleWhereInput
  }

  export type UserListRelationFilter = {
    every?: userWhereInput
    some?: userWhereInput
    none?: userWhereInput
  }

  export type notificationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type apiclientOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type permissionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type refreshtokenOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type roleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type userOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type userCountOrderByAggregateInput = {
    id?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    password?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
    status?: SortOrder
  }

  export type userAvgOrderByAggregateInput = {
    id?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
    status?: SortOrder
  }

  export type userMaxOrderByAggregateInput = {
    id?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    password?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
    status?: SortOrder
  }

  export type userMinOrderByAggregateInput = {
    id?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    password?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
    status?: SortOrder
  }

  export type userSumOrderByAggregateInput = {
    id?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
    status?: SortOrder
  }

  export type userpermissionCountOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
    permissionid?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
  }

  export type userpermissionAvgOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
    permissionid?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
  }

  export type userpermissionMaxOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
    permissionid?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
  }

  export type userpermissionMinOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
    permissionid?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
  }

  export type userpermissionSumOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
    permissionid?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
  }

  export type userroleCountOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
    roleid?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
  }

  export type userroleAvgOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
    roleid?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
  }

  export type userroleMaxOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
    roleid?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
  }

  export type userroleMinOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
    roleid?: SortOrder
    createdby?: SortOrder
    createdat?: SortOrder
    updatedby?: SortOrder
    updatedat?: SortOrder
  }

  export type userroleSumOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
    roleid?: SortOrder
    createdby?: SortOrder
    updatedby?: SortOrder
  }

  export type blogCreateNestedOneWithoutBlogcommentsInput = {
    create?: XOR<blogCreateWithoutBlogcommentsInput, blogUncheckedCreateWithoutBlogcommentsInput>
    connectOrCreate?: blogCreateOrConnectWithoutBlogcommentsInput
    connect?: blogWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type blogUpdateOneRequiredWithoutBlogcommentsNestedInput = {
    create?: XOR<blogCreateWithoutBlogcommentsInput, blogUncheckedCreateWithoutBlogcommentsInput>
    connectOrCreate?: blogCreateOrConnectWithoutBlogcommentsInput
    upsert?: blogUpsertWithoutBlogcommentsInput
    connect?: blogWhereUniqueInput
    update?: XOR<XOR<blogUpdateToOneWithWhereWithoutBlogcommentsInput, blogUpdateWithoutBlogcommentsInput>, blogUncheckedUpdateWithoutBlogcommentsInput>
  }

  export type blogcategoryCreateNestedOneWithoutBlogsInput = {
    create?: XOR<blogcategoryCreateWithoutBlogsInput, blogcategoryUncheckedCreateWithoutBlogsInput>
    connectOrCreate?: blogcategoryCreateOrConnectWithoutBlogsInput
    connect?: blogcategoryWhereUniqueInput
  }

  export type blogcommentCreateNestedManyWithoutBlogInput = {
    create?: XOR<blogcommentCreateWithoutBlogInput, blogcommentUncheckedCreateWithoutBlogInput> | blogcommentCreateWithoutBlogInput[] | blogcommentUncheckedCreateWithoutBlogInput[]
    connectOrCreate?: blogcommentCreateOrConnectWithoutBlogInput | blogcommentCreateOrConnectWithoutBlogInput[]
    createMany?: blogcommentCreateManyBlogInputEnvelope
    connect?: blogcommentWhereUniqueInput | blogcommentWhereUniqueInput[]
  }

  export type blogcommentUncheckedCreateNestedManyWithoutBlogInput = {
    create?: XOR<blogcommentCreateWithoutBlogInput, blogcommentUncheckedCreateWithoutBlogInput> | blogcommentCreateWithoutBlogInput[] | blogcommentUncheckedCreateWithoutBlogInput[]
    connectOrCreate?: blogcommentCreateOrConnectWithoutBlogInput | blogcommentCreateOrConnectWithoutBlogInput[]
    createMany?: blogcommentCreateManyBlogInputEnvelope
    connect?: blogcommentWhereUniqueInput | blogcommentWhereUniqueInput[]
  }

  export type blogcategoryUpdateOneRequiredWithoutBlogsNestedInput = {
    create?: XOR<blogcategoryCreateWithoutBlogsInput, blogcategoryUncheckedCreateWithoutBlogsInput>
    connectOrCreate?: blogcategoryCreateOrConnectWithoutBlogsInput
    upsert?: blogcategoryUpsertWithoutBlogsInput
    connect?: blogcategoryWhereUniqueInput
    update?: XOR<XOR<blogcategoryUpdateToOneWithWhereWithoutBlogsInput, blogcategoryUpdateWithoutBlogsInput>, blogcategoryUncheckedUpdateWithoutBlogsInput>
  }

  export type blogcommentUpdateManyWithoutBlogNestedInput = {
    create?: XOR<blogcommentCreateWithoutBlogInput, blogcommentUncheckedCreateWithoutBlogInput> | blogcommentCreateWithoutBlogInput[] | blogcommentUncheckedCreateWithoutBlogInput[]
    connectOrCreate?: blogcommentCreateOrConnectWithoutBlogInput | blogcommentCreateOrConnectWithoutBlogInput[]
    upsert?: blogcommentUpsertWithWhereUniqueWithoutBlogInput | blogcommentUpsertWithWhereUniqueWithoutBlogInput[]
    createMany?: blogcommentCreateManyBlogInputEnvelope
    set?: blogcommentWhereUniqueInput | blogcommentWhereUniqueInput[]
    disconnect?: blogcommentWhereUniqueInput | blogcommentWhereUniqueInput[]
    delete?: blogcommentWhereUniqueInput | blogcommentWhereUniqueInput[]
    connect?: blogcommentWhereUniqueInput | blogcommentWhereUniqueInput[]
    update?: blogcommentUpdateWithWhereUniqueWithoutBlogInput | blogcommentUpdateWithWhereUniqueWithoutBlogInput[]
    updateMany?: blogcommentUpdateManyWithWhereWithoutBlogInput | blogcommentUpdateManyWithWhereWithoutBlogInput[]
    deleteMany?: blogcommentScalarWhereInput | blogcommentScalarWhereInput[]
  }

  export type blogcommentUncheckedUpdateManyWithoutBlogNestedInput = {
    create?: XOR<blogcommentCreateWithoutBlogInput, blogcommentUncheckedCreateWithoutBlogInput> | blogcommentCreateWithoutBlogInput[] | blogcommentUncheckedCreateWithoutBlogInput[]
    connectOrCreate?: blogcommentCreateOrConnectWithoutBlogInput | blogcommentCreateOrConnectWithoutBlogInput[]
    upsert?: blogcommentUpsertWithWhereUniqueWithoutBlogInput | blogcommentUpsertWithWhereUniqueWithoutBlogInput[]
    createMany?: blogcommentCreateManyBlogInputEnvelope
    set?: blogcommentWhereUniqueInput | blogcommentWhereUniqueInput[]
    disconnect?: blogcommentWhereUniqueInput | blogcommentWhereUniqueInput[]
    delete?: blogcommentWhereUniqueInput | blogcommentWhereUniqueInput[]
    connect?: blogcommentWhereUniqueInput | blogcommentWhereUniqueInput[]
    update?: blogcommentUpdateWithWhereUniqueWithoutBlogInput | blogcommentUpdateWithWhereUniqueWithoutBlogInput[]
    updateMany?: blogcommentUpdateManyWithWhereWithoutBlogInput | blogcommentUpdateManyWithWhereWithoutBlogInput[]
    deleteMany?: blogcommentScalarWhereInput | blogcommentScalarWhereInput[]
  }

  export type blogCreateNestedManyWithoutBlogcategoryInput = {
    create?: XOR<blogCreateWithoutBlogcategoryInput, blogUncheckedCreateWithoutBlogcategoryInput> | blogCreateWithoutBlogcategoryInput[] | blogUncheckedCreateWithoutBlogcategoryInput[]
    connectOrCreate?: blogCreateOrConnectWithoutBlogcategoryInput | blogCreateOrConnectWithoutBlogcategoryInput[]
    createMany?: blogCreateManyBlogcategoryInputEnvelope
    connect?: blogWhereUniqueInput | blogWhereUniqueInput[]
  }

  export type metaCreateNestedOneWithoutBlogcategoryInput = {
    create?: XOR<metaCreateWithoutBlogcategoryInput, metaUncheckedCreateWithoutBlogcategoryInput>
    connectOrCreate?: metaCreateOrConnectWithoutBlogcategoryInput
    connect?: metaWhereUniqueInput
  }

  export type blogUncheckedCreateNestedManyWithoutBlogcategoryInput = {
    create?: XOR<blogCreateWithoutBlogcategoryInput, blogUncheckedCreateWithoutBlogcategoryInput> | blogCreateWithoutBlogcategoryInput[] | blogUncheckedCreateWithoutBlogcategoryInput[]
    connectOrCreate?: blogCreateOrConnectWithoutBlogcategoryInput | blogCreateOrConnectWithoutBlogcategoryInput[]
    createMany?: blogCreateManyBlogcategoryInputEnvelope
    connect?: blogWhereUniqueInput | blogWhereUniqueInput[]
  }

  export type blogUpdateManyWithoutBlogcategoryNestedInput = {
    create?: XOR<blogCreateWithoutBlogcategoryInput, blogUncheckedCreateWithoutBlogcategoryInput> | blogCreateWithoutBlogcategoryInput[] | blogUncheckedCreateWithoutBlogcategoryInput[]
    connectOrCreate?: blogCreateOrConnectWithoutBlogcategoryInput | blogCreateOrConnectWithoutBlogcategoryInput[]
    upsert?: blogUpsertWithWhereUniqueWithoutBlogcategoryInput | blogUpsertWithWhereUniqueWithoutBlogcategoryInput[]
    createMany?: blogCreateManyBlogcategoryInputEnvelope
    set?: blogWhereUniqueInput | blogWhereUniqueInput[]
    disconnect?: blogWhereUniqueInput | blogWhereUniqueInput[]
    delete?: blogWhereUniqueInput | blogWhereUniqueInput[]
    connect?: blogWhereUniqueInput | blogWhereUniqueInput[]
    update?: blogUpdateWithWhereUniqueWithoutBlogcategoryInput | blogUpdateWithWhereUniqueWithoutBlogcategoryInput[]
    updateMany?: blogUpdateManyWithWhereWithoutBlogcategoryInput | blogUpdateManyWithWhereWithoutBlogcategoryInput[]
    deleteMany?: blogScalarWhereInput | blogScalarWhereInput[]
  }

  export type metaUpdateOneWithoutBlogcategoryNestedInput = {
    create?: XOR<metaCreateWithoutBlogcategoryInput, metaUncheckedCreateWithoutBlogcategoryInput>
    connectOrCreate?: metaCreateOrConnectWithoutBlogcategoryInput
    upsert?: metaUpsertWithoutBlogcategoryInput
    disconnect?: metaWhereInput | boolean
    delete?: metaWhereInput | boolean
    connect?: metaWhereUniqueInput
    update?: XOR<XOR<metaUpdateToOneWithWhereWithoutBlogcategoryInput, metaUpdateWithoutBlogcategoryInput>, metaUncheckedUpdateWithoutBlogcategoryInput>
  }

  export type blogUncheckedUpdateManyWithoutBlogcategoryNestedInput = {
    create?: XOR<blogCreateWithoutBlogcategoryInput, blogUncheckedCreateWithoutBlogcategoryInput> | blogCreateWithoutBlogcategoryInput[] | blogUncheckedCreateWithoutBlogcategoryInput[]
    connectOrCreate?: blogCreateOrConnectWithoutBlogcategoryInput | blogCreateOrConnectWithoutBlogcategoryInput[]
    upsert?: blogUpsertWithWhereUniqueWithoutBlogcategoryInput | blogUpsertWithWhereUniqueWithoutBlogcategoryInput[]
    createMany?: blogCreateManyBlogcategoryInputEnvelope
    set?: blogWhereUniqueInput | blogWhereUniqueInput[]
    disconnect?: blogWhereUniqueInput | blogWhereUniqueInput[]
    delete?: blogWhereUniqueInput | blogWhereUniqueInput[]
    connect?: blogWhereUniqueInput | blogWhereUniqueInput[]
    update?: blogUpdateWithWhereUniqueWithoutBlogcategoryInput | blogUpdateWithWhereUniqueWithoutBlogcategoryInput[]
    updateMany?: blogUpdateManyWithWhereWithoutBlogcategoryInput | blogUpdateManyWithWhereWithoutBlogcategoryInput[]
    deleteMany?: blogScalarWhereInput | blogScalarWhereInput[]
  }

  export type pageCreateNestedManyWithoutMetatagsInput = {
    create?: XOR<pageCreateWithoutMetatagsInput, pageUncheckedCreateWithoutMetatagsInput> | pageCreateWithoutMetatagsInput[] | pageUncheckedCreateWithoutMetatagsInput[]
    connectOrCreate?: pageCreateOrConnectWithoutMetatagsInput | pageCreateOrConnectWithoutMetatagsInput[]
    createMany?: pageCreateManyMetatagsInputEnvelope
    connect?: pageWhereUniqueInput | pageWhereUniqueInput[]
  }

  export type serviceCreateNestedManyWithoutMetatagsInput = {
    create?: XOR<serviceCreateWithoutMetatagsInput, serviceUncheckedCreateWithoutMetatagsInput> | serviceCreateWithoutMetatagsInput[] | serviceUncheckedCreateWithoutMetatagsInput[]
    connectOrCreate?: serviceCreateOrConnectWithoutMetatagsInput | serviceCreateOrConnectWithoutMetatagsInput[]
    createMany?: serviceCreateManyMetatagsInputEnvelope
    connect?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
  }

  export type servicecategoryCreateNestedManyWithoutMetatagsInput = {
    create?: XOR<servicecategoryCreateWithoutMetatagsInput, servicecategoryUncheckedCreateWithoutMetatagsInput> | servicecategoryCreateWithoutMetatagsInput[] | servicecategoryUncheckedCreateWithoutMetatagsInput[]
    connectOrCreate?: servicecategoryCreateOrConnectWithoutMetatagsInput | servicecategoryCreateOrConnectWithoutMetatagsInput[]
    createMany?: servicecategoryCreateManyMetatagsInputEnvelope
    connect?: servicecategoryWhereUniqueInput | servicecategoryWhereUniqueInput[]
  }

  export type blogcategoryCreateNestedManyWithoutBlogcategorymetaInput = {
    create?: XOR<blogcategoryCreateWithoutBlogcategorymetaInput, blogcategoryUncheckedCreateWithoutBlogcategorymetaInput> | blogcategoryCreateWithoutBlogcategorymetaInput[] | blogcategoryUncheckedCreateWithoutBlogcategorymetaInput[]
    connectOrCreate?: blogcategoryCreateOrConnectWithoutBlogcategorymetaInput | blogcategoryCreateOrConnectWithoutBlogcategorymetaInput[]
    createMany?: blogcategoryCreateManyBlogcategorymetaInputEnvelope
    connect?: blogcategoryWhereUniqueInput | blogcategoryWhereUniqueInput[]
  }

  export type pageUncheckedCreateNestedManyWithoutMetatagsInput = {
    create?: XOR<pageCreateWithoutMetatagsInput, pageUncheckedCreateWithoutMetatagsInput> | pageCreateWithoutMetatagsInput[] | pageUncheckedCreateWithoutMetatagsInput[]
    connectOrCreate?: pageCreateOrConnectWithoutMetatagsInput | pageCreateOrConnectWithoutMetatagsInput[]
    createMany?: pageCreateManyMetatagsInputEnvelope
    connect?: pageWhereUniqueInput | pageWhereUniqueInput[]
  }

  export type serviceUncheckedCreateNestedManyWithoutMetatagsInput = {
    create?: XOR<serviceCreateWithoutMetatagsInput, serviceUncheckedCreateWithoutMetatagsInput> | serviceCreateWithoutMetatagsInput[] | serviceUncheckedCreateWithoutMetatagsInput[]
    connectOrCreate?: serviceCreateOrConnectWithoutMetatagsInput | serviceCreateOrConnectWithoutMetatagsInput[]
    createMany?: serviceCreateManyMetatagsInputEnvelope
    connect?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
  }

  export type servicecategoryUncheckedCreateNestedManyWithoutMetatagsInput = {
    create?: XOR<servicecategoryCreateWithoutMetatagsInput, servicecategoryUncheckedCreateWithoutMetatagsInput> | servicecategoryCreateWithoutMetatagsInput[] | servicecategoryUncheckedCreateWithoutMetatagsInput[]
    connectOrCreate?: servicecategoryCreateOrConnectWithoutMetatagsInput | servicecategoryCreateOrConnectWithoutMetatagsInput[]
    createMany?: servicecategoryCreateManyMetatagsInputEnvelope
    connect?: servicecategoryWhereUniqueInput | servicecategoryWhereUniqueInput[]
  }

  export type blogcategoryUncheckedCreateNestedManyWithoutBlogcategorymetaInput = {
    create?: XOR<blogcategoryCreateWithoutBlogcategorymetaInput, blogcategoryUncheckedCreateWithoutBlogcategorymetaInput> | blogcategoryCreateWithoutBlogcategorymetaInput[] | blogcategoryUncheckedCreateWithoutBlogcategorymetaInput[]
    connectOrCreate?: blogcategoryCreateOrConnectWithoutBlogcategorymetaInput | blogcategoryCreateOrConnectWithoutBlogcategorymetaInput[]
    createMany?: blogcategoryCreateManyBlogcategorymetaInputEnvelope
    connect?: blogcategoryWhereUniqueInput | blogcategoryWhereUniqueInput[]
  }

  export type pageUpdateManyWithoutMetatagsNestedInput = {
    create?: XOR<pageCreateWithoutMetatagsInput, pageUncheckedCreateWithoutMetatagsInput> | pageCreateWithoutMetatagsInput[] | pageUncheckedCreateWithoutMetatagsInput[]
    connectOrCreate?: pageCreateOrConnectWithoutMetatagsInput | pageCreateOrConnectWithoutMetatagsInput[]
    upsert?: pageUpsertWithWhereUniqueWithoutMetatagsInput | pageUpsertWithWhereUniqueWithoutMetatagsInput[]
    createMany?: pageCreateManyMetatagsInputEnvelope
    set?: pageWhereUniqueInput | pageWhereUniqueInput[]
    disconnect?: pageWhereUniqueInput | pageWhereUniqueInput[]
    delete?: pageWhereUniqueInput | pageWhereUniqueInput[]
    connect?: pageWhereUniqueInput | pageWhereUniqueInput[]
    update?: pageUpdateWithWhereUniqueWithoutMetatagsInput | pageUpdateWithWhereUniqueWithoutMetatagsInput[]
    updateMany?: pageUpdateManyWithWhereWithoutMetatagsInput | pageUpdateManyWithWhereWithoutMetatagsInput[]
    deleteMany?: pageScalarWhereInput | pageScalarWhereInput[]
  }

  export type serviceUpdateManyWithoutMetatagsNestedInput = {
    create?: XOR<serviceCreateWithoutMetatagsInput, serviceUncheckedCreateWithoutMetatagsInput> | serviceCreateWithoutMetatagsInput[] | serviceUncheckedCreateWithoutMetatagsInput[]
    connectOrCreate?: serviceCreateOrConnectWithoutMetatagsInput | serviceCreateOrConnectWithoutMetatagsInput[]
    upsert?: serviceUpsertWithWhereUniqueWithoutMetatagsInput | serviceUpsertWithWhereUniqueWithoutMetatagsInput[]
    createMany?: serviceCreateManyMetatagsInputEnvelope
    set?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
    disconnect?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
    delete?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
    connect?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
    update?: serviceUpdateWithWhereUniqueWithoutMetatagsInput | serviceUpdateWithWhereUniqueWithoutMetatagsInput[]
    updateMany?: serviceUpdateManyWithWhereWithoutMetatagsInput | serviceUpdateManyWithWhereWithoutMetatagsInput[]
    deleteMany?: serviceScalarWhereInput | serviceScalarWhereInput[]
  }

  export type servicecategoryUpdateManyWithoutMetatagsNestedInput = {
    create?: XOR<servicecategoryCreateWithoutMetatagsInput, servicecategoryUncheckedCreateWithoutMetatagsInput> | servicecategoryCreateWithoutMetatagsInput[] | servicecategoryUncheckedCreateWithoutMetatagsInput[]
    connectOrCreate?: servicecategoryCreateOrConnectWithoutMetatagsInput | servicecategoryCreateOrConnectWithoutMetatagsInput[]
    upsert?: servicecategoryUpsertWithWhereUniqueWithoutMetatagsInput | servicecategoryUpsertWithWhereUniqueWithoutMetatagsInput[]
    createMany?: servicecategoryCreateManyMetatagsInputEnvelope
    set?: servicecategoryWhereUniqueInput | servicecategoryWhereUniqueInput[]
    disconnect?: servicecategoryWhereUniqueInput | servicecategoryWhereUniqueInput[]
    delete?: servicecategoryWhereUniqueInput | servicecategoryWhereUniqueInput[]
    connect?: servicecategoryWhereUniqueInput | servicecategoryWhereUniqueInput[]
    update?: servicecategoryUpdateWithWhereUniqueWithoutMetatagsInput | servicecategoryUpdateWithWhereUniqueWithoutMetatagsInput[]
    updateMany?: servicecategoryUpdateManyWithWhereWithoutMetatagsInput | servicecategoryUpdateManyWithWhereWithoutMetatagsInput[]
    deleteMany?: servicecategoryScalarWhereInput | servicecategoryScalarWhereInput[]
  }

  export type blogcategoryUpdateManyWithoutBlogcategorymetaNestedInput = {
    create?: XOR<blogcategoryCreateWithoutBlogcategorymetaInput, blogcategoryUncheckedCreateWithoutBlogcategorymetaInput> | blogcategoryCreateWithoutBlogcategorymetaInput[] | blogcategoryUncheckedCreateWithoutBlogcategorymetaInput[]
    connectOrCreate?: blogcategoryCreateOrConnectWithoutBlogcategorymetaInput | blogcategoryCreateOrConnectWithoutBlogcategorymetaInput[]
    upsert?: blogcategoryUpsertWithWhereUniqueWithoutBlogcategorymetaInput | blogcategoryUpsertWithWhereUniqueWithoutBlogcategorymetaInput[]
    createMany?: blogcategoryCreateManyBlogcategorymetaInputEnvelope
    set?: blogcategoryWhereUniqueInput | blogcategoryWhereUniqueInput[]
    disconnect?: blogcategoryWhereUniqueInput | blogcategoryWhereUniqueInput[]
    delete?: blogcategoryWhereUniqueInput | blogcategoryWhereUniqueInput[]
    connect?: blogcategoryWhereUniqueInput | blogcategoryWhereUniqueInput[]
    update?: blogcategoryUpdateWithWhereUniqueWithoutBlogcategorymetaInput | blogcategoryUpdateWithWhereUniqueWithoutBlogcategorymetaInput[]
    updateMany?: blogcategoryUpdateManyWithWhereWithoutBlogcategorymetaInput | blogcategoryUpdateManyWithWhereWithoutBlogcategorymetaInput[]
    deleteMany?: blogcategoryScalarWhereInput | blogcategoryScalarWhereInput[]
  }

  export type pageUncheckedUpdateManyWithoutMetatagsNestedInput = {
    create?: XOR<pageCreateWithoutMetatagsInput, pageUncheckedCreateWithoutMetatagsInput> | pageCreateWithoutMetatagsInput[] | pageUncheckedCreateWithoutMetatagsInput[]
    connectOrCreate?: pageCreateOrConnectWithoutMetatagsInput | pageCreateOrConnectWithoutMetatagsInput[]
    upsert?: pageUpsertWithWhereUniqueWithoutMetatagsInput | pageUpsertWithWhereUniqueWithoutMetatagsInput[]
    createMany?: pageCreateManyMetatagsInputEnvelope
    set?: pageWhereUniqueInput | pageWhereUniqueInput[]
    disconnect?: pageWhereUniqueInput | pageWhereUniqueInput[]
    delete?: pageWhereUniqueInput | pageWhereUniqueInput[]
    connect?: pageWhereUniqueInput | pageWhereUniqueInput[]
    update?: pageUpdateWithWhereUniqueWithoutMetatagsInput | pageUpdateWithWhereUniqueWithoutMetatagsInput[]
    updateMany?: pageUpdateManyWithWhereWithoutMetatagsInput | pageUpdateManyWithWhereWithoutMetatagsInput[]
    deleteMany?: pageScalarWhereInput | pageScalarWhereInput[]
  }

  export type serviceUncheckedUpdateManyWithoutMetatagsNestedInput = {
    create?: XOR<serviceCreateWithoutMetatagsInput, serviceUncheckedCreateWithoutMetatagsInput> | serviceCreateWithoutMetatagsInput[] | serviceUncheckedCreateWithoutMetatagsInput[]
    connectOrCreate?: serviceCreateOrConnectWithoutMetatagsInput | serviceCreateOrConnectWithoutMetatagsInput[]
    upsert?: serviceUpsertWithWhereUniqueWithoutMetatagsInput | serviceUpsertWithWhereUniqueWithoutMetatagsInput[]
    createMany?: serviceCreateManyMetatagsInputEnvelope
    set?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
    disconnect?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
    delete?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
    connect?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
    update?: serviceUpdateWithWhereUniqueWithoutMetatagsInput | serviceUpdateWithWhereUniqueWithoutMetatagsInput[]
    updateMany?: serviceUpdateManyWithWhereWithoutMetatagsInput | serviceUpdateManyWithWhereWithoutMetatagsInput[]
    deleteMany?: serviceScalarWhereInput | serviceScalarWhereInput[]
  }

  export type servicecategoryUncheckedUpdateManyWithoutMetatagsNestedInput = {
    create?: XOR<servicecategoryCreateWithoutMetatagsInput, servicecategoryUncheckedCreateWithoutMetatagsInput> | servicecategoryCreateWithoutMetatagsInput[] | servicecategoryUncheckedCreateWithoutMetatagsInput[]
    connectOrCreate?: servicecategoryCreateOrConnectWithoutMetatagsInput | servicecategoryCreateOrConnectWithoutMetatagsInput[]
    upsert?: servicecategoryUpsertWithWhereUniqueWithoutMetatagsInput | servicecategoryUpsertWithWhereUniqueWithoutMetatagsInput[]
    createMany?: servicecategoryCreateManyMetatagsInputEnvelope
    set?: servicecategoryWhereUniqueInput | servicecategoryWhereUniqueInput[]
    disconnect?: servicecategoryWhereUniqueInput | servicecategoryWhereUniqueInput[]
    delete?: servicecategoryWhereUniqueInput | servicecategoryWhereUniqueInput[]
    connect?: servicecategoryWhereUniqueInput | servicecategoryWhereUniqueInput[]
    update?: servicecategoryUpdateWithWhereUniqueWithoutMetatagsInput | servicecategoryUpdateWithWhereUniqueWithoutMetatagsInput[]
    updateMany?: servicecategoryUpdateManyWithWhereWithoutMetatagsInput | servicecategoryUpdateManyWithWhereWithoutMetatagsInput[]
    deleteMany?: servicecategoryScalarWhereInput | servicecategoryScalarWhereInput[]
  }

  export type blogcategoryUncheckedUpdateManyWithoutBlogcategorymetaNestedInput = {
    create?: XOR<blogcategoryCreateWithoutBlogcategorymetaInput, blogcategoryUncheckedCreateWithoutBlogcategorymetaInput> | blogcategoryCreateWithoutBlogcategorymetaInput[] | blogcategoryUncheckedCreateWithoutBlogcategorymetaInput[]
    connectOrCreate?: blogcategoryCreateOrConnectWithoutBlogcategorymetaInput | blogcategoryCreateOrConnectWithoutBlogcategorymetaInput[]
    upsert?: blogcategoryUpsertWithWhereUniqueWithoutBlogcategorymetaInput | blogcategoryUpsertWithWhereUniqueWithoutBlogcategorymetaInput[]
    createMany?: blogcategoryCreateManyBlogcategorymetaInputEnvelope
    set?: blogcategoryWhereUniqueInput | blogcategoryWhereUniqueInput[]
    disconnect?: blogcategoryWhereUniqueInput | blogcategoryWhereUniqueInput[]
    delete?: blogcategoryWhereUniqueInput | blogcategoryWhereUniqueInput[]
    connect?: blogcategoryWhereUniqueInput | blogcategoryWhereUniqueInput[]
    update?: blogcategoryUpdateWithWhereUniqueWithoutBlogcategorymetaInput | blogcategoryUpdateWithWhereUniqueWithoutBlogcategorymetaInput[]
    updateMany?: blogcategoryUpdateManyWithWhereWithoutBlogcategorymetaInput | blogcategoryUpdateManyWithWhereWithoutBlogcategorymetaInput[]
    deleteMany?: blogcategoryScalarWhereInput | blogcategoryScalarWhereInput[]
  }

  export type serviceCreateNestedOneWithoutOffersInput = {
    create?: XOR<serviceCreateWithoutOffersInput, serviceUncheckedCreateWithoutOffersInput>
    connectOrCreate?: serviceCreateOrConnectWithoutOffersInput
    connect?: serviceWhereUniqueInput
  }

  export type userCreateNestedOneWithoutUseroffersInput = {
    create?: XOR<userCreateWithoutUseroffersInput, userUncheckedCreateWithoutUseroffersInput>
    connectOrCreate?: userCreateOrConnectWithoutUseroffersInput
    connect?: userWhereUniqueInput
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type serviceUpdateOneWithoutOffersNestedInput = {
    create?: XOR<serviceCreateWithoutOffersInput, serviceUncheckedCreateWithoutOffersInput>
    connectOrCreate?: serviceCreateOrConnectWithoutOffersInput
    upsert?: serviceUpsertWithoutOffersInput
    disconnect?: serviceWhereInput | boolean
    delete?: serviceWhereInput | boolean
    connect?: serviceWhereUniqueInput
    update?: XOR<XOR<serviceUpdateToOneWithWhereWithoutOffersInput, serviceUpdateWithoutOffersInput>, serviceUncheckedUpdateWithoutOffersInput>
  }

  export type userUpdateOneWithoutUseroffersNestedInput = {
    create?: XOR<userCreateWithoutUseroffersInput, userUncheckedCreateWithoutUseroffersInput>
    connectOrCreate?: userCreateOrConnectWithoutUseroffersInput
    upsert?: userUpsertWithoutUseroffersInput
    disconnect?: userWhereInput | boolean
    delete?: userWhereInput | boolean
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUseroffersInput, userUpdateWithoutUseroffersInput>, userUncheckedUpdateWithoutUseroffersInput>
  }

  export type servicecategoryCreateNestedOneWithoutContactsInput = {
    create?: XOR<servicecategoryCreateWithoutContactsInput, servicecategoryUncheckedCreateWithoutContactsInput>
    connectOrCreate?: servicecategoryCreateOrConnectWithoutContactsInput
    connect?: servicecategoryWhereUniqueInput
  }

  export type serviceCreateNestedOneWithoutContactsInput = {
    create?: XOR<serviceCreateWithoutContactsInput, serviceUncheckedCreateWithoutContactsInput>
    connectOrCreate?: serviceCreateOrConnectWithoutContactsInput
    connect?: serviceWhereUniqueInput
  }

  export type userCreateNestedOneWithoutUsercontactsInput = {
    create?: XOR<userCreateWithoutUsercontactsInput, userUncheckedCreateWithoutUsercontactsInput>
    connectOrCreate?: userCreateOrConnectWithoutUsercontactsInput
    connect?: userWhereUniqueInput
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type servicecategoryUpdateOneWithoutContactsNestedInput = {
    create?: XOR<servicecategoryCreateWithoutContactsInput, servicecategoryUncheckedCreateWithoutContactsInput>
    connectOrCreate?: servicecategoryCreateOrConnectWithoutContactsInput
    upsert?: servicecategoryUpsertWithoutContactsInput
    disconnect?: servicecategoryWhereInput | boolean
    delete?: servicecategoryWhereInput | boolean
    connect?: servicecategoryWhereUniqueInput
    update?: XOR<XOR<servicecategoryUpdateToOneWithWhereWithoutContactsInput, servicecategoryUpdateWithoutContactsInput>, servicecategoryUncheckedUpdateWithoutContactsInput>
  }

  export type serviceUpdateOneWithoutContactsNestedInput = {
    create?: XOR<serviceCreateWithoutContactsInput, serviceUncheckedCreateWithoutContactsInput>
    connectOrCreate?: serviceCreateOrConnectWithoutContactsInput
    upsert?: serviceUpsertWithoutContactsInput
    disconnect?: serviceWhereInput | boolean
    delete?: serviceWhereInput | boolean
    connect?: serviceWhereUniqueInput
    update?: XOR<XOR<serviceUpdateToOneWithWhereWithoutContactsInput, serviceUpdateWithoutContactsInput>, serviceUncheckedUpdateWithoutContactsInput>
  }

  export type userUpdateOneWithoutUsercontactsNestedInput = {
    create?: XOR<userCreateWithoutUsercontactsInput, userUncheckedCreateWithoutUsercontactsInput>
    connectOrCreate?: userCreateOrConnectWithoutUsercontactsInput
    upsert?: userUpsertWithoutUsercontactsInput
    disconnect?: userWhereInput | boolean
    delete?: userWhereInput | boolean
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUsercontactsInput, userUpdateWithoutUsercontactsInput>, userUncheckedUpdateWithoutUsercontactsInput>
  }

  export type serviceCreateNestedOneWithoutPagesInput = {
    create?: XOR<serviceCreateWithoutPagesInput, serviceUncheckedCreateWithoutPagesInput>
    connectOrCreate?: serviceCreateOrConnectWithoutPagesInput
    connect?: serviceWhereUniqueInput
  }

  export type userCreateNestedOneWithoutUserpagesInput = {
    create?: XOR<userCreateWithoutUserpagesInput, userUncheckedCreateWithoutUserpagesInput>
    connectOrCreate?: userCreateOrConnectWithoutUserpagesInput
    connect?: userWhereUniqueInput
  }

  export type metaCreateNestedOneWithoutPagesInput = {
    create?: XOR<metaCreateWithoutPagesInput, metaUncheckedCreateWithoutPagesInput>
    connectOrCreate?: metaCreateOrConnectWithoutPagesInput
    connect?: metaWhereUniqueInput
  }

  export type serviceUpdateOneWithoutPagesNestedInput = {
    create?: XOR<serviceCreateWithoutPagesInput, serviceUncheckedCreateWithoutPagesInput>
    connectOrCreate?: serviceCreateOrConnectWithoutPagesInput
    upsert?: serviceUpsertWithoutPagesInput
    disconnect?: serviceWhereInput | boolean
    delete?: serviceWhereInput | boolean
    connect?: serviceWhereUniqueInput
    update?: XOR<XOR<serviceUpdateToOneWithWhereWithoutPagesInput, serviceUpdateWithoutPagesInput>, serviceUncheckedUpdateWithoutPagesInput>
  }

  export type userUpdateOneWithoutUserpagesNestedInput = {
    create?: XOR<userCreateWithoutUserpagesInput, userUncheckedCreateWithoutUserpagesInput>
    connectOrCreate?: userCreateOrConnectWithoutUserpagesInput
    upsert?: userUpsertWithoutUserpagesInput
    disconnect?: userWhereInput | boolean
    delete?: userWhereInput | boolean
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUserpagesInput, userUpdateWithoutUserpagesInput>, userUncheckedUpdateWithoutUserpagesInput>
  }

  export type metaUpdateOneWithoutPagesNestedInput = {
    create?: XOR<metaCreateWithoutPagesInput, metaUncheckedCreateWithoutPagesInput>
    connectOrCreate?: metaCreateOrConnectWithoutPagesInput
    upsert?: metaUpsertWithoutPagesInput
    disconnect?: metaWhereInput | boolean
    delete?: metaWhereInput | boolean
    connect?: metaWhereUniqueInput
    update?: XOR<XOR<metaUpdateToOneWithWhereWithoutPagesInput, metaUpdateWithoutPagesInput>, metaUncheckedUpdateWithoutPagesInput>
  }

  export type serviceCreateNestedManyWithoutServicecategoryInput = {
    create?: XOR<serviceCreateWithoutServicecategoryInput, serviceUncheckedCreateWithoutServicecategoryInput> | serviceCreateWithoutServicecategoryInput[] | serviceUncheckedCreateWithoutServicecategoryInput[]
    connectOrCreate?: serviceCreateOrConnectWithoutServicecategoryInput | serviceCreateOrConnectWithoutServicecategoryInput[]
    createMany?: serviceCreateManyServicecategoryInputEnvelope
    connect?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
  }

  export type contactCreateNestedManyWithoutServicecategoryInput = {
    create?: XOR<contactCreateWithoutServicecategoryInput, contactUncheckedCreateWithoutServicecategoryInput> | contactCreateWithoutServicecategoryInput[] | contactUncheckedCreateWithoutServicecategoryInput[]
    connectOrCreate?: contactCreateOrConnectWithoutServicecategoryInput | contactCreateOrConnectWithoutServicecategoryInput[]
    createMany?: contactCreateManyServicecategoryInputEnvelope
    connect?: contactWhereUniqueInput | contactWhereUniqueInput[]
  }

  export type userCreateNestedOneWithoutUserservicecategoryInput = {
    create?: XOR<userCreateWithoutUserservicecategoryInput, userUncheckedCreateWithoutUserservicecategoryInput>
    connectOrCreate?: userCreateOrConnectWithoutUserservicecategoryInput
    connect?: userWhereUniqueInput
  }

  export type metaCreateNestedOneWithoutServicecategoryInput = {
    create?: XOR<metaCreateWithoutServicecategoryInput, metaUncheckedCreateWithoutServicecategoryInput>
    connectOrCreate?: metaCreateOrConnectWithoutServicecategoryInput
    connect?: metaWhereUniqueInput
  }

  export type serviceUncheckedCreateNestedManyWithoutServicecategoryInput = {
    create?: XOR<serviceCreateWithoutServicecategoryInput, serviceUncheckedCreateWithoutServicecategoryInput> | serviceCreateWithoutServicecategoryInput[] | serviceUncheckedCreateWithoutServicecategoryInput[]
    connectOrCreate?: serviceCreateOrConnectWithoutServicecategoryInput | serviceCreateOrConnectWithoutServicecategoryInput[]
    createMany?: serviceCreateManyServicecategoryInputEnvelope
    connect?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
  }

  export type contactUncheckedCreateNestedManyWithoutServicecategoryInput = {
    create?: XOR<contactCreateWithoutServicecategoryInput, contactUncheckedCreateWithoutServicecategoryInput> | contactCreateWithoutServicecategoryInput[] | contactUncheckedCreateWithoutServicecategoryInput[]
    connectOrCreate?: contactCreateOrConnectWithoutServicecategoryInput | contactCreateOrConnectWithoutServicecategoryInput[]
    createMany?: contactCreateManyServicecategoryInputEnvelope
    connect?: contactWhereUniqueInput | contactWhereUniqueInput[]
  }

  export type serviceUpdateManyWithoutServicecategoryNestedInput = {
    create?: XOR<serviceCreateWithoutServicecategoryInput, serviceUncheckedCreateWithoutServicecategoryInput> | serviceCreateWithoutServicecategoryInput[] | serviceUncheckedCreateWithoutServicecategoryInput[]
    connectOrCreate?: serviceCreateOrConnectWithoutServicecategoryInput | serviceCreateOrConnectWithoutServicecategoryInput[]
    upsert?: serviceUpsertWithWhereUniqueWithoutServicecategoryInput | serviceUpsertWithWhereUniqueWithoutServicecategoryInput[]
    createMany?: serviceCreateManyServicecategoryInputEnvelope
    set?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
    disconnect?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
    delete?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
    connect?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
    update?: serviceUpdateWithWhereUniqueWithoutServicecategoryInput | serviceUpdateWithWhereUniqueWithoutServicecategoryInput[]
    updateMany?: serviceUpdateManyWithWhereWithoutServicecategoryInput | serviceUpdateManyWithWhereWithoutServicecategoryInput[]
    deleteMany?: serviceScalarWhereInput | serviceScalarWhereInput[]
  }

  export type contactUpdateManyWithoutServicecategoryNestedInput = {
    create?: XOR<contactCreateWithoutServicecategoryInput, contactUncheckedCreateWithoutServicecategoryInput> | contactCreateWithoutServicecategoryInput[] | contactUncheckedCreateWithoutServicecategoryInput[]
    connectOrCreate?: contactCreateOrConnectWithoutServicecategoryInput | contactCreateOrConnectWithoutServicecategoryInput[]
    upsert?: contactUpsertWithWhereUniqueWithoutServicecategoryInput | contactUpsertWithWhereUniqueWithoutServicecategoryInput[]
    createMany?: contactCreateManyServicecategoryInputEnvelope
    set?: contactWhereUniqueInput | contactWhereUniqueInput[]
    disconnect?: contactWhereUniqueInput | contactWhereUniqueInput[]
    delete?: contactWhereUniqueInput | contactWhereUniqueInput[]
    connect?: contactWhereUniqueInput | contactWhereUniqueInput[]
    update?: contactUpdateWithWhereUniqueWithoutServicecategoryInput | contactUpdateWithWhereUniqueWithoutServicecategoryInput[]
    updateMany?: contactUpdateManyWithWhereWithoutServicecategoryInput | contactUpdateManyWithWhereWithoutServicecategoryInput[]
    deleteMany?: contactScalarWhereInput | contactScalarWhereInput[]
  }

  export type userUpdateOneWithoutUserservicecategoryNestedInput = {
    create?: XOR<userCreateWithoutUserservicecategoryInput, userUncheckedCreateWithoutUserservicecategoryInput>
    connectOrCreate?: userCreateOrConnectWithoutUserservicecategoryInput
    upsert?: userUpsertWithoutUserservicecategoryInput
    disconnect?: userWhereInput | boolean
    delete?: userWhereInput | boolean
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUserservicecategoryInput, userUpdateWithoutUserservicecategoryInput>, userUncheckedUpdateWithoutUserservicecategoryInput>
  }

  export type metaUpdateOneWithoutServicecategoryNestedInput = {
    create?: XOR<metaCreateWithoutServicecategoryInput, metaUncheckedCreateWithoutServicecategoryInput>
    connectOrCreate?: metaCreateOrConnectWithoutServicecategoryInput
    upsert?: metaUpsertWithoutServicecategoryInput
    disconnect?: metaWhereInput | boolean
    delete?: metaWhereInput | boolean
    connect?: metaWhereUniqueInput
    update?: XOR<XOR<metaUpdateToOneWithWhereWithoutServicecategoryInput, metaUpdateWithoutServicecategoryInput>, metaUncheckedUpdateWithoutServicecategoryInput>
  }

  export type serviceUncheckedUpdateManyWithoutServicecategoryNestedInput = {
    create?: XOR<serviceCreateWithoutServicecategoryInput, serviceUncheckedCreateWithoutServicecategoryInput> | serviceCreateWithoutServicecategoryInput[] | serviceUncheckedCreateWithoutServicecategoryInput[]
    connectOrCreate?: serviceCreateOrConnectWithoutServicecategoryInput | serviceCreateOrConnectWithoutServicecategoryInput[]
    upsert?: serviceUpsertWithWhereUniqueWithoutServicecategoryInput | serviceUpsertWithWhereUniqueWithoutServicecategoryInput[]
    createMany?: serviceCreateManyServicecategoryInputEnvelope
    set?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
    disconnect?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
    delete?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
    connect?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
    update?: serviceUpdateWithWhereUniqueWithoutServicecategoryInput | serviceUpdateWithWhereUniqueWithoutServicecategoryInput[]
    updateMany?: serviceUpdateManyWithWhereWithoutServicecategoryInput | serviceUpdateManyWithWhereWithoutServicecategoryInput[]
    deleteMany?: serviceScalarWhereInput | serviceScalarWhereInput[]
  }

  export type contactUncheckedUpdateManyWithoutServicecategoryNestedInput = {
    create?: XOR<contactCreateWithoutServicecategoryInput, contactUncheckedCreateWithoutServicecategoryInput> | contactCreateWithoutServicecategoryInput[] | contactUncheckedCreateWithoutServicecategoryInput[]
    connectOrCreate?: contactCreateOrConnectWithoutServicecategoryInput | contactCreateOrConnectWithoutServicecategoryInput[]
    upsert?: contactUpsertWithWhereUniqueWithoutServicecategoryInput | contactUpsertWithWhereUniqueWithoutServicecategoryInput[]
    createMany?: contactCreateManyServicecategoryInputEnvelope
    set?: contactWhereUniqueInput | contactWhereUniqueInput[]
    disconnect?: contactWhereUniqueInput | contactWhereUniqueInput[]
    delete?: contactWhereUniqueInput | contactWhereUniqueInput[]
    connect?: contactWhereUniqueInput | contactWhereUniqueInput[]
    update?: contactUpdateWithWhereUniqueWithoutServicecategoryInput | contactUpdateWithWhereUniqueWithoutServicecategoryInput[]
    updateMany?: contactUpdateManyWithWhereWithoutServicecategoryInput | contactUpdateManyWithWhereWithoutServicecategoryInput[]
    deleteMany?: contactScalarWhereInput | contactScalarWhereInput[]
  }

  export type servicecategoryCreateNestedOneWithoutServicesInput = {
    create?: XOR<servicecategoryCreateWithoutServicesInput, servicecategoryUncheckedCreateWithoutServicesInput>
    connectOrCreate?: servicecategoryCreateOrConnectWithoutServicesInput
    connect?: servicecategoryWhereUniqueInput
  }

  export type pageCreateNestedManyWithoutServiceInput = {
    create?: XOR<pageCreateWithoutServiceInput, pageUncheckedCreateWithoutServiceInput> | pageCreateWithoutServiceInput[] | pageUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: pageCreateOrConnectWithoutServiceInput | pageCreateOrConnectWithoutServiceInput[]
    createMany?: pageCreateManyServiceInputEnvelope
    connect?: pageWhereUniqueInput | pageWhereUniqueInput[]
  }

  export type contactCreateNestedManyWithoutServiceInput = {
    create?: XOR<contactCreateWithoutServiceInput, contactUncheckedCreateWithoutServiceInput> | contactCreateWithoutServiceInput[] | contactUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: contactCreateOrConnectWithoutServiceInput | contactCreateOrConnectWithoutServiceInput[]
    createMany?: contactCreateManyServiceInputEnvelope
    connect?: contactWhereUniqueInput | contactWhereUniqueInput[]
  }

  export type offerCreateNestedManyWithoutServiceInput = {
    create?: XOR<offerCreateWithoutServiceInput, offerUncheckedCreateWithoutServiceInput> | offerCreateWithoutServiceInput[] | offerUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: offerCreateOrConnectWithoutServiceInput | offerCreateOrConnectWithoutServiceInput[]
    createMany?: offerCreateManyServiceInputEnvelope
    connect?: offerWhereUniqueInput | offerWhereUniqueInput[]
  }

  export type userCreateNestedOneWithoutUserserviceInput = {
    create?: XOR<userCreateWithoutUserserviceInput, userUncheckedCreateWithoutUserserviceInput>
    connectOrCreate?: userCreateOrConnectWithoutUserserviceInput
    connect?: userWhereUniqueInput
  }

  export type metaCreateNestedOneWithoutServicesInput = {
    create?: XOR<metaCreateWithoutServicesInput, metaUncheckedCreateWithoutServicesInput>
    connectOrCreate?: metaCreateOrConnectWithoutServicesInput
    connect?: metaWhereUniqueInput
  }

  export type pageUncheckedCreateNestedManyWithoutServiceInput = {
    create?: XOR<pageCreateWithoutServiceInput, pageUncheckedCreateWithoutServiceInput> | pageCreateWithoutServiceInput[] | pageUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: pageCreateOrConnectWithoutServiceInput | pageCreateOrConnectWithoutServiceInput[]
    createMany?: pageCreateManyServiceInputEnvelope
    connect?: pageWhereUniqueInput | pageWhereUniqueInput[]
  }

  export type contactUncheckedCreateNestedManyWithoutServiceInput = {
    create?: XOR<contactCreateWithoutServiceInput, contactUncheckedCreateWithoutServiceInput> | contactCreateWithoutServiceInput[] | contactUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: contactCreateOrConnectWithoutServiceInput | contactCreateOrConnectWithoutServiceInput[]
    createMany?: contactCreateManyServiceInputEnvelope
    connect?: contactWhereUniqueInput | contactWhereUniqueInput[]
  }

  export type offerUncheckedCreateNestedManyWithoutServiceInput = {
    create?: XOR<offerCreateWithoutServiceInput, offerUncheckedCreateWithoutServiceInput> | offerCreateWithoutServiceInput[] | offerUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: offerCreateOrConnectWithoutServiceInput | offerCreateOrConnectWithoutServiceInput[]
    createMany?: offerCreateManyServiceInputEnvelope
    connect?: offerWhereUniqueInput | offerWhereUniqueInput[]
  }

  export type servicecategoryUpdateOneRequiredWithoutServicesNestedInput = {
    create?: XOR<servicecategoryCreateWithoutServicesInput, servicecategoryUncheckedCreateWithoutServicesInput>
    connectOrCreate?: servicecategoryCreateOrConnectWithoutServicesInput
    upsert?: servicecategoryUpsertWithoutServicesInput
    connect?: servicecategoryWhereUniqueInput
    update?: XOR<XOR<servicecategoryUpdateToOneWithWhereWithoutServicesInput, servicecategoryUpdateWithoutServicesInput>, servicecategoryUncheckedUpdateWithoutServicesInput>
  }

  export type pageUpdateManyWithoutServiceNestedInput = {
    create?: XOR<pageCreateWithoutServiceInput, pageUncheckedCreateWithoutServiceInput> | pageCreateWithoutServiceInput[] | pageUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: pageCreateOrConnectWithoutServiceInput | pageCreateOrConnectWithoutServiceInput[]
    upsert?: pageUpsertWithWhereUniqueWithoutServiceInput | pageUpsertWithWhereUniqueWithoutServiceInput[]
    createMany?: pageCreateManyServiceInputEnvelope
    set?: pageWhereUniqueInput | pageWhereUniqueInput[]
    disconnect?: pageWhereUniqueInput | pageWhereUniqueInput[]
    delete?: pageWhereUniqueInput | pageWhereUniqueInput[]
    connect?: pageWhereUniqueInput | pageWhereUniqueInput[]
    update?: pageUpdateWithWhereUniqueWithoutServiceInput | pageUpdateWithWhereUniqueWithoutServiceInput[]
    updateMany?: pageUpdateManyWithWhereWithoutServiceInput | pageUpdateManyWithWhereWithoutServiceInput[]
    deleteMany?: pageScalarWhereInput | pageScalarWhereInput[]
  }

  export type contactUpdateManyWithoutServiceNestedInput = {
    create?: XOR<contactCreateWithoutServiceInput, contactUncheckedCreateWithoutServiceInput> | contactCreateWithoutServiceInput[] | contactUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: contactCreateOrConnectWithoutServiceInput | contactCreateOrConnectWithoutServiceInput[]
    upsert?: contactUpsertWithWhereUniqueWithoutServiceInput | contactUpsertWithWhereUniqueWithoutServiceInput[]
    createMany?: contactCreateManyServiceInputEnvelope
    set?: contactWhereUniqueInput | contactWhereUniqueInput[]
    disconnect?: contactWhereUniqueInput | contactWhereUniqueInput[]
    delete?: contactWhereUniqueInput | contactWhereUniqueInput[]
    connect?: contactWhereUniqueInput | contactWhereUniqueInput[]
    update?: contactUpdateWithWhereUniqueWithoutServiceInput | contactUpdateWithWhereUniqueWithoutServiceInput[]
    updateMany?: contactUpdateManyWithWhereWithoutServiceInput | contactUpdateManyWithWhereWithoutServiceInput[]
    deleteMany?: contactScalarWhereInput | contactScalarWhereInput[]
  }

  export type offerUpdateManyWithoutServiceNestedInput = {
    create?: XOR<offerCreateWithoutServiceInput, offerUncheckedCreateWithoutServiceInput> | offerCreateWithoutServiceInput[] | offerUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: offerCreateOrConnectWithoutServiceInput | offerCreateOrConnectWithoutServiceInput[]
    upsert?: offerUpsertWithWhereUniqueWithoutServiceInput | offerUpsertWithWhereUniqueWithoutServiceInput[]
    createMany?: offerCreateManyServiceInputEnvelope
    set?: offerWhereUniqueInput | offerWhereUniqueInput[]
    disconnect?: offerWhereUniqueInput | offerWhereUniqueInput[]
    delete?: offerWhereUniqueInput | offerWhereUniqueInput[]
    connect?: offerWhereUniqueInput | offerWhereUniqueInput[]
    update?: offerUpdateWithWhereUniqueWithoutServiceInput | offerUpdateWithWhereUniqueWithoutServiceInput[]
    updateMany?: offerUpdateManyWithWhereWithoutServiceInput | offerUpdateManyWithWhereWithoutServiceInput[]
    deleteMany?: offerScalarWhereInput | offerScalarWhereInput[]
  }

  export type userUpdateOneWithoutUserserviceNestedInput = {
    create?: XOR<userCreateWithoutUserserviceInput, userUncheckedCreateWithoutUserserviceInput>
    connectOrCreate?: userCreateOrConnectWithoutUserserviceInput
    upsert?: userUpsertWithoutUserserviceInput
    disconnect?: userWhereInput | boolean
    delete?: userWhereInput | boolean
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUserserviceInput, userUpdateWithoutUserserviceInput>, userUncheckedUpdateWithoutUserserviceInput>
  }

  export type metaUpdateOneWithoutServicesNestedInput = {
    create?: XOR<metaCreateWithoutServicesInput, metaUncheckedCreateWithoutServicesInput>
    connectOrCreate?: metaCreateOrConnectWithoutServicesInput
    upsert?: metaUpsertWithoutServicesInput
    disconnect?: metaWhereInput | boolean
    delete?: metaWhereInput | boolean
    connect?: metaWhereUniqueInput
    update?: XOR<XOR<metaUpdateToOneWithWhereWithoutServicesInput, metaUpdateWithoutServicesInput>, metaUncheckedUpdateWithoutServicesInput>
  }

  export type pageUncheckedUpdateManyWithoutServiceNestedInput = {
    create?: XOR<pageCreateWithoutServiceInput, pageUncheckedCreateWithoutServiceInput> | pageCreateWithoutServiceInput[] | pageUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: pageCreateOrConnectWithoutServiceInput | pageCreateOrConnectWithoutServiceInput[]
    upsert?: pageUpsertWithWhereUniqueWithoutServiceInput | pageUpsertWithWhereUniqueWithoutServiceInput[]
    createMany?: pageCreateManyServiceInputEnvelope
    set?: pageWhereUniqueInput | pageWhereUniqueInput[]
    disconnect?: pageWhereUniqueInput | pageWhereUniqueInput[]
    delete?: pageWhereUniqueInput | pageWhereUniqueInput[]
    connect?: pageWhereUniqueInput | pageWhereUniqueInput[]
    update?: pageUpdateWithWhereUniqueWithoutServiceInput | pageUpdateWithWhereUniqueWithoutServiceInput[]
    updateMany?: pageUpdateManyWithWhereWithoutServiceInput | pageUpdateManyWithWhereWithoutServiceInput[]
    deleteMany?: pageScalarWhereInput | pageScalarWhereInput[]
  }

  export type contactUncheckedUpdateManyWithoutServiceNestedInput = {
    create?: XOR<contactCreateWithoutServiceInput, contactUncheckedCreateWithoutServiceInput> | contactCreateWithoutServiceInput[] | contactUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: contactCreateOrConnectWithoutServiceInput | contactCreateOrConnectWithoutServiceInput[]
    upsert?: contactUpsertWithWhereUniqueWithoutServiceInput | contactUpsertWithWhereUniqueWithoutServiceInput[]
    createMany?: contactCreateManyServiceInputEnvelope
    set?: contactWhereUniqueInput | contactWhereUniqueInput[]
    disconnect?: contactWhereUniqueInput | contactWhereUniqueInput[]
    delete?: contactWhereUniqueInput | contactWhereUniqueInput[]
    connect?: contactWhereUniqueInput | contactWhereUniqueInput[]
    update?: contactUpdateWithWhereUniqueWithoutServiceInput | contactUpdateWithWhereUniqueWithoutServiceInput[]
    updateMany?: contactUpdateManyWithWhereWithoutServiceInput | contactUpdateManyWithWhereWithoutServiceInput[]
    deleteMany?: contactScalarWhereInput | contactScalarWhereInput[]
  }

  export type offerUncheckedUpdateManyWithoutServiceNestedInput = {
    create?: XOR<offerCreateWithoutServiceInput, offerUncheckedCreateWithoutServiceInput> | offerCreateWithoutServiceInput[] | offerUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: offerCreateOrConnectWithoutServiceInput | offerCreateOrConnectWithoutServiceInput[]
    upsert?: offerUpsertWithWhereUniqueWithoutServiceInput | offerUpsertWithWhereUniqueWithoutServiceInput[]
    createMany?: offerCreateManyServiceInputEnvelope
    set?: offerWhereUniqueInput | offerWhereUniqueInput[]
    disconnect?: offerWhereUniqueInput | offerWhereUniqueInput[]
    delete?: offerWhereUniqueInput | offerWhereUniqueInput[]
    connect?: offerWhereUniqueInput | offerWhereUniqueInput[]
    update?: offerUpdateWithWhereUniqueWithoutServiceInput | offerUpdateWithWhereUniqueWithoutServiceInput[]
    updateMany?: offerUpdateManyWithWhereWithoutServiceInput | offerUpdateManyWithWhereWithoutServiceInput[]
    deleteMany?: offerScalarWhereInput | offerScalarWhereInput[]
  }

  export type userCreateNestedOneWithoutCreatedapiclientsInput = {
    create?: XOR<userCreateWithoutCreatedapiclientsInput, userUncheckedCreateWithoutCreatedapiclientsInput>
    connectOrCreate?: userCreateOrConnectWithoutCreatedapiclientsInput
    connect?: userWhereUniqueInput
  }

  export type userCreateNestedOneWithoutUpdatedapiclientsInput = {
    create?: XOR<userCreateWithoutUpdatedapiclientsInput, userUncheckedCreateWithoutUpdatedapiclientsInput>
    connectOrCreate?: userCreateOrConnectWithoutUpdatedapiclientsInput
    connect?: userWhereUniqueInput
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type userUpdateOneRequiredWithoutCreatedapiclientsNestedInput = {
    create?: XOR<userCreateWithoutCreatedapiclientsInput, userUncheckedCreateWithoutCreatedapiclientsInput>
    connectOrCreate?: userCreateOrConnectWithoutCreatedapiclientsInput
    upsert?: userUpsertWithoutCreatedapiclientsInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutCreatedapiclientsInput, userUpdateWithoutCreatedapiclientsInput>, userUncheckedUpdateWithoutCreatedapiclientsInput>
  }

  export type userUpdateOneWithoutUpdatedapiclientsNestedInput = {
    create?: XOR<userCreateWithoutUpdatedapiclientsInput, userUncheckedCreateWithoutUpdatedapiclientsInput>
    connectOrCreate?: userCreateOrConnectWithoutUpdatedapiclientsInput
    upsert?: userUpsertWithoutUpdatedapiclientsInput
    disconnect?: userWhereInput | boolean
    delete?: userWhereInput | boolean
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUpdatedapiclientsInput, userUpdateWithoutUpdatedapiclientsInput>, userUncheckedUpdateWithoutUpdatedapiclientsInput>
  }

  export type userCreateNestedOneWithoutRefreshtokensInput = {
    create?: XOR<userCreateWithoutRefreshtokensInput, userUncheckedCreateWithoutRefreshtokensInput>
    connectOrCreate?: userCreateOrConnectWithoutRefreshtokensInput
    connect?: userWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutRefreshtokensNestedInput = {
    create?: XOR<userCreateWithoutRefreshtokensInput, userUncheckedCreateWithoutRefreshtokensInput>
    connectOrCreate?: userCreateOrConnectWithoutRefreshtokensInput
    upsert?: userUpsertWithoutRefreshtokensInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutRefreshtokensInput, userUpdateWithoutRefreshtokensInput>, userUncheckedUpdateWithoutRefreshtokensInput>
  }

  export type userCreateNestedOneWithoutCreatedrolesInput = {
    create?: XOR<userCreateWithoutCreatedrolesInput, userUncheckedCreateWithoutCreatedrolesInput>
    connectOrCreate?: userCreateOrConnectWithoutCreatedrolesInput
    connect?: userWhereUniqueInput
  }

  export type userCreateNestedOneWithoutUpdatedrolesInput = {
    create?: XOR<userCreateWithoutUpdatedrolesInput, userUncheckedCreateWithoutUpdatedrolesInput>
    connectOrCreate?: userCreateOrConnectWithoutUpdatedrolesInput
    connect?: userWhereUniqueInput
  }

  export type rolepermissionCreateNestedManyWithoutRoleInput = {
    create?: XOR<rolepermissionCreateWithoutRoleInput, rolepermissionUncheckedCreateWithoutRoleInput> | rolepermissionCreateWithoutRoleInput[] | rolepermissionUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutRoleInput | rolepermissionCreateOrConnectWithoutRoleInput[]
    createMany?: rolepermissionCreateManyRoleInputEnvelope
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
  }

  export type userroleCreateNestedManyWithoutRoleInput = {
    create?: XOR<userroleCreateWithoutRoleInput, userroleUncheckedCreateWithoutRoleInput> | userroleCreateWithoutRoleInput[] | userroleUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutRoleInput | userroleCreateOrConnectWithoutRoleInput[]
    createMany?: userroleCreateManyRoleInputEnvelope
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
  }

  export type rolepermissionUncheckedCreateNestedManyWithoutRoleInput = {
    create?: XOR<rolepermissionCreateWithoutRoleInput, rolepermissionUncheckedCreateWithoutRoleInput> | rolepermissionCreateWithoutRoleInput[] | rolepermissionUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutRoleInput | rolepermissionCreateOrConnectWithoutRoleInput[]
    createMany?: rolepermissionCreateManyRoleInputEnvelope
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
  }

  export type userroleUncheckedCreateNestedManyWithoutRoleInput = {
    create?: XOR<userroleCreateWithoutRoleInput, userroleUncheckedCreateWithoutRoleInput> | userroleCreateWithoutRoleInput[] | userroleUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutRoleInput | userroleCreateOrConnectWithoutRoleInput[]
    createMany?: userroleCreateManyRoleInputEnvelope
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
  }

  export type userUpdateOneRequiredWithoutCreatedrolesNestedInput = {
    create?: XOR<userCreateWithoutCreatedrolesInput, userUncheckedCreateWithoutCreatedrolesInput>
    connectOrCreate?: userCreateOrConnectWithoutCreatedrolesInput
    upsert?: userUpsertWithoutCreatedrolesInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutCreatedrolesInput, userUpdateWithoutCreatedrolesInput>, userUncheckedUpdateWithoutCreatedrolesInput>
  }

  export type userUpdateOneWithoutUpdatedrolesNestedInput = {
    create?: XOR<userCreateWithoutUpdatedrolesInput, userUncheckedCreateWithoutUpdatedrolesInput>
    connectOrCreate?: userCreateOrConnectWithoutUpdatedrolesInput
    upsert?: userUpsertWithoutUpdatedrolesInput
    disconnect?: userWhereInput | boolean
    delete?: userWhereInput | boolean
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUpdatedrolesInput, userUpdateWithoutUpdatedrolesInput>, userUncheckedUpdateWithoutUpdatedrolesInput>
  }

  export type rolepermissionUpdateManyWithoutRoleNestedInput = {
    create?: XOR<rolepermissionCreateWithoutRoleInput, rolepermissionUncheckedCreateWithoutRoleInput> | rolepermissionCreateWithoutRoleInput[] | rolepermissionUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutRoleInput | rolepermissionCreateOrConnectWithoutRoleInput[]
    upsert?: rolepermissionUpsertWithWhereUniqueWithoutRoleInput | rolepermissionUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: rolepermissionCreateManyRoleInputEnvelope
    set?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    disconnect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    delete?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    update?: rolepermissionUpdateWithWhereUniqueWithoutRoleInput | rolepermissionUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: rolepermissionUpdateManyWithWhereWithoutRoleInput | rolepermissionUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: rolepermissionScalarWhereInput | rolepermissionScalarWhereInput[]
  }

  export type userroleUpdateManyWithoutRoleNestedInput = {
    create?: XOR<userroleCreateWithoutRoleInput, userroleUncheckedCreateWithoutRoleInput> | userroleCreateWithoutRoleInput[] | userroleUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutRoleInput | userroleCreateOrConnectWithoutRoleInput[]
    upsert?: userroleUpsertWithWhereUniqueWithoutRoleInput | userroleUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: userroleCreateManyRoleInputEnvelope
    set?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    disconnect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    delete?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    update?: userroleUpdateWithWhereUniqueWithoutRoleInput | userroleUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: userroleUpdateManyWithWhereWithoutRoleInput | userroleUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: userroleScalarWhereInput | userroleScalarWhereInput[]
  }

  export type rolepermissionUncheckedUpdateManyWithoutRoleNestedInput = {
    create?: XOR<rolepermissionCreateWithoutRoleInput, rolepermissionUncheckedCreateWithoutRoleInput> | rolepermissionCreateWithoutRoleInput[] | rolepermissionUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutRoleInput | rolepermissionCreateOrConnectWithoutRoleInput[]
    upsert?: rolepermissionUpsertWithWhereUniqueWithoutRoleInput | rolepermissionUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: rolepermissionCreateManyRoleInputEnvelope
    set?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    disconnect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    delete?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    update?: rolepermissionUpdateWithWhereUniqueWithoutRoleInput | rolepermissionUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: rolepermissionUpdateManyWithWhereWithoutRoleInput | rolepermissionUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: rolepermissionScalarWhereInput | rolepermissionScalarWhereInput[]
  }

  export type userroleUncheckedUpdateManyWithoutRoleNestedInput = {
    create?: XOR<userroleCreateWithoutRoleInput, userroleUncheckedCreateWithoutRoleInput> | userroleCreateWithoutRoleInput[] | userroleUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutRoleInput | userroleCreateOrConnectWithoutRoleInput[]
    upsert?: userroleUpsertWithWhereUniqueWithoutRoleInput | userroleUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: userroleCreateManyRoleInputEnvelope
    set?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    disconnect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    delete?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    update?: userroleUpdateWithWhereUniqueWithoutRoleInput | userroleUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: userroleUpdateManyWithWhereWithoutRoleInput | userroleUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: userroleScalarWhereInput | userroleScalarWhereInput[]
  }

  export type userCreateNestedOneWithoutNotificationuserInput = {
    create?: XOR<userCreateWithoutNotificationuserInput, userUncheckedCreateWithoutNotificationuserInput>
    connectOrCreate?: userCreateOrConnectWithoutNotificationuserInput
    connect?: userWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutNotificationuserNestedInput = {
    create?: XOR<userCreateWithoutNotificationuserInput, userUncheckedCreateWithoutNotificationuserInput>
    connectOrCreate?: userCreateOrConnectWithoutNotificationuserInput
    upsert?: userUpsertWithoutNotificationuserInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutNotificationuserInput, userUpdateWithoutNotificationuserInput>, userUncheckedUpdateWithoutNotificationuserInput>
  }

  export type userCreateNestedOneWithoutCreatedpermissionsInput = {
    create?: XOR<userCreateWithoutCreatedpermissionsInput, userUncheckedCreateWithoutCreatedpermissionsInput>
    connectOrCreate?: userCreateOrConnectWithoutCreatedpermissionsInput
    connect?: userWhereUniqueInput
  }

  export type userCreateNestedOneWithoutUpdatedpermissionsInput = {
    create?: XOR<userCreateWithoutUpdatedpermissionsInput, userUncheckedCreateWithoutUpdatedpermissionsInput>
    connectOrCreate?: userCreateOrConnectWithoutUpdatedpermissionsInput
    connect?: userWhereUniqueInput
  }

  export type rolepermissionCreateNestedManyWithoutPermissionInput = {
    create?: XOR<rolepermissionCreateWithoutPermissionInput, rolepermissionUncheckedCreateWithoutPermissionInput> | rolepermissionCreateWithoutPermissionInput[] | rolepermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutPermissionInput | rolepermissionCreateOrConnectWithoutPermissionInput[]
    createMany?: rolepermissionCreateManyPermissionInputEnvelope
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
  }

  export type userpermissionCreateNestedManyWithoutPermissionInput = {
    create?: XOR<userpermissionCreateWithoutPermissionInput, userpermissionUncheckedCreateWithoutPermissionInput> | userpermissionCreateWithoutPermissionInput[] | userpermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutPermissionInput | userpermissionCreateOrConnectWithoutPermissionInput[]
    createMany?: userpermissionCreateManyPermissionInputEnvelope
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
  }

  export type rolepermissionUncheckedCreateNestedManyWithoutPermissionInput = {
    create?: XOR<rolepermissionCreateWithoutPermissionInput, rolepermissionUncheckedCreateWithoutPermissionInput> | rolepermissionCreateWithoutPermissionInput[] | rolepermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutPermissionInput | rolepermissionCreateOrConnectWithoutPermissionInput[]
    createMany?: rolepermissionCreateManyPermissionInputEnvelope
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
  }

  export type userpermissionUncheckedCreateNestedManyWithoutPermissionInput = {
    create?: XOR<userpermissionCreateWithoutPermissionInput, userpermissionUncheckedCreateWithoutPermissionInput> | userpermissionCreateWithoutPermissionInput[] | userpermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutPermissionInput | userpermissionCreateOrConnectWithoutPermissionInput[]
    createMany?: userpermissionCreateManyPermissionInputEnvelope
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
  }

  export type userUpdateOneRequiredWithoutCreatedpermissionsNestedInput = {
    create?: XOR<userCreateWithoutCreatedpermissionsInput, userUncheckedCreateWithoutCreatedpermissionsInput>
    connectOrCreate?: userCreateOrConnectWithoutCreatedpermissionsInput
    upsert?: userUpsertWithoutCreatedpermissionsInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutCreatedpermissionsInput, userUpdateWithoutCreatedpermissionsInput>, userUncheckedUpdateWithoutCreatedpermissionsInput>
  }

  export type userUpdateOneWithoutUpdatedpermissionsNestedInput = {
    create?: XOR<userCreateWithoutUpdatedpermissionsInput, userUncheckedCreateWithoutUpdatedpermissionsInput>
    connectOrCreate?: userCreateOrConnectWithoutUpdatedpermissionsInput
    upsert?: userUpsertWithoutUpdatedpermissionsInput
    disconnect?: userWhereInput | boolean
    delete?: userWhereInput | boolean
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUpdatedpermissionsInput, userUpdateWithoutUpdatedpermissionsInput>, userUncheckedUpdateWithoutUpdatedpermissionsInput>
  }

  export type rolepermissionUpdateManyWithoutPermissionNestedInput = {
    create?: XOR<rolepermissionCreateWithoutPermissionInput, rolepermissionUncheckedCreateWithoutPermissionInput> | rolepermissionCreateWithoutPermissionInput[] | rolepermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutPermissionInput | rolepermissionCreateOrConnectWithoutPermissionInput[]
    upsert?: rolepermissionUpsertWithWhereUniqueWithoutPermissionInput | rolepermissionUpsertWithWhereUniqueWithoutPermissionInput[]
    createMany?: rolepermissionCreateManyPermissionInputEnvelope
    set?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    disconnect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    delete?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    update?: rolepermissionUpdateWithWhereUniqueWithoutPermissionInput | rolepermissionUpdateWithWhereUniqueWithoutPermissionInput[]
    updateMany?: rolepermissionUpdateManyWithWhereWithoutPermissionInput | rolepermissionUpdateManyWithWhereWithoutPermissionInput[]
    deleteMany?: rolepermissionScalarWhereInput | rolepermissionScalarWhereInput[]
  }

  export type userpermissionUpdateManyWithoutPermissionNestedInput = {
    create?: XOR<userpermissionCreateWithoutPermissionInput, userpermissionUncheckedCreateWithoutPermissionInput> | userpermissionCreateWithoutPermissionInput[] | userpermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutPermissionInput | userpermissionCreateOrConnectWithoutPermissionInput[]
    upsert?: userpermissionUpsertWithWhereUniqueWithoutPermissionInput | userpermissionUpsertWithWhereUniqueWithoutPermissionInput[]
    createMany?: userpermissionCreateManyPermissionInputEnvelope
    set?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    disconnect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    delete?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    update?: userpermissionUpdateWithWhereUniqueWithoutPermissionInput | userpermissionUpdateWithWhereUniqueWithoutPermissionInput[]
    updateMany?: userpermissionUpdateManyWithWhereWithoutPermissionInput | userpermissionUpdateManyWithWhereWithoutPermissionInput[]
    deleteMany?: userpermissionScalarWhereInput | userpermissionScalarWhereInput[]
  }

  export type rolepermissionUncheckedUpdateManyWithoutPermissionNestedInput = {
    create?: XOR<rolepermissionCreateWithoutPermissionInput, rolepermissionUncheckedCreateWithoutPermissionInput> | rolepermissionCreateWithoutPermissionInput[] | rolepermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutPermissionInput | rolepermissionCreateOrConnectWithoutPermissionInput[]
    upsert?: rolepermissionUpsertWithWhereUniqueWithoutPermissionInput | rolepermissionUpsertWithWhereUniqueWithoutPermissionInput[]
    createMany?: rolepermissionCreateManyPermissionInputEnvelope
    set?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    disconnect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    delete?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    update?: rolepermissionUpdateWithWhereUniqueWithoutPermissionInput | rolepermissionUpdateWithWhereUniqueWithoutPermissionInput[]
    updateMany?: rolepermissionUpdateManyWithWhereWithoutPermissionInput | rolepermissionUpdateManyWithWhereWithoutPermissionInput[]
    deleteMany?: rolepermissionScalarWhereInput | rolepermissionScalarWhereInput[]
  }

  export type userpermissionUncheckedUpdateManyWithoutPermissionNestedInput = {
    create?: XOR<userpermissionCreateWithoutPermissionInput, userpermissionUncheckedCreateWithoutPermissionInput> | userpermissionCreateWithoutPermissionInput[] | userpermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutPermissionInput | userpermissionCreateOrConnectWithoutPermissionInput[]
    upsert?: userpermissionUpsertWithWhereUniqueWithoutPermissionInput | userpermissionUpsertWithWhereUniqueWithoutPermissionInput[]
    createMany?: userpermissionCreateManyPermissionInputEnvelope
    set?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    disconnect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    delete?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    update?: userpermissionUpdateWithWhereUniqueWithoutPermissionInput | userpermissionUpdateWithWhereUniqueWithoutPermissionInput[]
    updateMany?: userpermissionUpdateManyWithWhereWithoutPermissionInput | userpermissionUpdateManyWithWhereWithoutPermissionInput[]
    deleteMany?: userpermissionScalarWhereInput | userpermissionScalarWhereInput[]
  }

  export type userCreateNestedOneWithoutCreatedrolepermissionsInput = {
    create?: XOR<userCreateWithoutCreatedrolepermissionsInput, userUncheckedCreateWithoutCreatedrolepermissionsInput>
    connectOrCreate?: userCreateOrConnectWithoutCreatedrolepermissionsInput
    connect?: userWhereUniqueInput
  }

  export type permissionCreateNestedOneWithoutRolepermissionsInput = {
    create?: XOR<permissionCreateWithoutRolepermissionsInput, permissionUncheckedCreateWithoutRolepermissionsInput>
    connectOrCreate?: permissionCreateOrConnectWithoutRolepermissionsInput
    connect?: permissionWhereUniqueInput
  }

  export type roleCreateNestedOneWithoutRolepermissionsInput = {
    create?: XOR<roleCreateWithoutRolepermissionsInput, roleUncheckedCreateWithoutRolepermissionsInput>
    connectOrCreate?: roleCreateOrConnectWithoutRolepermissionsInput
    connect?: roleWhereUniqueInput
  }

  export type userCreateNestedOneWithoutUpdatedrolepermissionsInput = {
    create?: XOR<userCreateWithoutUpdatedrolepermissionsInput, userUncheckedCreateWithoutUpdatedrolepermissionsInput>
    connectOrCreate?: userCreateOrConnectWithoutUpdatedrolepermissionsInput
    connect?: userWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutCreatedrolepermissionsNestedInput = {
    create?: XOR<userCreateWithoutCreatedrolepermissionsInput, userUncheckedCreateWithoutCreatedrolepermissionsInput>
    connectOrCreate?: userCreateOrConnectWithoutCreatedrolepermissionsInput
    upsert?: userUpsertWithoutCreatedrolepermissionsInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutCreatedrolepermissionsInput, userUpdateWithoutCreatedrolepermissionsInput>, userUncheckedUpdateWithoutCreatedrolepermissionsInput>
  }

  export type permissionUpdateOneRequiredWithoutRolepermissionsNestedInput = {
    create?: XOR<permissionCreateWithoutRolepermissionsInput, permissionUncheckedCreateWithoutRolepermissionsInput>
    connectOrCreate?: permissionCreateOrConnectWithoutRolepermissionsInput
    upsert?: permissionUpsertWithoutRolepermissionsInput
    connect?: permissionWhereUniqueInput
    update?: XOR<XOR<permissionUpdateToOneWithWhereWithoutRolepermissionsInput, permissionUpdateWithoutRolepermissionsInput>, permissionUncheckedUpdateWithoutRolepermissionsInput>
  }

  export type roleUpdateOneRequiredWithoutRolepermissionsNestedInput = {
    create?: XOR<roleCreateWithoutRolepermissionsInput, roleUncheckedCreateWithoutRolepermissionsInput>
    connectOrCreate?: roleCreateOrConnectWithoutRolepermissionsInput
    upsert?: roleUpsertWithoutRolepermissionsInput
    connect?: roleWhereUniqueInput
    update?: XOR<XOR<roleUpdateToOneWithWhereWithoutRolepermissionsInput, roleUpdateWithoutRolepermissionsInput>, roleUncheckedUpdateWithoutRolepermissionsInput>
  }

  export type userUpdateOneWithoutUpdatedrolepermissionsNestedInput = {
    create?: XOR<userCreateWithoutUpdatedrolepermissionsInput, userUncheckedCreateWithoutUpdatedrolepermissionsInput>
    connectOrCreate?: userCreateOrConnectWithoutUpdatedrolepermissionsInput
    upsert?: userUpsertWithoutUpdatedrolepermissionsInput
    disconnect?: userWhereInput | boolean
    delete?: userWhereInput | boolean
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUpdatedrolepermissionsInput, userUpdateWithoutUpdatedrolepermissionsInput>, userUncheckedUpdateWithoutUpdatedrolepermissionsInput>
  }

  export type notificationCreateNestedManyWithoutToInput = {
    create?: XOR<notificationCreateWithoutToInput, notificationUncheckedCreateWithoutToInput> | notificationCreateWithoutToInput[] | notificationUncheckedCreateWithoutToInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutToInput | notificationCreateOrConnectWithoutToInput[]
    createMany?: notificationCreateManyToInputEnvelope
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
  }

  export type apiclientCreateNestedManyWithoutCreateduserInput = {
    create?: XOR<apiclientCreateWithoutCreateduserInput, apiclientUncheckedCreateWithoutCreateduserInput> | apiclientCreateWithoutCreateduserInput[] | apiclientUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: apiclientCreateOrConnectWithoutCreateduserInput | apiclientCreateOrConnectWithoutCreateduserInput[]
    createMany?: apiclientCreateManyCreateduserInputEnvelope
    connect?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
  }

  export type apiclientCreateNestedManyWithoutUpdateduserInput = {
    create?: XOR<apiclientCreateWithoutUpdateduserInput, apiclientUncheckedCreateWithoutUpdateduserInput> | apiclientCreateWithoutUpdateduserInput[] | apiclientUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: apiclientCreateOrConnectWithoutUpdateduserInput | apiclientCreateOrConnectWithoutUpdateduserInput[]
    createMany?: apiclientCreateManyUpdateduserInputEnvelope
    connect?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
  }

  export type permissionCreateNestedManyWithoutCreateduserInput = {
    create?: XOR<permissionCreateWithoutCreateduserInput, permissionUncheckedCreateWithoutCreateduserInput> | permissionCreateWithoutCreateduserInput[] | permissionUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: permissionCreateOrConnectWithoutCreateduserInput | permissionCreateOrConnectWithoutCreateduserInput[]
    createMany?: permissionCreateManyCreateduserInputEnvelope
    connect?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
  }

  export type permissionCreateNestedManyWithoutUpdateduserInput = {
    create?: XOR<permissionCreateWithoutUpdateduserInput, permissionUncheckedCreateWithoutUpdateduserInput> | permissionCreateWithoutUpdateduserInput[] | permissionUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: permissionCreateOrConnectWithoutUpdateduserInput | permissionCreateOrConnectWithoutUpdateduserInput[]
    createMany?: permissionCreateManyUpdateduserInputEnvelope
    connect?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
  }

  export type refreshtokenCreateNestedManyWithoutUserInput = {
    create?: XOR<refreshtokenCreateWithoutUserInput, refreshtokenUncheckedCreateWithoutUserInput> | refreshtokenCreateWithoutUserInput[] | refreshtokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: refreshtokenCreateOrConnectWithoutUserInput | refreshtokenCreateOrConnectWithoutUserInput[]
    createMany?: refreshtokenCreateManyUserInputEnvelope
    connect?: refreshtokenWhereUniqueInput | refreshtokenWhereUniqueInput[]
  }

  export type roleCreateNestedManyWithoutCreateduserInput = {
    create?: XOR<roleCreateWithoutCreateduserInput, roleUncheckedCreateWithoutCreateduserInput> | roleCreateWithoutCreateduserInput[] | roleUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: roleCreateOrConnectWithoutCreateduserInput | roleCreateOrConnectWithoutCreateduserInput[]
    createMany?: roleCreateManyCreateduserInputEnvelope
    connect?: roleWhereUniqueInput | roleWhereUniqueInput[]
  }

  export type roleCreateNestedManyWithoutUpdateduserInput = {
    create?: XOR<roleCreateWithoutUpdateduserInput, roleUncheckedCreateWithoutUpdateduserInput> | roleCreateWithoutUpdateduserInput[] | roleUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: roleCreateOrConnectWithoutUpdateduserInput | roleCreateOrConnectWithoutUpdateduserInput[]
    createMany?: roleCreateManyUpdateduserInputEnvelope
    connect?: roleWhereUniqueInput | roleWhereUniqueInput[]
  }

  export type rolepermissionCreateNestedManyWithoutCreateduserInput = {
    create?: XOR<rolepermissionCreateWithoutCreateduserInput, rolepermissionUncheckedCreateWithoutCreateduserInput> | rolepermissionCreateWithoutCreateduserInput[] | rolepermissionUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutCreateduserInput | rolepermissionCreateOrConnectWithoutCreateduserInput[]
    createMany?: rolepermissionCreateManyCreateduserInputEnvelope
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
  }

  export type rolepermissionCreateNestedManyWithoutUpdateduserInput = {
    create?: XOR<rolepermissionCreateWithoutUpdateduserInput, rolepermissionUncheckedCreateWithoutUpdateduserInput> | rolepermissionCreateWithoutUpdateduserInput[] | rolepermissionUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutUpdateduserInput | rolepermissionCreateOrConnectWithoutUpdateduserInput[]
    createMany?: rolepermissionCreateManyUpdateduserInputEnvelope
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
  }

  export type userCreateNestedOneWithoutCreatedusersInput = {
    create?: XOR<userCreateWithoutCreatedusersInput, userUncheckedCreateWithoutCreatedusersInput>
    connectOrCreate?: userCreateOrConnectWithoutCreatedusersInput
    connect?: userWhereUniqueInput
  }

  export type userCreateNestedManyWithoutCreateduserInput = {
    create?: XOR<userCreateWithoutCreateduserInput, userUncheckedCreateWithoutCreateduserInput> | userCreateWithoutCreateduserInput[] | userUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: userCreateOrConnectWithoutCreateduserInput | userCreateOrConnectWithoutCreateduserInput[]
    createMany?: userCreateManyCreateduserInputEnvelope
    connect?: userWhereUniqueInput | userWhereUniqueInput[]
  }

  export type userCreateNestedOneWithoutUpdatedusersInput = {
    create?: XOR<userCreateWithoutUpdatedusersInput, userUncheckedCreateWithoutUpdatedusersInput>
    connectOrCreate?: userCreateOrConnectWithoutUpdatedusersInput
    connect?: userWhereUniqueInput
  }

  export type userCreateNestedManyWithoutUpdateduserInput = {
    create?: XOR<userCreateWithoutUpdateduserInput, userUncheckedCreateWithoutUpdateduserInput> | userCreateWithoutUpdateduserInput[] | userUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: userCreateOrConnectWithoutUpdateduserInput | userCreateOrConnectWithoutUpdateduserInput[]
    createMany?: userCreateManyUpdateduserInputEnvelope
    connect?: userWhereUniqueInput | userWhereUniqueInput[]
  }

  export type userpermissionCreateNestedManyWithoutCreateduserInput = {
    create?: XOR<userpermissionCreateWithoutCreateduserInput, userpermissionUncheckedCreateWithoutCreateduserInput> | userpermissionCreateWithoutCreateduserInput[] | userpermissionUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutCreateduserInput | userpermissionCreateOrConnectWithoutCreateduserInput[]
    createMany?: userpermissionCreateManyCreateduserInputEnvelope
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
  }

  export type userpermissionCreateNestedManyWithoutUpdateduserInput = {
    create?: XOR<userpermissionCreateWithoutUpdateduserInput, userpermissionUncheckedCreateWithoutUpdateduserInput> | userpermissionCreateWithoutUpdateduserInput[] | userpermissionUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutUpdateduserInput | userpermissionCreateOrConnectWithoutUpdateduserInput[]
    createMany?: userpermissionCreateManyUpdateduserInputEnvelope
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
  }

  export type userpermissionCreateNestedManyWithoutUserInput = {
    create?: XOR<userpermissionCreateWithoutUserInput, userpermissionUncheckedCreateWithoutUserInput> | userpermissionCreateWithoutUserInput[] | userpermissionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutUserInput | userpermissionCreateOrConnectWithoutUserInput[]
    createMany?: userpermissionCreateManyUserInputEnvelope
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
  }

  export type userroleCreateNestedManyWithoutCreateduserInput = {
    create?: XOR<userroleCreateWithoutCreateduserInput, userroleUncheckedCreateWithoutCreateduserInput> | userroleCreateWithoutCreateduserInput[] | userroleUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutCreateduserInput | userroleCreateOrConnectWithoutCreateduserInput[]
    createMany?: userroleCreateManyCreateduserInputEnvelope
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
  }

  export type userroleCreateNestedManyWithoutUpdateduserInput = {
    create?: XOR<userroleCreateWithoutUpdateduserInput, userroleUncheckedCreateWithoutUpdateduserInput> | userroleCreateWithoutUpdateduserInput[] | userroleUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutUpdateduserInput | userroleCreateOrConnectWithoutUpdateduserInput[]
    createMany?: userroleCreateManyUpdateduserInputEnvelope
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
  }

  export type userroleCreateNestedManyWithoutUserInput = {
    create?: XOR<userroleCreateWithoutUserInput, userroleUncheckedCreateWithoutUserInput> | userroleCreateWithoutUserInput[] | userroleUncheckedCreateWithoutUserInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutUserInput | userroleCreateOrConnectWithoutUserInput[]
    createMany?: userroleCreateManyUserInputEnvelope
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
  }

  export type offerCreateNestedManyWithoutUseroffersInput = {
    create?: XOR<offerCreateWithoutUseroffersInput, offerUncheckedCreateWithoutUseroffersInput> | offerCreateWithoutUseroffersInput[] | offerUncheckedCreateWithoutUseroffersInput[]
    connectOrCreate?: offerCreateOrConnectWithoutUseroffersInput | offerCreateOrConnectWithoutUseroffersInput[]
    createMany?: offerCreateManyUseroffersInputEnvelope
    connect?: offerWhereUniqueInput | offerWhereUniqueInput[]
  }

  export type contactCreateNestedManyWithoutUsercontactsInput = {
    create?: XOR<contactCreateWithoutUsercontactsInput, contactUncheckedCreateWithoutUsercontactsInput> | contactCreateWithoutUsercontactsInput[] | contactUncheckedCreateWithoutUsercontactsInput[]
    connectOrCreate?: contactCreateOrConnectWithoutUsercontactsInput | contactCreateOrConnectWithoutUsercontactsInput[]
    createMany?: contactCreateManyUsercontactsInputEnvelope
    connect?: contactWhereUniqueInput | contactWhereUniqueInput[]
  }

  export type pageCreateNestedManyWithoutUserpagesInput = {
    create?: XOR<pageCreateWithoutUserpagesInput, pageUncheckedCreateWithoutUserpagesInput> | pageCreateWithoutUserpagesInput[] | pageUncheckedCreateWithoutUserpagesInput[]
    connectOrCreate?: pageCreateOrConnectWithoutUserpagesInput | pageCreateOrConnectWithoutUserpagesInput[]
    createMany?: pageCreateManyUserpagesInputEnvelope
    connect?: pageWhereUniqueInput | pageWhereUniqueInput[]
  }

  export type servicecategoryCreateNestedManyWithoutUserservicecategoryInput = {
    create?: XOR<servicecategoryCreateWithoutUserservicecategoryInput, servicecategoryUncheckedCreateWithoutUserservicecategoryInput> | servicecategoryCreateWithoutUserservicecategoryInput[] | servicecategoryUncheckedCreateWithoutUserservicecategoryInput[]
    connectOrCreate?: servicecategoryCreateOrConnectWithoutUserservicecategoryInput | servicecategoryCreateOrConnectWithoutUserservicecategoryInput[]
    createMany?: servicecategoryCreateManyUserservicecategoryInputEnvelope
    connect?: servicecategoryWhereUniqueInput | servicecategoryWhereUniqueInput[]
  }

  export type serviceCreateNestedManyWithoutUserserviceInput = {
    create?: XOR<serviceCreateWithoutUserserviceInput, serviceUncheckedCreateWithoutUserserviceInput> | serviceCreateWithoutUserserviceInput[] | serviceUncheckedCreateWithoutUserserviceInput[]
    connectOrCreate?: serviceCreateOrConnectWithoutUserserviceInput | serviceCreateOrConnectWithoutUserserviceInput[]
    createMany?: serviceCreateManyUserserviceInputEnvelope
    connect?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
  }

  export type notificationUncheckedCreateNestedManyWithoutToInput = {
    create?: XOR<notificationCreateWithoutToInput, notificationUncheckedCreateWithoutToInput> | notificationCreateWithoutToInput[] | notificationUncheckedCreateWithoutToInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutToInput | notificationCreateOrConnectWithoutToInput[]
    createMany?: notificationCreateManyToInputEnvelope
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
  }

  export type apiclientUncheckedCreateNestedManyWithoutCreateduserInput = {
    create?: XOR<apiclientCreateWithoutCreateduserInput, apiclientUncheckedCreateWithoutCreateduserInput> | apiclientCreateWithoutCreateduserInput[] | apiclientUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: apiclientCreateOrConnectWithoutCreateduserInput | apiclientCreateOrConnectWithoutCreateduserInput[]
    createMany?: apiclientCreateManyCreateduserInputEnvelope
    connect?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
  }

  export type apiclientUncheckedCreateNestedManyWithoutUpdateduserInput = {
    create?: XOR<apiclientCreateWithoutUpdateduserInput, apiclientUncheckedCreateWithoutUpdateduserInput> | apiclientCreateWithoutUpdateduserInput[] | apiclientUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: apiclientCreateOrConnectWithoutUpdateduserInput | apiclientCreateOrConnectWithoutUpdateduserInput[]
    createMany?: apiclientCreateManyUpdateduserInputEnvelope
    connect?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
  }

  export type permissionUncheckedCreateNestedManyWithoutCreateduserInput = {
    create?: XOR<permissionCreateWithoutCreateduserInput, permissionUncheckedCreateWithoutCreateduserInput> | permissionCreateWithoutCreateduserInput[] | permissionUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: permissionCreateOrConnectWithoutCreateduserInput | permissionCreateOrConnectWithoutCreateduserInput[]
    createMany?: permissionCreateManyCreateduserInputEnvelope
    connect?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
  }

  export type permissionUncheckedCreateNestedManyWithoutUpdateduserInput = {
    create?: XOR<permissionCreateWithoutUpdateduserInput, permissionUncheckedCreateWithoutUpdateduserInput> | permissionCreateWithoutUpdateduserInput[] | permissionUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: permissionCreateOrConnectWithoutUpdateduserInput | permissionCreateOrConnectWithoutUpdateduserInput[]
    createMany?: permissionCreateManyUpdateduserInputEnvelope
    connect?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
  }

  export type refreshtokenUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<refreshtokenCreateWithoutUserInput, refreshtokenUncheckedCreateWithoutUserInput> | refreshtokenCreateWithoutUserInput[] | refreshtokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: refreshtokenCreateOrConnectWithoutUserInput | refreshtokenCreateOrConnectWithoutUserInput[]
    createMany?: refreshtokenCreateManyUserInputEnvelope
    connect?: refreshtokenWhereUniqueInput | refreshtokenWhereUniqueInput[]
  }

  export type roleUncheckedCreateNestedManyWithoutCreateduserInput = {
    create?: XOR<roleCreateWithoutCreateduserInput, roleUncheckedCreateWithoutCreateduserInput> | roleCreateWithoutCreateduserInput[] | roleUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: roleCreateOrConnectWithoutCreateduserInput | roleCreateOrConnectWithoutCreateduserInput[]
    createMany?: roleCreateManyCreateduserInputEnvelope
    connect?: roleWhereUniqueInput | roleWhereUniqueInput[]
  }

  export type roleUncheckedCreateNestedManyWithoutUpdateduserInput = {
    create?: XOR<roleCreateWithoutUpdateduserInput, roleUncheckedCreateWithoutUpdateduserInput> | roleCreateWithoutUpdateduserInput[] | roleUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: roleCreateOrConnectWithoutUpdateduserInput | roleCreateOrConnectWithoutUpdateduserInput[]
    createMany?: roleCreateManyUpdateduserInputEnvelope
    connect?: roleWhereUniqueInput | roleWhereUniqueInput[]
  }

  export type rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput = {
    create?: XOR<rolepermissionCreateWithoutCreateduserInput, rolepermissionUncheckedCreateWithoutCreateduserInput> | rolepermissionCreateWithoutCreateduserInput[] | rolepermissionUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutCreateduserInput | rolepermissionCreateOrConnectWithoutCreateduserInput[]
    createMany?: rolepermissionCreateManyCreateduserInputEnvelope
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
  }

  export type rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput = {
    create?: XOR<rolepermissionCreateWithoutUpdateduserInput, rolepermissionUncheckedCreateWithoutUpdateduserInput> | rolepermissionCreateWithoutUpdateduserInput[] | rolepermissionUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutUpdateduserInput | rolepermissionCreateOrConnectWithoutUpdateduserInput[]
    createMany?: rolepermissionCreateManyUpdateduserInputEnvelope
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
  }

  export type userUncheckedCreateNestedManyWithoutCreateduserInput = {
    create?: XOR<userCreateWithoutCreateduserInput, userUncheckedCreateWithoutCreateduserInput> | userCreateWithoutCreateduserInput[] | userUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: userCreateOrConnectWithoutCreateduserInput | userCreateOrConnectWithoutCreateduserInput[]
    createMany?: userCreateManyCreateduserInputEnvelope
    connect?: userWhereUniqueInput | userWhereUniqueInput[]
  }

  export type userUncheckedCreateNestedManyWithoutUpdateduserInput = {
    create?: XOR<userCreateWithoutUpdateduserInput, userUncheckedCreateWithoutUpdateduserInput> | userCreateWithoutUpdateduserInput[] | userUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: userCreateOrConnectWithoutUpdateduserInput | userCreateOrConnectWithoutUpdateduserInput[]
    createMany?: userCreateManyUpdateduserInputEnvelope
    connect?: userWhereUniqueInput | userWhereUniqueInput[]
  }

  export type userpermissionUncheckedCreateNestedManyWithoutCreateduserInput = {
    create?: XOR<userpermissionCreateWithoutCreateduserInput, userpermissionUncheckedCreateWithoutCreateduserInput> | userpermissionCreateWithoutCreateduserInput[] | userpermissionUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutCreateduserInput | userpermissionCreateOrConnectWithoutCreateduserInput[]
    createMany?: userpermissionCreateManyCreateduserInputEnvelope
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
  }

  export type userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput = {
    create?: XOR<userpermissionCreateWithoutUpdateduserInput, userpermissionUncheckedCreateWithoutUpdateduserInput> | userpermissionCreateWithoutUpdateduserInput[] | userpermissionUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutUpdateduserInput | userpermissionCreateOrConnectWithoutUpdateduserInput[]
    createMany?: userpermissionCreateManyUpdateduserInputEnvelope
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
  }

  export type userpermissionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<userpermissionCreateWithoutUserInput, userpermissionUncheckedCreateWithoutUserInput> | userpermissionCreateWithoutUserInput[] | userpermissionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutUserInput | userpermissionCreateOrConnectWithoutUserInput[]
    createMany?: userpermissionCreateManyUserInputEnvelope
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
  }

  export type userroleUncheckedCreateNestedManyWithoutCreateduserInput = {
    create?: XOR<userroleCreateWithoutCreateduserInput, userroleUncheckedCreateWithoutCreateduserInput> | userroleCreateWithoutCreateduserInput[] | userroleUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutCreateduserInput | userroleCreateOrConnectWithoutCreateduserInput[]
    createMany?: userroleCreateManyCreateduserInputEnvelope
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
  }

  export type userroleUncheckedCreateNestedManyWithoutUpdateduserInput = {
    create?: XOR<userroleCreateWithoutUpdateduserInput, userroleUncheckedCreateWithoutUpdateduserInput> | userroleCreateWithoutUpdateduserInput[] | userroleUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutUpdateduserInput | userroleCreateOrConnectWithoutUpdateduserInput[]
    createMany?: userroleCreateManyUpdateduserInputEnvelope
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
  }

  export type userroleUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<userroleCreateWithoutUserInput, userroleUncheckedCreateWithoutUserInput> | userroleCreateWithoutUserInput[] | userroleUncheckedCreateWithoutUserInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutUserInput | userroleCreateOrConnectWithoutUserInput[]
    createMany?: userroleCreateManyUserInputEnvelope
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
  }

  export type offerUncheckedCreateNestedManyWithoutUseroffersInput = {
    create?: XOR<offerCreateWithoutUseroffersInput, offerUncheckedCreateWithoutUseroffersInput> | offerCreateWithoutUseroffersInput[] | offerUncheckedCreateWithoutUseroffersInput[]
    connectOrCreate?: offerCreateOrConnectWithoutUseroffersInput | offerCreateOrConnectWithoutUseroffersInput[]
    createMany?: offerCreateManyUseroffersInputEnvelope
    connect?: offerWhereUniqueInput | offerWhereUniqueInput[]
  }

  export type contactUncheckedCreateNestedManyWithoutUsercontactsInput = {
    create?: XOR<contactCreateWithoutUsercontactsInput, contactUncheckedCreateWithoutUsercontactsInput> | contactCreateWithoutUsercontactsInput[] | contactUncheckedCreateWithoutUsercontactsInput[]
    connectOrCreate?: contactCreateOrConnectWithoutUsercontactsInput | contactCreateOrConnectWithoutUsercontactsInput[]
    createMany?: contactCreateManyUsercontactsInputEnvelope
    connect?: contactWhereUniqueInput | contactWhereUniqueInput[]
  }

  export type pageUncheckedCreateNestedManyWithoutUserpagesInput = {
    create?: XOR<pageCreateWithoutUserpagesInput, pageUncheckedCreateWithoutUserpagesInput> | pageCreateWithoutUserpagesInput[] | pageUncheckedCreateWithoutUserpagesInput[]
    connectOrCreate?: pageCreateOrConnectWithoutUserpagesInput | pageCreateOrConnectWithoutUserpagesInput[]
    createMany?: pageCreateManyUserpagesInputEnvelope
    connect?: pageWhereUniqueInput | pageWhereUniqueInput[]
  }

  export type servicecategoryUncheckedCreateNestedManyWithoutUserservicecategoryInput = {
    create?: XOR<servicecategoryCreateWithoutUserservicecategoryInput, servicecategoryUncheckedCreateWithoutUserservicecategoryInput> | servicecategoryCreateWithoutUserservicecategoryInput[] | servicecategoryUncheckedCreateWithoutUserservicecategoryInput[]
    connectOrCreate?: servicecategoryCreateOrConnectWithoutUserservicecategoryInput | servicecategoryCreateOrConnectWithoutUserservicecategoryInput[]
    createMany?: servicecategoryCreateManyUserservicecategoryInputEnvelope
    connect?: servicecategoryWhereUniqueInput | servicecategoryWhereUniqueInput[]
  }

  export type serviceUncheckedCreateNestedManyWithoutUserserviceInput = {
    create?: XOR<serviceCreateWithoutUserserviceInput, serviceUncheckedCreateWithoutUserserviceInput> | serviceCreateWithoutUserserviceInput[] | serviceUncheckedCreateWithoutUserserviceInput[]
    connectOrCreate?: serviceCreateOrConnectWithoutUserserviceInput | serviceCreateOrConnectWithoutUserserviceInput[]
    createMany?: serviceCreateManyUserserviceInputEnvelope
    connect?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
  }

  export type notificationUpdateManyWithoutToNestedInput = {
    create?: XOR<notificationCreateWithoutToInput, notificationUncheckedCreateWithoutToInput> | notificationCreateWithoutToInput[] | notificationUncheckedCreateWithoutToInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutToInput | notificationCreateOrConnectWithoutToInput[]
    upsert?: notificationUpsertWithWhereUniqueWithoutToInput | notificationUpsertWithWhereUniqueWithoutToInput[]
    createMany?: notificationCreateManyToInputEnvelope
    set?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    disconnect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    delete?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    update?: notificationUpdateWithWhereUniqueWithoutToInput | notificationUpdateWithWhereUniqueWithoutToInput[]
    updateMany?: notificationUpdateManyWithWhereWithoutToInput | notificationUpdateManyWithWhereWithoutToInput[]
    deleteMany?: notificationScalarWhereInput | notificationScalarWhereInput[]
  }

  export type apiclientUpdateManyWithoutCreateduserNestedInput = {
    create?: XOR<apiclientCreateWithoutCreateduserInput, apiclientUncheckedCreateWithoutCreateduserInput> | apiclientCreateWithoutCreateduserInput[] | apiclientUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: apiclientCreateOrConnectWithoutCreateduserInput | apiclientCreateOrConnectWithoutCreateduserInput[]
    upsert?: apiclientUpsertWithWhereUniqueWithoutCreateduserInput | apiclientUpsertWithWhereUniqueWithoutCreateduserInput[]
    createMany?: apiclientCreateManyCreateduserInputEnvelope
    set?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    disconnect?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    delete?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    connect?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    update?: apiclientUpdateWithWhereUniqueWithoutCreateduserInput | apiclientUpdateWithWhereUniqueWithoutCreateduserInput[]
    updateMany?: apiclientUpdateManyWithWhereWithoutCreateduserInput | apiclientUpdateManyWithWhereWithoutCreateduserInput[]
    deleteMany?: apiclientScalarWhereInput | apiclientScalarWhereInput[]
  }

  export type apiclientUpdateManyWithoutUpdateduserNestedInput = {
    create?: XOR<apiclientCreateWithoutUpdateduserInput, apiclientUncheckedCreateWithoutUpdateduserInput> | apiclientCreateWithoutUpdateduserInput[] | apiclientUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: apiclientCreateOrConnectWithoutUpdateduserInput | apiclientCreateOrConnectWithoutUpdateduserInput[]
    upsert?: apiclientUpsertWithWhereUniqueWithoutUpdateduserInput | apiclientUpsertWithWhereUniqueWithoutUpdateduserInput[]
    createMany?: apiclientCreateManyUpdateduserInputEnvelope
    set?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    disconnect?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    delete?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    connect?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    update?: apiclientUpdateWithWhereUniqueWithoutUpdateduserInput | apiclientUpdateWithWhereUniqueWithoutUpdateduserInput[]
    updateMany?: apiclientUpdateManyWithWhereWithoutUpdateduserInput | apiclientUpdateManyWithWhereWithoutUpdateduserInput[]
    deleteMany?: apiclientScalarWhereInput | apiclientScalarWhereInput[]
  }

  export type permissionUpdateManyWithoutCreateduserNestedInput = {
    create?: XOR<permissionCreateWithoutCreateduserInput, permissionUncheckedCreateWithoutCreateduserInput> | permissionCreateWithoutCreateduserInput[] | permissionUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: permissionCreateOrConnectWithoutCreateduserInput | permissionCreateOrConnectWithoutCreateduserInput[]
    upsert?: permissionUpsertWithWhereUniqueWithoutCreateduserInput | permissionUpsertWithWhereUniqueWithoutCreateduserInput[]
    createMany?: permissionCreateManyCreateduserInputEnvelope
    set?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    disconnect?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    delete?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    connect?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    update?: permissionUpdateWithWhereUniqueWithoutCreateduserInput | permissionUpdateWithWhereUniqueWithoutCreateduserInput[]
    updateMany?: permissionUpdateManyWithWhereWithoutCreateduserInput | permissionUpdateManyWithWhereWithoutCreateduserInput[]
    deleteMany?: permissionScalarWhereInput | permissionScalarWhereInput[]
  }

  export type permissionUpdateManyWithoutUpdateduserNestedInput = {
    create?: XOR<permissionCreateWithoutUpdateduserInput, permissionUncheckedCreateWithoutUpdateduserInput> | permissionCreateWithoutUpdateduserInput[] | permissionUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: permissionCreateOrConnectWithoutUpdateduserInput | permissionCreateOrConnectWithoutUpdateduserInput[]
    upsert?: permissionUpsertWithWhereUniqueWithoutUpdateduserInput | permissionUpsertWithWhereUniqueWithoutUpdateduserInput[]
    createMany?: permissionCreateManyUpdateduserInputEnvelope
    set?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    disconnect?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    delete?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    connect?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    update?: permissionUpdateWithWhereUniqueWithoutUpdateduserInput | permissionUpdateWithWhereUniqueWithoutUpdateduserInput[]
    updateMany?: permissionUpdateManyWithWhereWithoutUpdateduserInput | permissionUpdateManyWithWhereWithoutUpdateduserInput[]
    deleteMany?: permissionScalarWhereInput | permissionScalarWhereInput[]
  }

  export type refreshtokenUpdateManyWithoutUserNestedInput = {
    create?: XOR<refreshtokenCreateWithoutUserInput, refreshtokenUncheckedCreateWithoutUserInput> | refreshtokenCreateWithoutUserInput[] | refreshtokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: refreshtokenCreateOrConnectWithoutUserInput | refreshtokenCreateOrConnectWithoutUserInput[]
    upsert?: refreshtokenUpsertWithWhereUniqueWithoutUserInput | refreshtokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: refreshtokenCreateManyUserInputEnvelope
    set?: refreshtokenWhereUniqueInput | refreshtokenWhereUniqueInput[]
    disconnect?: refreshtokenWhereUniqueInput | refreshtokenWhereUniqueInput[]
    delete?: refreshtokenWhereUniqueInput | refreshtokenWhereUniqueInput[]
    connect?: refreshtokenWhereUniqueInput | refreshtokenWhereUniqueInput[]
    update?: refreshtokenUpdateWithWhereUniqueWithoutUserInput | refreshtokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: refreshtokenUpdateManyWithWhereWithoutUserInput | refreshtokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: refreshtokenScalarWhereInput | refreshtokenScalarWhereInput[]
  }

  export type roleUpdateManyWithoutCreateduserNestedInput = {
    create?: XOR<roleCreateWithoutCreateduserInput, roleUncheckedCreateWithoutCreateduserInput> | roleCreateWithoutCreateduserInput[] | roleUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: roleCreateOrConnectWithoutCreateduserInput | roleCreateOrConnectWithoutCreateduserInput[]
    upsert?: roleUpsertWithWhereUniqueWithoutCreateduserInput | roleUpsertWithWhereUniqueWithoutCreateduserInput[]
    createMany?: roleCreateManyCreateduserInputEnvelope
    set?: roleWhereUniqueInput | roleWhereUniqueInput[]
    disconnect?: roleWhereUniqueInput | roleWhereUniqueInput[]
    delete?: roleWhereUniqueInput | roleWhereUniqueInput[]
    connect?: roleWhereUniqueInput | roleWhereUniqueInput[]
    update?: roleUpdateWithWhereUniqueWithoutCreateduserInput | roleUpdateWithWhereUniqueWithoutCreateduserInput[]
    updateMany?: roleUpdateManyWithWhereWithoutCreateduserInput | roleUpdateManyWithWhereWithoutCreateduserInput[]
    deleteMany?: roleScalarWhereInput | roleScalarWhereInput[]
  }

  export type roleUpdateManyWithoutUpdateduserNestedInput = {
    create?: XOR<roleCreateWithoutUpdateduserInput, roleUncheckedCreateWithoutUpdateduserInput> | roleCreateWithoutUpdateduserInput[] | roleUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: roleCreateOrConnectWithoutUpdateduserInput | roleCreateOrConnectWithoutUpdateduserInput[]
    upsert?: roleUpsertWithWhereUniqueWithoutUpdateduserInput | roleUpsertWithWhereUniqueWithoutUpdateduserInput[]
    createMany?: roleCreateManyUpdateduserInputEnvelope
    set?: roleWhereUniqueInput | roleWhereUniqueInput[]
    disconnect?: roleWhereUniqueInput | roleWhereUniqueInput[]
    delete?: roleWhereUniqueInput | roleWhereUniqueInput[]
    connect?: roleWhereUniqueInput | roleWhereUniqueInput[]
    update?: roleUpdateWithWhereUniqueWithoutUpdateduserInput | roleUpdateWithWhereUniqueWithoutUpdateduserInput[]
    updateMany?: roleUpdateManyWithWhereWithoutUpdateduserInput | roleUpdateManyWithWhereWithoutUpdateduserInput[]
    deleteMany?: roleScalarWhereInput | roleScalarWhereInput[]
  }

  export type rolepermissionUpdateManyWithoutCreateduserNestedInput = {
    create?: XOR<rolepermissionCreateWithoutCreateduserInput, rolepermissionUncheckedCreateWithoutCreateduserInput> | rolepermissionCreateWithoutCreateduserInput[] | rolepermissionUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutCreateduserInput | rolepermissionCreateOrConnectWithoutCreateduserInput[]
    upsert?: rolepermissionUpsertWithWhereUniqueWithoutCreateduserInput | rolepermissionUpsertWithWhereUniqueWithoutCreateduserInput[]
    createMany?: rolepermissionCreateManyCreateduserInputEnvelope
    set?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    disconnect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    delete?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    update?: rolepermissionUpdateWithWhereUniqueWithoutCreateduserInput | rolepermissionUpdateWithWhereUniqueWithoutCreateduserInput[]
    updateMany?: rolepermissionUpdateManyWithWhereWithoutCreateduserInput | rolepermissionUpdateManyWithWhereWithoutCreateduserInput[]
    deleteMany?: rolepermissionScalarWhereInput | rolepermissionScalarWhereInput[]
  }

  export type rolepermissionUpdateManyWithoutUpdateduserNestedInput = {
    create?: XOR<rolepermissionCreateWithoutUpdateduserInput, rolepermissionUncheckedCreateWithoutUpdateduserInput> | rolepermissionCreateWithoutUpdateduserInput[] | rolepermissionUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutUpdateduserInput | rolepermissionCreateOrConnectWithoutUpdateduserInput[]
    upsert?: rolepermissionUpsertWithWhereUniqueWithoutUpdateduserInput | rolepermissionUpsertWithWhereUniqueWithoutUpdateduserInput[]
    createMany?: rolepermissionCreateManyUpdateduserInputEnvelope
    set?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    disconnect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    delete?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    update?: rolepermissionUpdateWithWhereUniqueWithoutUpdateduserInput | rolepermissionUpdateWithWhereUniqueWithoutUpdateduserInput[]
    updateMany?: rolepermissionUpdateManyWithWhereWithoutUpdateduserInput | rolepermissionUpdateManyWithWhereWithoutUpdateduserInput[]
    deleteMany?: rolepermissionScalarWhereInput | rolepermissionScalarWhereInput[]
  }

  export type userUpdateOneRequiredWithoutCreatedusersNestedInput = {
    create?: XOR<userCreateWithoutCreatedusersInput, userUncheckedCreateWithoutCreatedusersInput>
    connectOrCreate?: userCreateOrConnectWithoutCreatedusersInput
    upsert?: userUpsertWithoutCreatedusersInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutCreatedusersInput, userUpdateWithoutCreatedusersInput>, userUncheckedUpdateWithoutCreatedusersInput>
  }

  export type userUpdateManyWithoutCreateduserNestedInput = {
    create?: XOR<userCreateWithoutCreateduserInput, userUncheckedCreateWithoutCreateduserInput> | userCreateWithoutCreateduserInput[] | userUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: userCreateOrConnectWithoutCreateduserInput | userCreateOrConnectWithoutCreateduserInput[]
    upsert?: userUpsertWithWhereUniqueWithoutCreateduserInput | userUpsertWithWhereUniqueWithoutCreateduserInput[]
    createMany?: userCreateManyCreateduserInputEnvelope
    set?: userWhereUniqueInput | userWhereUniqueInput[]
    disconnect?: userWhereUniqueInput | userWhereUniqueInput[]
    delete?: userWhereUniqueInput | userWhereUniqueInput[]
    connect?: userWhereUniqueInput | userWhereUniqueInput[]
    update?: userUpdateWithWhereUniqueWithoutCreateduserInput | userUpdateWithWhereUniqueWithoutCreateduserInput[]
    updateMany?: userUpdateManyWithWhereWithoutCreateduserInput | userUpdateManyWithWhereWithoutCreateduserInput[]
    deleteMany?: userScalarWhereInput | userScalarWhereInput[]
  }

  export type userUpdateOneWithoutUpdatedusersNestedInput = {
    create?: XOR<userCreateWithoutUpdatedusersInput, userUncheckedCreateWithoutUpdatedusersInput>
    connectOrCreate?: userCreateOrConnectWithoutUpdatedusersInput
    upsert?: userUpsertWithoutUpdatedusersInput
    disconnect?: userWhereInput | boolean
    delete?: userWhereInput | boolean
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUpdatedusersInput, userUpdateWithoutUpdatedusersInput>, userUncheckedUpdateWithoutUpdatedusersInput>
  }

  export type userUpdateManyWithoutUpdateduserNestedInput = {
    create?: XOR<userCreateWithoutUpdateduserInput, userUncheckedCreateWithoutUpdateduserInput> | userCreateWithoutUpdateduserInput[] | userUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: userCreateOrConnectWithoutUpdateduserInput | userCreateOrConnectWithoutUpdateduserInput[]
    upsert?: userUpsertWithWhereUniqueWithoutUpdateduserInput | userUpsertWithWhereUniqueWithoutUpdateduserInput[]
    createMany?: userCreateManyUpdateduserInputEnvelope
    set?: userWhereUniqueInput | userWhereUniqueInput[]
    disconnect?: userWhereUniqueInput | userWhereUniqueInput[]
    delete?: userWhereUniqueInput | userWhereUniqueInput[]
    connect?: userWhereUniqueInput | userWhereUniqueInput[]
    update?: userUpdateWithWhereUniqueWithoutUpdateduserInput | userUpdateWithWhereUniqueWithoutUpdateduserInput[]
    updateMany?: userUpdateManyWithWhereWithoutUpdateduserInput | userUpdateManyWithWhereWithoutUpdateduserInput[]
    deleteMany?: userScalarWhereInput | userScalarWhereInput[]
  }

  export type userpermissionUpdateManyWithoutCreateduserNestedInput = {
    create?: XOR<userpermissionCreateWithoutCreateduserInput, userpermissionUncheckedCreateWithoutCreateduserInput> | userpermissionCreateWithoutCreateduserInput[] | userpermissionUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutCreateduserInput | userpermissionCreateOrConnectWithoutCreateduserInput[]
    upsert?: userpermissionUpsertWithWhereUniqueWithoutCreateduserInput | userpermissionUpsertWithWhereUniqueWithoutCreateduserInput[]
    createMany?: userpermissionCreateManyCreateduserInputEnvelope
    set?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    disconnect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    delete?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    update?: userpermissionUpdateWithWhereUniqueWithoutCreateduserInput | userpermissionUpdateWithWhereUniqueWithoutCreateduserInput[]
    updateMany?: userpermissionUpdateManyWithWhereWithoutCreateduserInput | userpermissionUpdateManyWithWhereWithoutCreateduserInput[]
    deleteMany?: userpermissionScalarWhereInput | userpermissionScalarWhereInput[]
  }

  export type userpermissionUpdateManyWithoutUpdateduserNestedInput = {
    create?: XOR<userpermissionCreateWithoutUpdateduserInput, userpermissionUncheckedCreateWithoutUpdateduserInput> | userpermissionCreateWithoutUpdateduserInput[] | userpermissionUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutUpdateduserInput | userpermissionCreateOrConnectWithoutUpdateduserInput[]
    upsert?: userpermissionUpsertWithWhereUniqueWithoutUpdateduserInput | userpermissionUpsertWithWhereUniqueWithoutUpdateduserInput[]
    createMany?: userpermissionCreateManyUpdateduserInputEnvelope
    set?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    disconnect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    delete?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    update?: userpermissionUpdateWithWhereUniqueWithoutUpdateduserInput | userpermissionUpdateWithWhereUniqueWithoutUpdateduserInput[]
    updateMany?: userpermissionUpdateManyWithWhereWithoutUpdateduserInput | userpermissionUpdateManyWithWhereWithoutUpdateduserInput[]
    deleteMany?: userpermissionScalarWhereInput | userpermissionScalarWhereInput[]
  }

  export type userpermissionUpdateManyWithoutUserNestedInput = {
    create?: XOR<userpermissionCreateWithoutUserInput, userpermissionUncheckedCreateWithoutUserInput> | userpermissionCreateWithoutUserInput[] | userpermissionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutUserInput | userpermissionCreateOrConnectWithoutUserInput[]
    upsert?: userpermissionUpsertWithWhereUniqueWithoutUserInput | userpermissionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: userpermissionCreateManyUserInputEnvelope
    set?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    disconnect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    delete?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    update?: userpermissionUpdateWithWhereUniqueWithoutUserInput | userpermissionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: userpermissionUpdateManyWithWhereWithoutUserInput | userpermissionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: userpermissionScalarWhereInput | userpermissionScalarWhereInput[]
  }

  export type userroleUpdateManyWithoutCreateduserNestedInput = {
    create?: XOR<userroleCreateWithoutCreateduserInput, userroleUncheckedCreateWithoutCreateduserInput> | userroleCreateWithoutCreateduserInput[] | userroleUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutCreateduserInput | userroleCreateOrConnectWithoutCreateduserInput[]
    upsert?: userroleUpsertWithWhereUniqueWithoutCreateduserInput | userroleUpsertWithWhereUniqueWithoutCreateduserInput[]
    createMany?: userroleCreateManyCreateduserInputEnvelope
    set?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    disconnect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    delete?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    update?: userroleUpdateWithWhereUniqueWithoutCreateduserInput | userroleUpdateWithWhereUniqueWithoutCreateduserInput[]
    updateMany?: userroleUpdateManyWithWhereWithoutCreateduserInput | userroleUpdateManyWithWhereWithoutCreateduserInput[]
    deleteMany?: userroleScalarWhereInput | userroleScalarWhereInput[]
  }

  export type userroleUpdateManyWithoutUpdateduserNestedInput = {
    create?: XOR<userroleCreateWithoutUpdateduserInput, userroleUncheckedCreateWithoutUpdateduserInput> | userroleCreateWithoutUpdateduserInput[] | userroleUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutUpdateduserInput | userroleCreateOrConnectWithoutUpdateduserInput[]
    upsert?: userroleUpsertWithWhereUniqueWithoutUpdateduserInput | userroleUpsertWithWhereUniqueWithoutUpdateduserInput[]
    createMany?: userroleCreateManyUpdateduserInputEnvelope
    set?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    disconnect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    delete?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    update?: userroleUpdateWithWhereUniqueWithoutUpdateduserInput | userroleUpdateWithWhereUniqueWithoutUpdateduserInput[]
    updateMany?: userroleUpdateManyWithWhereWithoutUpdateduserInput | userroleUpdateManyWithWhereWithoutUpdateduserInput[]
    deleteMany?: userroleScalarWhereInput | userroleScalarWhereInput[]
  }

  export type userroleUpdateManyWithoutUserNestedInput = {
    create?: XOR<userroleCreateWithoutUserInput, userroleUncheckedCreateWithoutUserInput> | userroleCreateWithoutUserInput[] | userroleUncheckedCreateWithoutUserInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutUserInput | userroleCreateOrConnectWithoutUserInput[]
    upsert?: userroleUpsertWithWhereUniqueWithoutUserInput | userroleUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: userroleCreateManyUserInputEnvelope
    set?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    disconnect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    delete?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    update?: userroleUpdateWithWhereUniqueWithoutUserInput | userroleUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: userroleUpdateManyWithWhereWithoutUserInput | userroleUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: userroleScalarWhereInput | userroleScalarWhereInput[]
  }

  export type offerUpdateManyWithoutUseroffersNestedInput = {
    create?: XOR<offerCreateWithoutUseroffersInput, offerUncheckedCreateWithoutUseroffersInput> | offerCreateWithoutUseroffersInput[] | offerUncheckedCreateWithoutUseroffersInput[]
    connectOrCreate?: offerCreateOrConnectWithoutUseroffersInput | offerCreateOrConnectWithoutUseroffersInput[]
    upsert?: offerUpsertWithWhereUniqueWithoutUseroffersInput | offerUpsertWithWhereUniqueWithoutUseroffersInput[]
    createMany?: offerCreateManyUseroffersInputEnvelope
    set?: offerWhereUniqueInput | offerWhereUniqueInput[]
    disconnect?: offerWhereUniqueInput | offerWhereUniqueInput[]
    delete?: offerWhereUniqueInput | offerWhereUniqueInput[]
    connect?: offerWhereUniqueInput | offerWhereUniqueInput[]
    update?: offerUpdateWithWhereUniqueWithoutUseroffersInput | offerUpdateWithWhereUniqueWithoutUseroffersInput[]
    updateMany?: offerUpdateManyWithWhereWithoutUseroffersInput | offerUpdateManyWithWhereWithoutUseroffersInput[]
    deleteMany?: offerScalarWhereInput | offerScalarWhereInput[]
  }

  export type contactUpdateManyWithoutUsercontactsNestedInput = {
    create?: XOR<contactCreateWithoutUsercontactsInput, contactUncheckedCreateWithoutUsercontactsInput> | contactCreateWithoutUsercontactsInput[] | contactUncheckedCreateWithoutUsercontactsInput[]
    connectOrCreate?: contactCreateOrConnectWithoutUsercontactsInput | contactCreateOrConnectWithoutUsercontactsInput[]
    upsert?: contactUpsertWithWhereUniqueWithoutUsercontactsInput | contactUpsertWithWhereUniqueWithoutUsercontactsInput[]
    createMany?: contactCreateManyUsercontactsInputEnvelope
    set?: contactWhereUniqueInput | contactWhereUniqueInput[]
    disconnect?: contactWhereUniqueInput | contactWhereUniqueInput[]
    delete?: contactWhereUniqueInput | contactWhereUniqueInput[]
    connect?: contactWhereUniqueInput | contactWhereUniqueInput[]
    update?: contactUpdateWithWhereUniqueWithoutUsercontactsInput | contactUpdateWithWhereUniqueWithoutUsercontactsInput[]
    updateMany?: contactUpdateManyWithWhereWithoutUsercontactsInput | contactUpdateManyWithWhereWithoutUsercontactsInput[]
    deleteMany?: contactScalarWhereInput | contactScalarWhereInput[]
  }

  export type pageUpdateManyWithoutUserpagesNestedInput = {
    create?: XOR<pageCreateWithoutUserpagesInput, pageUncheckedCreateWithoutUserpagesInput> | pageCreateWithoutUserpagesInput[] | pageUncheckedCreateWithoutUserpagesInput[]
    connectOrCreate?: pageCreateOrConnectWithoutUserpagesInput | pageCreateOrConnectWithoutUserpagesInput[]
    upsert?: pageUpsertWithWhereUniqueWithoutUserpagesInput | pageUpsertWithWhereUniqueWithoutUserpagesInput[]
    createMany?: pageCreateManyUserpagesInputEnvelope
    set?: pageWhereUniqueInput | pageWhereUniqueInput[]
    disconnect?: pageWhereUniqueInput | pageWhereUniqueInput[]
    delete?: pageWhereUniqueInput | pageWhereUniqueInput[]
    connect?: pageWhereUniqueInput | pageWhereUniqueInput[]
    update?: pageUpdateWithWhereUniqueWithoutUserpagesInput | pageUpdateWithWhereUniqueWithoutUserpagesInput[]
    updateMany?: pageUpdateManyWithWhereWithoutUserpagesInput | pageUpdateManyWithWhereWithoutUserpagesInput[]
    deleteMany?: pageScalarWhereInput | pageScalarWhereInput[]
  }

  export type servicecategoryUpdateManyWithoutUserservicecategoryNestedInput = {
    create?: XOR<servicecategoryCreateWithoutUserservicecategoryInput, servicecategoryUncheckedCreateWithoutUserservicecategoryInput> | servicecategoryCreateWithoutUserservicecategoryInput[] | servicecategoryUncheckedCreateWithoutUserservicecategoryInput[]
    connectOrCreate?: servicecategoryCreateOrConnectWithoutUserservicecategoryInput | servicecategoryCreateOrConnectWithoutUserservicecategoryInput[]
    upsert?: servicecategoryUpsertWithWhereUniqueWithoutUserservicecategoryInput | servicecategoryUpsertWithWhereUniqueWithoutUserservicecategoryInput[]
    createMany?: servicecategoryCreateManyUserservicecategoryInputEnvelope
    set?: servicecategoryWhereUniqueInput | servicecategoryWhereUniqueInput[]
    disconnect?: servicecategoryWhereUniqueInput | servicecategoryWhereUniqueInput[]
    delete?: servicecategoryWhereUniqueInput | servicecategoryWhereUniqueInput[]
    connect?: servicecategoryWhereUniqueInput | servicecategoryWhereUniqueInput[]
    update?: servicecategoryUpdateWithWhereUniqueWithoutUserservicecategoryInput | servicecategoryUpdateWithWhereUniqueWithoutUserservicecategoryInput[]
    updateMany?: servicecategoryUpdateManyWithWhereWithoutUserservicecategoryInput | servicecategoryUpdateManyWithWhereWithoutUserservicecategoryInput[]
    deleteMany?: servicecategoryScalarWhereInput | servicecategoryScalarWhereInput[]
  }

  export type serviceUpdateManyWithoutUserserviceNestedInput = {
    create?: XOR<serviceCreateWithoutUserserviceInput, serviceUncheckedCreateWithoutUserserviceInput> | serviceCreateWithoutUserserviceInput[] | serviceUncheckedCreateWithoutUserserviceInput[]
    connectOrCreate?: serviceCreateOrConnectWithoutUserserviceInput | serviceCreateOrConnectWithoutUserserviceInput[]
    upsert?: serviceUpsertWithWhereUniqueWithoutUserserviceInput | serviceUpsertWithWhereUniqueWithoutUserserviceInput[]
    createMany?: serviceCreateManyUserserviceInputEnvelope
    set?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
    disconnect?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
    delete?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
    connect?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
    update?: serviceUpdateWithWhereUniqueWithoutUserserviceInput | serviceUpdateWithWhereUniqueWithoutUserserviceInput[]
    updateMany?: serviceUpdateManyWithWhereWithoutUserserviceInput | serviceUpdateManyWithWhereWithoutUserserviceInput[]
    deleteMany?: serviceScalarWhereInput | serviceScalarWhereInput[]
  }

  export type notificationUncheckedUpdateManyWithoutToNestedInput = {
    create?: XOR<notificationCreateWithoutToInput, notificationUncheckedCreateWithoutToInput> | notificationCreateWithoutToInput[] | notificationUncheckedCreateWithoutToInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutToInput | notificationCreateOrConnectWithoutToInput[]
    upsert?: notificationUpsertWithWhereUniqueWithoutToInput | notificationUpsertWithWhereUniqueWithoutToInput[]
    createMany?: notificationCreateManyToInputEnvelope
    set?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    disconnect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    delete?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    update?: notificationUpdateWithWhereUniqueWithoutToInput | notificationUpdateWithWhereUniqueWithoutToInput[]
    updateMany?: notificationUpdateManyWithWhereWithoutToInput | notificationUpdateManyWithWhereWithoutToInput[]
    deleteMany?: notificationScalarWhereInput | notificationScalarWhereInput[]
  }

  export type apiclientUncheckedUpdateManyWithoutCreateduserNestedInput = {
    create?: XOR<apiclientCreateWithoutCreateduserInput, apiclientUncheckedCreateWithoutCreateduserInput> | apiclientCreateWithoutCreateduserInput[] | apiclientUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: apiclientCreateOrConnectWithoutCreateduserInput | apiclientCreateOrConnectWithoutCreateduserInput[]
    upsert?: apiclientUpsertWithWhereUniqueWithoutCreateduserInput | apiclientUpsertWithWhereUniqueWithoutCreateduserInput[]
    createMany?: apiclientCreateManyCreateduserInputEnvelope
    set?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    disconnect?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    delete?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    connect?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    update?: apiclientUpdateWithWhereUniqueWithoutCreateduserInput | apiclientUpdateWithWhereUniqueWithoutCreateduserInput[]
    updateMany?: apiclientUpdateManyWithWhereWithoutCreateduserInput | apiclientUpdateManyWithWhereWithoutCreateduserInput[]
    deleteMany?: apiclientScalarWhereInput | apiclientScalarWhereInput[]
  }

  export type apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput = {
    create?: XOR<apiclientCreateWithoutUpdateduserInput, apiclientUncheckedCreateWithoutUpdateduserInput> | apiclientCreateWithoutUpdateduserInput[] | apiclientUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: apiclientCreateOrConnectWithoutUpdateduserInput | apiclientCreateOrConnectWithoutUpdateduserInput[]
    upsert?: apiclientUpsertWithWhereUniqueWithoutUpdateduserInput | apiclientUpsertWithWhereUniqueWithoutUpdateduserInput[]
    createMany?: apiclientCreateManyUpdateduserInputEnvelope
    set?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    disconnect?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    delete?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    connect?: apiclientWhereUniqueInput | apiclientWhereUniqueInput[]
    update?: apiclientUpdateWithWhereUniqueWithoutUpdateduserInput | apiclientUpdateWithWhereUniqueWithoutUpdateduserInput[]
    updateMany?: apiclientUpdateManyWithWhereWithoutUpdateduserInput | apiclientUpdateManyWithWhereWithoutUpdateduserInput[]
    deleteMany?: apiclientScalarWhereInput | apiclientScalarWhereInput[]
  }

  export type permissionUncheckedUpdateManyWithoutCreateduserNestedInput = {
    create?: XOR<permissionCreateWithoutCreateduserInput, permissionUncheckedCreateWithoutCreateduserInput> | permissionCreateWithoutCreateduserInput[] | permissionUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: permissionCreateOrConnectWithoutCreateduserInput | permissionCreateOrConnectWithoutCreateduserInput[]
    upsert?: permissionUpsertWithWhereUniqueWithoutCreateduserInput | permissionUpsertWithWhereUniqueWithoutCreateduserInput[]
    createMany?: permissionCreateManyCreateduserInputEnvelope
    set?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    disconnect?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    delete?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    connect?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    update?: permissionUpdateWithWhereUniqueWithoutCreateduserInput | permissionUpdateWithWhereUniqueWithoutCreateduserInput[]
    updateMany?: permissionUpdateManyWithWhereWithoutCreateduserInput | permissionUpdateManyWithWhereWithoutCreateduserInput[]
    deleteMany?: permissionScalarWhereInput | permissionScalarWhereInput[]
  }

  export type permissionUncheckedUpdateManyWithoutUpdateduserNestedInput = {
    create?: XOR<permissionCreateWithoutUpdateduserInput, permissionUncheckedCreateWithoutUpdateduserInput> | permissionCreateWithoutUpdateduserInput[] | permissionUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: permissionCreateOrConnectWithoutUpdateduserInput | permissionCreateOrConnectWithoutUpdateduserInput[]
    upsert?: permissionUpsertWithWhereUniqueWithoutUpdateduserInput | permissionUpsertWithWhereUniqueWithoutUpdateduserInput[]
    createMany?: permissionCreateManyUpdateduserInputEnvelope
    set?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    disconnect?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    delete?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    connect?: permissionWhereUniqueInput | permissionWhereUniqueInput[]
    update?: permissionUpdateWithWhereUniqueWithoutUpdateduserInput | permissionUpdateWithWhereUniqueWithoutUpdateduserInput[]
    updateMany?: permissionUpdateManyWithWhereWithoutUpdateduserInput | permissionUpdateManyWithWhereWithoutUpdateduserInput[]
    deleteMany?: permissionScalarWhereInput | permissionScalarWhereInput[]
  }

  export type refreshtokenUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<refreshtokenCreateWithoutUserInput, refreshtokenUncheckedCreateWithoutUserInput> | refreshtokenCreateWithoutUserInput[] | refreshtokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: refreshtokenCreateOrConnectWithoutUserInput | refreshtokenCreateOrConnectWithoutUserInput[]
    upsert?: refreshtokenUpsertWithWhereUniqueWithoutUserInput | refreshtokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: refreshtokenCreateManyUserInputEnvelope
    set?: refreshtokenWhereUniqueInput | refreshtokenWhereUniqueInput[]
    disconnect?: refreshtokenWhereUniqueInput | refreshtokenWhereUniqueInput[]
    delete?: refreshtokenWhereUniqueInput | refreshtokenWhereUniqueInput[]
    connect?: refreshtokenWhereUniqueInput | refreshtokenWhereUniqueInput[]
    update?: refreshtokenUpdateWithWhereUniqueWithoutUserInput | refreshtokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: refreshtokenUpdateManyWithWhereWithoutUserInput | refreshtokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: refreshtokenScalarWhereInput | refreshtokenScalarWhereInput[]
  }

  export type roleUncheckedUpdateManyWithoutCreateduserNestedInput = {
    create?: XOR<roleCreateWithoutCreateduserInput, roleUncheckedCreateWithoutCreateduserInput> | roleCreateWithoutCreateduserInput[] | roleUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: roleCreateOrConnectWithoutCreateduserInput | roleCreateOrConnectWithoutCreateduserInput[]
    upsert?: roleUpsertWithWhereUniqueWithoutCreateduserInput | roleUpsertWithWhereUniqueWithoutCreateduserInput[]
    createMany?: roleCreateManyCreateduserInputEnvelope
    set?: roleWhereUniqueInput | roleWhereUniqueInput[]
    disconnect?: roleWhereUniqueInput | roleWhereUniqueInput[]
    delete?: roleWhereUniqueInput | roleWhereUniqueInput[]
    connect?: roleWhereUniqueInput | roleWhereUniqueInput[]
    update?: roleUpdateWithWhereUniqueWithoutCreateduserInput | roleUpdateWithWhereUniqueWithoutCreateduserInput[]
    updateMany?: roleUpdateManyWithWhereWithoutCreateduserInput | roleUpdateManyWithWhereWithoutCreateduserInput[]
    deleteMany?: roleScalarWhereInput | roleScalarWhereInput[]
  }

  export type roleUncheckedUpdateManyWithoutUpdateduserNestedInput = {
    create?: XOR<roleCreateWithoutUpdateduserInput, roleUncheckedCreateWithoutUpdateduserInput> | roleCreateWithoutUpdateduserInput[] | roleUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: roleCreateOrConnectWithoutUpdateduserInput | roleCreateOrConnectWithoutUpdateduserInput[]
    upsert?: roleUpsertWithWhereUniqueWithoutUpdateduserInput | roleUpsertWithWhereUniqueWithoutUpdateduserInput[]
    createMany?: roleCreateManyUpdateduserInputEnvelope
    set?: roleWhereUniqueInput | roleWhereUniqueInput[]
    disconnect?: roleWhereUniqueInput | roleWhereUniqueInput[]
    delete?: roleWhereUniqueInput | roleWhereUniqueInput[]
    connect?: roleWhereUniqueInput | roleWhereUniqueInput[]
    update?: roleUpdateWithWhereUniqueWithoutUpdateduserInput | roleUpdateWithWhereUniqueWithoutUpdateduserInput[]
    updateMany?: roleUpdateManyWithWhereWithoutUpdateduserInput | roleUpdateManyWithWhereWithoutUpdateduserInput[]
    deleteMany?: roleScalarWhereInput | roleScalarWhereInput[]
  }

  export type rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput = {
    create?: XOR<rolepermissionCreateWithoutCreateduserInput, rolepermissionUncheckedCreateWithoutCreateduserInput> | rolepermissionCreateWithoutCreateduserInput[] | rolepermissionUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutCreateduserInput | rolepermissionCreateOrConnectWithoutCreateduserInput[]
    upsert?: rolepermissionUpsertWithWhereUniqueWithoutCreateduserInput | rolepermissionUpsertWithWhereUniqueWithoutCreateduserInput[]
    createMany?: rolepermissionCreateManyCreateduserInputEnvelope
    set?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    disconnect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    delete?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    update?: rolepermissionUpdateWithWhereUniqueWithoutCreateduserInput | rolepermissionUpdateWithWhereUniqueWithoutCreateduserInput[]
    updateMany?: rolepermissionUpdateManyWithWhereWithoutCreateduserInput | rolepermissionUpdateManyWithWhereWithoutCreateduserInput[]
    deleteMany?: rolepermissionScalarWhereInput | rolepermissionScalarWhereInput[]
  }

  export type rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput = {
    create?: XOR<rolepermissionCreateWithoutUpdateduserInput, rolepermissionUncheckedCreateWithoutUpdateduserInput> | rolepermissionCreateWithoutUpdateduserInput[] | rolepermissionUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: rolepermissionCreateOrConnectWithoutUpdateduserInput | rolepermissionCreateOrConnectWithoutUpdateduserInput[]
    upsert?: rolepermissionUpsertWithWhereUniqueWithoutUpdateduserInput | rolepermissionUpsertWithWhereUniqueWithoutUpdateduserInput[]
    createMany?: rolepermissionCreateManyUpdateduserInputEnvelope
    set?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    disconnect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    delete?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    connect?: rolepermissionWhereUniqueInput | rolepermissionWhereUniqueInput[]
    update?: rolepermissionUpdateWithWhereUniqueWithoutUpdateduserInput | rolepermissionUpdateWithWhereUniqueWithoutUpdateduserInput[]
    updateMany?: rolepermissionUpdateManyWithWhereWithoutUpdateduserInput | rolepermissionUpdateManyWithWhereWithoutUpdateduserInput[]
    deleteMany?: rolepermissionScalarWhereInput | rolepermissionScalarWhereInput[]
  }

  export type userUncheckedUpdateManyWithoutCreateduserNestedInput = {
    create?: XOR<userCreateWithoutCreateduserInput, userUncheckedCreateWithoutCreateduserInput> | userCreateWithoutCreateduserInput[] | userUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: userCreateOrConnectWithoutCreateduserInput | userCreateOrConnectWithoutCreateduserInput[]
    upsert?: userUpsertWithWhereUniqueWithoutCreateduserInput | userUpsertWithWhereUniqueWithoutCreateduserInput[]
    createMany?: userCreateManyCreateduserInputEnvelope
    set?: userWhereUniqueInput | userWhereUniqueInput[]
    disconnect?: userWhereUniqueInput | userWhereUniqueInput[]
    delete?: userWhereUniqueInput | userWhereUniqueInput[]
    connect?: userWhereUniqueInput | userWhereUniqueInput[]
    update?: userUpdateWithWhereUniqueWithoutCreateduserInput | userUpdateWithWhereUniqueWithoutCreateduserInput[]
    updateMany?: userUpdateManyWithWhereWithoutCreateduserInput | userUpdateManyWithWhereWithoutCreateduserInput[]
    deleteMany?: userScalarWhereInput | userScalarWhereInput[]
  }

  export type userUncheckedUpdateManyWithoutUpdateduserNestedInput = {
    create?: XOR<userCreateWithoutUpdateduserInput, userUncheckedCreateWithoutUpdateduserInput> | userCreateWithoutUpdateduserInput[] | userUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: userCreateOrConnectWithoutUpdateduserInput | userCreateOrConnectWithoutUpdateduserInput[]
    upsert?: userUpsertWithWhereUniqueWithoutUpdateduserInput | userUpsertWithWhereUniqueWithoutUpdateduserInput[]
    createMany?: userCreateManyUpdateduserInputEnvelope
    set?: userWhereUniqueInput | userWhereUniqueInput[]
    disconnect?: userWhereUniqueInput | userWhereUniqueInput[]
    delete?: userWhereUniqueInput | userWhereUniqueInput[]
    connect?: userWhereUniqueInput | userWhereUniqueInput[]
    update?: userUpdateWithWhereUniqueWithoutUpdateduserInput | userUpdateWithWhereUniqueWithoutUpdateduserInput[]
    updateMany?: userUpdateManyWithWhereWithoutUpdateduserInput | userUpdateManyWithWhereWithoutUpdateduserInput[]
    deleteMany?: userScalarWhereInput | userScalarWhereInput[]
  }

  export type userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput = {
    create?: XOR<userpermissionCreateWithoutCreateduserInput, userpermissionUncheckedCreateWithoutCreateduserInput> | userpermissionCreateWithoutCreateduserInput[] | userpermissionUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutCreateduserInput | userpermissionCreateOrConnectWithoutCreateduserInput[]
    upsert?: userpermissionUpsertWithWhereUniqueWithoutCreateduserInput | userpermissionUpsertWithWhereUniqueWithoutCreateduserInput[]
    createMany?: userpermissionCreateManyCreateduserInputEnvelope
    set?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    disconnect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    delete?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    update?: userpermissionUpdateWithWhereUniqueWithoutCreateduserInput | userpermissionUpdateWithWhereUniqueWithoutCreateduserInput[]
    updateMany?: userpermissionUpdateManyWithWhereWithoutCreateduserInput | userpermissionUpdateManyWithWhereWithoutCreateduserInput[]
    deleteMany?: userpermissionScalarWhereInput | userpermissionScalarWhereInput[]
  }

  export type userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput = {
    create?: XOR<userpermissionCreateWithoutUpdateduserInput, userpermissionUncheckedCreateWithoutUpdateduserInput> | userpermissionCreateWithoutUpdateduserInput[] | userpermissionUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutUpdateduserInput | userpermissionCreateOrConnectWithoutUpdateduserInput[]
    upsert?: userpermissionUpsertWithWhereUniqueWithoutUpdateduserInput | userpermissionUpsertWithWhereUniqueWithoutUpdateduserInput[]
    createMany?: userpermissionCreateManyUpdateduserInputEnvelope
    set?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    disconnect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    delete?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    update?: userpermissionUpdateWithWhereUniqueWithoutUpdateduserInput | userpermissionUpdateWithWhereUniqueWithoutUpdateduserInput[]
    updateMany?: userpermissionUpdateManyWithWhereWithoutUpdateduserInput | userpermissionUpdateManyWithWhereWithoutUpdateduserInput[]
    deleteMany?: userpermissionScalarWhereInput | userpermissionScalarWhereInput[]
  }

  export type userpermissionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<userpermissionCreateWithoutUserInput, userpermissionUncheckedCreateWithoutUserInput> | userpermissionCreateWithoutUserInput[] | userpermissionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: userpermissionCreateOrConnectWithoutUserInput | userpermissionCreateOrConnectWithoutUserInput[]
    upsert?: userpermissionUpsertWithWhereUniqueWithoutUserInput | userpermissionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: userpermissionCreateManyUserInputEnvelope
    set?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    disconnect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    delete?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    connect?: userpermissionWhereUniqueInput | userpermissionWhereUniqueInput[]
    update?: userpermissionUpdateWithWhereUniqueWithoutUserInput | userpermissionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: userpermissionUpdateManyWithWhereWithoutUserInput | userpermissionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: userpermissionScalarWhereInput | userpermissionScalarWhereInput[]
  }

  export type userroleUncheckedUpdateManyWithoutCreateduserNestedInput = {
    create?: XOR<userroleCreateWithoutCreateduserInput, userroleUncheckedCreateWithoutCreateduserInput> | userroleCreateWithoutCreateduserInput[] | userroleUncheckedCreateWithoutCreateduserInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutCreateduserInput | userroleCreateOrConnectWithoutCreateduserInput[]
    upsert?: userroleUpsertWithWhereUniqueWithoutCreateduserInput | userroleUpsertWithWhereUniqueWithoutCreateduserInput[]
    createMany?: userroleCreateManyCreateduserInputEnvelope
    set?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    disconnect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    delete?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    update?: userroleUpdateWithWhereUniqueWithoutCreateduserInput | userroleUpdateWithWhereUniqueWithoutCreateduserInput[]
    updateMany?: userroleUpdateManyWithWhereWithoutCreateduserInput | userroleUpdateManyWithWhereWithoutCreateduserInput[]
    deleteMany?: userroleScalarWhereInput | userroleScalarWhereInput[]
  }

  export type userroleUncheckedUpdateManyWithoutUpdateduserNestedInput = {
    create?: XOR<userroleCreateWithoutUpdateduserInput, userroleUncheckedCreateWithoutUpdateduserInput> | userroleCreateWithoutUpdateduserInput[] | userroleUncheckedCreateWithoutUpdateduserInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutUpdateduserInput | userroleCreateOrConnectWithoutUpdateduserInput[]
    upsert?: userroleUpsertWithWhereUniqueWithoutUpdateduserInput | userroleUpsertWithWhereUniqueWithoutUpdateduserInput[]
    createMany?: userroleCreateManyUpdateduserInputEnvelope
    set?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    disconnect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    delete?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    update?: userroleUpdateWithWhereUniqueWithoutUpdateduserInput | userroleUpdateWithWhereUniqueWithoutUpdateduserInput[]
    updateMany?: userroleUpdateManyWithWhereWithoutUpdateduserInput | userroleUpdateManyWithWhereWithoutUpdateduserInput[]
    deleteMany?: userroleScalarWhereInput | userroleScalarWhereInput[]
  }

  export type userroleUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<userroleCreateWithoutUserInput, userroleUncheckedCreateWithoutUserInput> | userroleCreateWithoutUserInput[] | userroleUncheckedCreateWithoutUserInput[]
    connectOrCreate?: userroleCreateOrConnectWithoutUserInput | userroleCreateOrConnectWithoutUserInput[]
    upsert?: userroleUpsertWithWhereUniqueWithoutUserInput | userroleUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: userroleCreateManyUserInputEnvelope
    set?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    disconnect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    delete?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    connect?: userroleWhereUniqueInput | userroleWhereUniqueInput[]
    update?: userroleUpdateWithWhereUniqueWithoutUserInput | userroleUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: userroleUpdateManyWithWhereWithoutUserInput | userroleUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: userroleScalarWhereInput | userroleScalarWhereInput[]
  }

  export type offerUncheckedUpdateManyWithoutUseroffersNestedInput = {
    create?: XOR<offerCreateWithoutUseroffersInput, offerUncheckedCreateWithoutUseroffersInput> | offerCreateWithoutUseroffersInput[] | offerUncheckedCreateWithoutUseroffersInput[]
    connectOrCreate?: offerCreateOrConnectWithoutUseroffersInput | offerCreateOrConnectWithoutUseroffersInput[]
    upsert?: offerUpsertWithWhereUniqueWithoutUseroffersInput | offerUpsertWithWhereUniqueWithoutUseroffersInput[]
    createMany?: offerCreateManyUseroffersInputEnvelope
    set?: offerWhereUniqueInput | offerWhereUniqueInput[]
    disconnect?: offerWhereUniqueInput | offerWhereUniqueInput[]
    delete?: offerWhereUniqueInput | offerWhereUniqueInput[]
    connect?: offerWhereUniqueInput | offerWhereUniqueInput[]
    update?: offerUpdateWithWhereUniqueWithoutUseroffersInput | offerUpdateWithWhereUniqueWithoutUseroffersInput[]
    updateMany?: offerUpdateManyWithWhereWithoutUseroffersInput | offerUpdateManyWithWhereWithoutUseroffersInput[]
    deleteMany?: offerScalarWhereInput | offerScalarWhereInput[]
  }

  export type contactUncheckedUpdateManyWithoutUsercontactsNestedInput = {
    create?: XOR<contactCreateWithoutUsercontactsInput, contactUncheckedCreateWithoutUsercontactsInput> | contactCreateWithoutUsercontactsInput[] | contactUncheckedCreateWithoutUsercontactsInput[]
    connectOrCreate?: contactCreateOrConnectWithoutUsercontactsInput | contactCreateOrConnectWithoutUsercontactsInput[]
    upsert?: contactUpsertWithWhereUniqueWithoutUsercontactsInput | contactUpsertWithWhereUniqueWithoutUsercontactsInput[]
    createMany?: contactCreateManyUsercontactsInputEnvelope
    set?: contactWhereUniqueInput | contactWhereUniqueInput[]
    disconnect?: contactWhereUniqueInput | contactWhereUniqueInput[]
    delete?: contactWhereUniqueInput | contactWhereUniqueInput[]
    connect?: contactWhereUniqueInput | contactWhereUniqueInput[]
    update?: contactUpdateWithWhereUniqueWithoutUsercontactsInput | contactUpdateWithWhereUniqueWithoutUsercontactsInput[]
    updateMany?: contactUpdateManyWithWhereWithoutUsercontactsInput | contactUpdateManyWithWhereWithoutUsercontactsInput[]
    deleteMany?: contactScalarWhereInput | contactScalarWhereInput[]
  }

  export type pageUncheckedUpdateManyWithoutUserpagesNestedInput = {
    create?: XOR<pageCreateWithoutUserpagesInput, pageUncheckedCreateWithoutUserpagesInput> | pageCreateWithoutUserpagesInput[] | pageUncheckedCreateWithoutUserpagesInput[]
    connectOrCreate?: pageCreateOrConnectWithoutUserpagesInput | pageCreateOrConnectWithoutUserpagesInput[]
    upsert?: pageUpsertWithWhereUniqueWithoutUserpagesInput | pageUpsertWithWhereUniqueWithoutUserpagesInput[]
    createMany?: pageCreateManyUserpagesInputEnvelope
    set?: pageWhereUniqueInput | pageWhereUniqueInput[]
    disconnect?: pageWhereUniqueInput | pageWhereUniqueInput[]
    delete?: pageWhereUniqueInput | pageWhereUniqueInput[]
    connect?: pageWhereUniqueInput | pageWhereUniqueInput[]
    update?: pageUpdateWithWhereUniqueWithoutUserpagesInput | pageUpdateWithWhereUniqueWithoutUserpagesInput[]
    updateMany?: pageUpdateManyWithWhereWithoutUserpagesInput | pageUpdateManyWithWhereWithoutUserpagesInput[]
    deleteMany?: pageScalarWhereInput | pageScalarWhereInput[]
  }

  export type servicecategoryUncheckedUpdateManyWithoutUserservicecategoryNestedInput = {
    create?: XOR<servicecategoryCreateWithoutUserservicecategoryInput, servicecategoryUncheckedCreateWithoutUserservicecategoryInput> | servicecategoryCreateWithoutUserservicecategoryInput[] | servicecategoryUncheckedCreateWithoutUserservicecategoryInput[]
    connectOrCreate?: servicecategoryCreateOrConnectWithoutUserservicecategoryInput | servicecategoryCreateOrConnectWithoutUserservicecategoryInput[]
    upsert?: servicecategoryUpsertWithWhereUniqueWithoutUserservicecategoryInput | servicecategoryUpsertWithWhereUniqueWithoutUserservicecategoryInput[]
    createMany?: servicecategoryCreateManyUserservicecategoryInputEnvelope
    set?: servicecategoryWhereUniqueInput | servicecategoryWhereUniqueInput[]
    disconnect?: servicecategoryWhereUniqueInput | servicecategoryWhereUniqueInput[]
    delete?: servicecategoryWhereUniqueInput | servicecategoryWhereUniqueInput[]
    connect?: servicecategoryWhereUniqueInput | servicecategoryWhereUniqueInput[]
    update?: servicecategoryUpdateWithWhereUniqueWithoutUserservicecategoryInput | servicecategoryUpdateWithWhereUniqueWithoutUserservicecategoryInput[]
    updateMany?: servicecategoryUpdateManyWithWhereWithoutUserservicecategoryInput | servicecategoryUpdateManyWithWhereWithoutUserservicecategoryInput[]
    deleteMany?: servicecategoryScalarWhereInput | servicecategoryScalarWhereInput[]
  }

  export type serviceUncheckedUpdateManyWithoutUserserviceNestedInput = {
    create?: XOR<serviceCreateWithoutUserserviceInput, serviceUncheckedCreateWithoutUserserviceInput> | serviceCreateWithoutUserserviceInput[] | serviceUncheckedCreateWithoutUserserviceInput[]
    connectOrCreate?: serviceCreateOrConnectWithoutUserserviceInput | serviceCreateOrConnectWithoutUserserviceInput[]
    upsert?: serviceUpsertWithWhereUniqueWithoutUserserviceInput | serviceUpsertWithWhereUniqueWithoutUserserviceInput[]
    createMany?: serviceCreateManyUserserviceInputEnvelope
    set?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
    disconnect?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
    delete?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
    connect?: serviceWhereUniqueInput | serviceWhereUniqueInput[]
    update?: serviceUpdateWithWhereUniqueWithoutUserserviceInput | serviceUpdateWithWhereUniqueWithoutUserserviceInput[]
    updateMany?: serviceUpdateManyWithWhereWithoutUserserviceInput | serviceUpdateManyWithWhereWithoutUserserviceInput[]
    deleteMany?: serviceScalarWhereInput | serviceScalarWhereInput[]
  }

  export type userCreateNestedOneWithoutCreateduserpermissionsInput = {
    create?: XOR<userCreateWithoutCreateduserpermissionsInput, userUncheckedCreateWithoutCreateduserpermissionsInput>
    connectOrCreate?: userCreateOrConnectWithoutCreateduserpermissionsInput
    connect?: userWhereUniqueInput
  }

  export type permissionCreateNestedOneWithoutUserpermissionsInput = {
    create?: XOR<permissionCreateWithoutUserpermissionsInput, permissionUncheckedCreateWithoutUserpermissionsInput>
    connectOrCreate?: permissionCreateOrConnectWithoutUserpermissionsInput
    connect?: permissionWhereUniqueInput
  }

  export type userCreateNestedOneWithoutUpdateduserpermissionsInput = {
    create?: XOR<userCreateWithoutUpdateduserpermissionsInput, userUncheckedCreateWithoutUpdateduserpermissionsInput>
    connectOrCreate?: userCreateOrConnectWithoutUpdateduserpermissionsInput
    connect?: userWhereUniqueInput
  }

  export type userCreateNestedOneWithoutUserpermissionsInput = {
    create?: XOR<userCreateWithoutUserpermissionsInput, userUncheckedCreateWithoutUserpermissionsInput>
    connectOrCreate?: userCreateOrConnectWithoutUserpermissionsInput
    connect?: userWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutCreateduserpermissionsNestedInput = {
    create?: XOR<userCreateWithoutCreateduserpermissionsInput, userUncheckedCreateWithoutCreateduserpermissionsInput>
    connectOrCreate?: userCreateOrConnectWithoutCreateduserpermissionsInput
    upsert?: userUpsertWithoutCreateduserpermissionsInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutCreateduserpermissionsInput, userUpdateWithoutCreateduserpermissionsInput>, userUncheckedUpdateWithoutCreateduserpermissionsInput>
  }

  export type permissionUpdateOneRequiredWithoutUserpermissionsNestedInput = {
    create?: XOR<permissionCreateWithoutUserpermissionsInput, permissionUncheckedCreateWithoutUserpermissionsInput>
    connectOrCreate?: permissionCreateOrConnectWithoutUserpermissionsInput
    upsert?: permissionUpsertWithoutUserpermissionsInput
    connect?: permissionWhereUniqueInput
    update?: XOR<XOR<permissionUpdateToOneWithWhereWithoutUserpermissionsInput, permissionUpdateWithoutUserpermissionsInput>, permissionUncheckedUpdateWithoutUserpermissionsInput>
  }

  export type userUpdateOneWithoutUpdateduserpermissionsNestedInput = {
    create?: XOR<userCreateWithoutUpdateduserpermissionsInput, userUncheckedCreateWithoutUpdateduserpermissionsInput>
    connectOrCreate?: userCreateOrConnectWithoutUpdateduserpermissionsInput
    upsert?: userUpsertWithoutUpdateduserpermissionsInput
    disconnect?: userWhereInput | boolean
    delete?: userWhereInput | boolean
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUpdateduserpermissionsInput, userUpdateWithoutUpdateduserpermissionsInput>, userUncheckedUpdateWithoutUpdateduserpermissionsInput>
  }

  export type userUpdateOneRequiredWithoutUserpermissionsNestedInput = {
    create?: XOR<userCreateWithoutUserpermissionsInput, userUncheckedCreateWithoutUserpermissionsInput>
    connectOrCreate?: userCreateOrConnectWithoutUserpermissionsInput
    upsert?: userUpsertWithoutUserpermissionsInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUserpermissionsInput, userUpdateWithoutUserpermissionsInput>, userUncheckedUpdateWithoutUserpermissionsInput>
  }

  export type userCreateNestedOneWithoutCreateduserrolesInput = {
    create?: XOR<userCreateWithoutCreateduserrolesInput, userUncheckedCreateWithoutCreateduserrolesInput>
    connectOrCreate?: userCreateOrConnectWithoutCreateduserrolesInput
    connect?: userWhereUniqueInput
  }

  export type roleCreateNestedOneWithoutUserrolesInput = {
    create?: XOR<roleCreateWithoutUserrolesInput, roleUncheckedCreateWithoutUserrolesInput>
    connectOrCreate?: roleCreateOrConnectWithoutUserrolesInput
    connect?: roleWhereUniqueInput
  }

  export type userCreateNestedOneWithoutUpdateduserrolesInput = {
    create?: XOR<userCreateWithoutUpdateduserrolesInput, userUncheckedCreateWithoutUpdateduserrolesInput>
    connectOrCreate?: userCreateOrConnectWithoutUpdateduserrolesInput
    connect?: userWhereUniqueInput
  }

  export type userCreateNestedOneWithoutUserrolesInput = {
    create?: XOR<userCreateWithoutUserrolesInput, userUncheckedCreateWithoutUserrolesInput>
    connectOrCreate?: userCreateOrConnectWithoutUserrolesInput
    connect?: userWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutCreateduserrolesNestedInput = {
    create?: XOR<userCreateWithoutCreateduserrolesInput, userUncheckedCreateWithoutCreateduserrolesInput>
    connectOrCreate?: userCreateOrConnectWithoutCreateduserrolesInput
    upsert?: userUpsertWithoutCreateduserrolesInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutCreateduserrolesInput, userUpdateWithoutCreateduserrolesInput>, userUncheckedUpdateWithoutCreateduserrolesInput>
  }

  export type roleUpdateOneRequiredWithoutUserrolesNestedInput = {
    create?: XOR<roleCreateWithoutUserrolesInput, roleUncheckedCreateWithoutUserrolesInput>
    connectOrCreate?: roleCreateOrConnectWithoutUserrolesInput
    upsert?: roleUpsertWithoutUserrolesInput
    connect?: roleWhereUniqueInput
    update?: XOR<XOR<roleUpdateToOneWithWhereWithoutUserrolesInput, roleUpdateWithoutUserrolesInput>, roleUncheckedUpdateWithoutUserrolesInput>
  }

  export type userUpdateOneWithoutUpdateduserrolesNestedInput = {
    create?: XOR<userCreateWithoutUpdateduserrolesInput, userUncheckedCreateWithoutUpdateduserrolesInput>
    connectOrCreate?: userCreateOrConnectWithoutUpdateduserrolesInput
    upsert?: userUpsertWithoutUpdateduserrolesInput
    disconnect?: userWhereInput | boolean
    delete?: userWhereInput | boolean
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUpdateduserrolesInput, userUpdateWithoutUpdateduserrolesInput>, userUncheckedUpdateWithoutUpdateduserrolesInput>
  }

  export type userUpdateOneRequiredWithoutUserrolesNestedInput = {
    create?: XOR<userCreateWithoutUserrolesInput, userUncheckedCreateWithoutUserrolesInput>
    connectOrCreate?: userCreateOrConnectWithoutUserrolesInput
    upsert?: userUpsertWithoutUserrolesInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUserrolesInput, userUpdateWithoutUserrolesInput>, userUncheckedUpdateWithoutUserrolesInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type blogCreateWithoutBlogcommentsInput = {
    title: string
    content: string
    slug: string
    featuredimage: string
    metaid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    blogcategory: blogcategoryCreateNestedOneWithoutBlogsInput
  }

  export type blogUncheckedCreateWithoutBlogcommentsInput = {
    id?: number
    title: string
    content: string
    slug: string
    featuredimage: string
    blogcategoryid: number
    metaid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
  }

  export type blogCreateOrConnectWithoutBlogcommentsInput = {
    where: blogWhereUniqueInput
    create: XOR<blogCreateWithoutBlogcommentsInput, blogUncheckedCreateWithoutBlogcommentsInput>
  }

  export type blogUpsertWithoutBlogcommentsInput = {
    update: XOR<blogUpdateWithoutBlogcommentsInput, blogUncheckedUpdateWithoutBlogcommentsInput>
    create: XOR<blogCreateWithoutBlogcommentsInput, blogUncheckedCreateWithoutBlogcommentsInput>
    where?: blogWhereInput
  }

  export type blogUpdateToOneWithWhereWithoutBlogcommentsInput = {
    where?: blogWhereInput
    data: XOR<blogUpdateWithoutBlogcommentsInput, blogUncheckedUpdateWithoutBlogcommentsInput>
  }

  export type blogUpdateWithoutBlogcommentsInput = {
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    featuredimage?: StringFieldUpdateOperationsInput | string
    metaid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    blogcategory?: blogcategoryUpdateOneRequiredWithoutBlogsNestedInput
  }

  export type blogUncheckedUpdateWithoutBlogcommentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    featuredimage?: StringFieldUpdateOperationsInput | string
    blogcategoryid?: IntFieldUpdateOperationsInput | number
    metaid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
  }

  export type blogcategoryCreateWithoutBlogsInput = {
    name: string
    description: string
    featuredimage: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    blogcategorymeta?: metaCreateNestedOneWithoutBlogcategoryInput
  }

  export type blogcategoryUncheckedCreateWithoutBlogsInput = {
    id?: number
    name: string
    description: string
    featuredimage: string
    metaid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
  }

  export type blogcategoryCreateOrConnectWithoutBlogsInput = {
    where: blogcategoryWhereUniqueInput
    create: XOR<blogcategoryCreateWithoutBlogsInput, blogcategoryUncheckedCreateWithoutBlogsInput>
  }

  export type blogcommentCreateWithoutBlogInput = {
    name: string
    email: string
    comment: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
  }

  export type blogcommentUncheckedCreateWithoutBlogInput = {
    id?: number
    name: string
    email: string
    comment: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
  }

  export type blogcommentCreateOrConnectWithoutBlogInput = {
    where: blogcommentWhereUniqueInput
    create: XOR<blogcommentCreateWithoutBlogInput, blogcommentUncheckedCreateWithoutBlogInput>
  }

  export type blogcommentCreateManyBlogInputEnvelope = {
    data: blogcommentCreateManyBlogInput | blogcommentCreateManyBlogInput[]
    skipDuplicates?: boolean
  }

  export type blogcategoryUpsertWithoutBlogsInput = {
    update: XOR<blogcategoryUpdateWithoutBlogsInput, blogcategoryUncheckedUpdateWithoutBlogsInput>
    create: XOR<blogcategoryCreateWithoutBlogsInput, blogcategoryUncheckedCreateWithoutBlogsInput>
    where?: blogcategoryWhereInput
  }

  export type blogcategoryUpdateToOneWithWhereWithoutBlogsInput = {
    where?: blogcategoryWhereInput
    data: XOR<blogcategoryUpdateWithoutBlogsInput, blogcategoryUncheckedUpdateWithoutBlogsInput>
  }

  export type blogcategoryUpdateWithoutBlogsInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    featuredimage?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    blogcategorymeta?: metaUpdateOneWithoutBlogcategoryNestedInput
  }

  export type blogcategoryUncheckedUpdateWithoutBlogsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    featuredimage?: StringFieldUpdateOperationsInput | string
    metaid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
  }

  export type blogcommentUpsertWithWhereUniqueWithoutBlogInput = {
    where: blogcommentWhereUniqueInput
    update: XOR<blogcommentUpdateWithoutBlogInput, blogcommentUncheckedUpdateWithoutBlogInput>
    create: XOR<blogcommentCreateWithoutBlogInput, blogcommentUncheckedCreateWithoutBlogInput>
  }

  export type blogcommentUpdateWithWhereUniqueWithoutBlogInput = {
    where: blogcommentWhereUniqueInput
    data: XOR<blogcommentUpdateWithoutBlogInput, blogcommentUncheckedUpdateWithoutBlogInput>
  }

  export type blogcommentUpdateManyWithWhereWithoutBlogInput = {
    where: blogcommentScalarWhereInput
    data: XOR<blogcommentUpdateManyMutationInput, blogcommentUncheckedUpdateManyWithoutBlogInput>
  }

  export type blogcommentScalarWhereInput = {
    AND?: blogcommentScalarWhereInput | blogcommentScalarWhereInput[]
    OR?: blogcommentScalarWhereInput[]
    NOT?: blogcommentScalarWhereInput | blogcommentScalarWhereInput[]
    id?: IntFilter<"blogcomment"> | number
    blogid?: IntFilter<"blogcomment"> | number
    name?: StringFilter<"blogcomment"> | string
    email?: StringFilter<"blogcomment"> | string
    comment?: StringFilter<"blogcomment"> | string
    createdat?: DateTimeFilter<"blogcomment"> | Date | string
    createdby?: IntFilter<"blogcomment"> | number
    updatedat?: DateTimeNullableFilter<"blogcomment"> | Date | string | null
    updatedby?: IntNullableFilter<"blogcomment"> | number | null
    isactive?: IntFilter<"blogcomment"> | number
  }

  export type blogCreateWithoutBlogcategoryInput = {
    title: string
    content: string
    slug: string
    featuredimage: string
    metaid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    blogcomments?: blogcommentCreateNestedManyWithoutBlogInput
  }

  export type blogUncheckedCreateWithoutBlogcategoryInput = {
    id?: number
    title: string
    content: string
    slug: string
    featuredimage: string
    metaid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    blogcomments?: blogcommentUncheckedCreateNestedManyWithoutBlogInput
  }

  export type blogCreateOrConnectWithoutBlogcategoryInput = {
    where: blogWhereUniqueInput
    create: XOR<blogCreateWithoutBlogcategoryInput, blogUncheckedCreateWithoutBlogcategoryInput>
  }

  export type blogCreateManyBlogcategoryInputEnvelope = {
    data: blogCreateManyBlogcategoryInput | blogCreateManyBlogcategoryInput[]
    skipDuplicates?: boolean
  }

  export type metaCreateWithoutBlogcategoryInput = {
    metatitle: string
    metadescription: string
    metakeywords: string
    metarobots: string
    metahttpequiv: string
    metalanguage: string
    metaauthor: string
    metarevisit: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    pages?: pageCreateNestedManyWithoutMetatagsInput
    services?: serviceCreateNestedManyWithoutMetatagsInput
    servicecategory?: servicecategoryCreateNestedManyWithoutMetatagsInput
  }

  export type metaUncheckedCreateWithoutBlogcategoryInput = {
    id?: number
    metatitle: string
    metadescription: string
    metakeywords: string
    metarobots: string
    metahttpequiv: string
    metalanguage: string
    metaauthor: string
    metarevisit: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    pages?: pageUncheckedCreateNestedManyWithoutMetatagsInput
    services?: serviceUncheckedCreateNestedManyWithoutMetatagsInput
    servicecategory?: servicecategoryUncheckedCreateNestedManyWithoutMetatagsInput
  }

  export type metaCreateOrConnectWithoutBlogcategoryInput = {
    where: metaWhereUniqueInput
    create: XOR<metaCreateWithoutBlogcategoryInput, metaUncheckedCreateWithoutBlogcategoryInput>
  }

  export type blogUpsertWithWhereUniqueWithoutBlogcategoryInput = {
    where: blogWhereUniqueInput
    update: XOR<blogUpdateWithoutBlogcategoryInput, blogUncheckedUpdateWithoutBlogcategoryInput>
    create: XOR<blogCreateWithoutBlogcategoryInput, blogUncheckedCreateWithoutBlogcategoryInput>
  }

  export type blogUpdateWithWhereUniqueWithoutBlogcategoryInput = {
    where: blogWhereUniqueInput
    data: XOR<blogUpdateWithoutBlogcategoryInput, blogUncheckedUpdateWithoutBlogcategoryInput>
  }

  export type blogUpdateManyWithWhereWithoutBlogcategoryInput = {
    where: blogScalarWhereInput
    data: XOR<blogUpdateManyMutationInput, blogUncheckedUpdateManyWithoutBlogcategoryInput>
  }

  export type blogScalarWhereInput = {
    AND?: blogScalarWhereInput | blogScalarWhereInput[]
    OR?: blogScalarWhereInput[]
    NOT?: blogScalarWhereInput | blogScalarWhereInput[]
    id?: IntFilter<"blog"> | number
    title?: StringFilter<"blog"> | string
    content?: StringFilter<"blog"> | string
    slug?: StringFilter<"blog"> | string
    featuredimage?: StringFilter<"blog"> | string
    blogcategoryid?: IntFilter<"blog"> | number
    metaid?: IntFilter<"blog"> | number
    createdat?: DateTimeFilter<"blog"> | Date | string
    createdby?: IntFilter<"blog"> | number
    updatedat?: DateTimeNullableFilter<"blog"> | Date | string | null
    updatedby?: IntNullableFilter<"blog"> | number | null
    isactive?: IntFilter<"blog"> | number
  }

  export type metaUpsertWithoutBlogcategoryInput = {
    update: XOR<metaUpdateWithoutBlogcategoryInput, metaUncheckedUpdateWithoutBlogcategoryInput>
    create: XOR<metaCreateWithoutBlogcategoryInput, metaUncheckedCreateWithoutBlogcategoryInput>
    where?: metaWhereInput
  }

  export type metaUpdateToOneWithWhereWithoutBlogcategoryInput = {
    where?: metaWhereInput
    data: XOR<metaUpdateWithoutBlogcategoryInput, metaUncheckedUpdateWithoutBlogcategoryInput>
  }

  export type metaUpdateWithoutBlogcategoryInput = {
    metatitle?: StringFieldUpdateOperationsInput | string
    metadescription?: StringFieldUpdateOperationsInput | string
    metakeywords?: StringFieldUpdateOperationsInput | string
    metarobots?: StringFieldUpdateOperationsInput | string
    metahttpequiv?: StringFieldUpdateOperationsInput | string
    metalanguage?: StringFieldUpdateOperationsInput | string
    metaauthor?: StringFieldUpdateOperationsInput | string
    metarevisit?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    pages?: pageUpdateManyWithoutMetatagsNestedInput
    services?: serviceUpdateManyWithoutMetatagsNestedInput
    servicecategory?: servicecategoryUpdateManyWithoutMetatagsNestedInput
  }

  export type metaUncheckedUpdateWithoutBlogcategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    metatitle?: StringFieldUpdateOperationsInput | string
    metadescription?: StringFieldUpdateOperationsInput | string
    metakeywords?: StringFieldUpdateOperationsInput | string
    metarobots?: StringFieldUpdateOperationsInput | string
    metahttpequiv?: StringFieldUpdateOperationsInput | string
    metalanguage?: StringFieldUpdateOperationsInput | string
    metaauthor?: StringFieldUpdateOperationsInput | string
    metarevisit?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    pages?: pageUncheckedUpdateManyWithoutMetatagsNestedInput
    services?: serviceUncheckedUpdateManyWithoutMetatagsNestedInput
    servicecategory?: servicecategoryUncheckedUpdateManyWithoutMetatagsNestedInput
  }

  export type pageCreateWithoutMetatagsInput = {
    name: string
    content: string
    slug: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    service?: serviceCreateNestedOneWithoutPagesInput
    userpages?: userCreateNestedOneWithoutUserpagesInput
  }

  export type pageUncheckedCreateWithoutMetatagsInput = {
    id?: number
    name: string
    content: string
    slug: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    serviceid: number
  }

  export type pageCreateOrConnectWithoutMetatagsInput = {
    where: pageWhereUniqueInput
    create: XOR<pageCreateWithoutMetatagsInput, pageUncheckedCreateWithoutMetatagsInput>
  }

  export type pageCreateManyMetatagsInputEnvelope = {
    data: pageCreateManyMetatagsInput | pageCreateManyMetatagsInput[]
    skipDuplicates?: boolean
  }

  export type serviceCreateWithoutMetatagsInput = {
    name: string
    description: JsonNullValueInput | InputJsonValue
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    servicecategory: servicecategoryCreateNestedOneWithoutServicesInput
    pages?: pageCreateNestedManyWithoutServiceInput
    contacts?: contactCreateNestedManyWithoutServiceInput
    offers?: offerCreateNestedManyWithoutServiceInput
    userservice?: userCreateNestedOneWithoutUserserviceInput
  }

  export type serviceUncheckedCreateWithoutMetatagsInput = {
    id?: number
    name: string
    description: JsonNullValueInput | InputJsonValue
    servicecategoryid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    pages?: pageUncheckedCreateNestedManyWithoutServiceInput
    contacts?: contactUncheckedCreateNestedManyWithoutServiceInput
    offers?: offerUncheckedCreateNestedManyWithoutServiceInput
  }

  export type serviceCreateOrConnectWithoutMetatagsInput = {
    where: serviceWhereUniqueInput
    create: XOR<serviceCreateWithoutMetatagsInput, serviceUncheckedCreateWithoutMetatagsInput>
  }

  export type serviceCreateManyMetatagsInputEnvelope = {
    data: serviceCreateManyMetatagsInput | serviceCreateManyMetatagsInput[]
    skipDuplicates?: boolean
  }

  export type servicecategoryCreateWithoutMetatagsInput = {
    name: string
    description: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    services?: serviceCreateNestedManyWithoutServicecategoryInput
    contacts?: contactCreateNestedManyWithoutServicecategoryInput
    userservicecategory?: userCreateNestedOneWithoutUserservicecategoryInput
  }

  export type servicecategoryUncheckedCreateWithoutMetatagsInput = {
    id?: number
    name: string
    description: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    services?: serviceUncheckedCreateNestedManyWithoutServicecategoryInput
    contacts?: contactUncheckedCreateNestedManyWithoutServicecategoryInput
  }

  export type servicecategoryCreateOrConnectWithoutMetatagsInput = {
    where: servicecategoryWhereUniqueInput
    create: XOR<servicecategoryCreateWithoutMetatagsInput, servicecategoryUncheckedCreateWithoutMetatagsInput>
  }

  export type servicecategoryCreateManyMetatagsInputEnvelope = {
    data: servicecategoryCreateManyMetatagsInput | servicecategoryCreateManyMetatagsInput[]
    skipDuplicates?: boolean
  }

  export type blogcategoryCreateWithoutBlogcategorymetaInput = {
    name: string
    description: string
    featuredimage: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    blogs?: blogCreateNestedManyWithoutBlogcategoryInput
  }

  export type blogcategoryUncheckedCreateWithoutBlogcategorymetaInput = {
    id?: number
    name: string
    description: string
    featuredimage: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    blogs?: blogUncheckedCreateNestedManyWithoutBlogcategoryInput
  }

  export type blogcategoryCreateOrConnectWithoutBlogcategorymetaInput = {
    where: blogcategoryWhereUniqueInput
    create: XOR<blogcategoryCreateWithoutBlogcategorymetaInput, blogcategoryUncheckedCreateWithoutBlogcategorymetaInput>
  }

  export type blogcategoryCreateManyBlogcategorymetaInputEnvelope = {
    data: blogcategoryCreateManyBlogcategorymetaInput | blogcategoryCreateManyBlogcategorymetaInput[]
    skipDuplicates?: boolean
  }

  export type pageUpsertWithWhereUniqueWithoutMetatagsInput = {
    where: pageWhereUniqueInput
    update: XOR<pageUpdateWithoutMetatagsInput, pageUncheckedUpdateWithoutMetatagsInput>
    create: XOR<pageCreateWithoutMetatagsInput, pageUncheckedCreateWithoutMetatagsInput>
  }

  export type pageUpdateWithWhereUniqueWithoutMetatagsInput = {
    where: pageWhereUniqueInput
    data: XOR<pageUpdateWithoutMetatagsInput, pageUncheckedUpdateWithoutMetatagsInput>
  }

  export type pageUpdateManyWithWhereWithoutMetatagsInput = {
    where: pageScalarWhereInput
    data: XOR<pageUpdateManyMutationInput, pageUncheckedUpdateManyWithoutMetatagsInput>
  }

  export type pageScalarWhereInput = {
    AND?: pageScalarWhereInput | pageScalarWhereInput[]
    OR?: pageScalarWhereInput[]
    NOT?: pageScalarWhereInput | pageScalarWhereInput[]
    id?: IntFilter<"page"> | number
    metaid?: IntFilter<"page"> | number
    name?: StringFilter<"page"> | string
    content?: StringFilter<"page"> | string
    slug?: StringFilter<"page"> | string
    createdat?: DateTimeFilter<"page"> | Date | string
    createdby?: IntFilter<"page"> | number
    updatedat?: DateTimeNullableFilter<"page"> | Date | string | null
    updatedby?: IntNullableFilter<"page"> | number | null
    isactive?: IntFilter<"page"> | number
    serviceid?: IntFilter<"page"> | number
  }

  export type serviceUpsertWithWhereUniqueWithoutMetatagsInput = {
    where: serviceWhereUniqueInput
    update: XOR<serviceUpdateWithoutMetatagsInput, serviceUncheckedUpdateWithoutMetatagsInput>
    create: XOR<serviceCreateWithoutMetatagsInput, serviceUncheckedCreateWithoutMetatagsInput>
  }

  export type serviceUpdateWithWhereUniqueWithoutMetatagsInput = {
    where: serviceWhereUniqueInput
    data: XOR<serviceUpdateWithoutMetatagsInput, serviceUncheckedUpdateWithoutMetatagsInput>
  }

  export type serviceUpdateManyWithWhereWithoutMetatagsInput = {
    where: serviceScalarWhereInput
    data: XOR<serviceUpdateManyMutationInput, serviceUncheckedUpdateManyWithoutMetatagsInput>
  }

  export type serviceScalarWhereInput = {
    AND?: serviceScalarWhereInput | serviceScalarWhereInput[]
    OR?: serviceScalarWhereInput[]
    NOT?: serviceScalarWhereInput | serviceScalarWhereInput[]
    id?: IntFilter<"service"> | number
    name?: StringFilter<"service"> | string
    description?: JsonFilter<"service">
    servicecategoryid?: IntFilter<"service"> | number
    metaid?: IntFilter<"service"> | number
    createdat?: DateTimeFilter<"service"> | Date | string
    createdby?: IntFilter<"service"> | number
    updatedat?: DateTimeNullableFilter<"service"> | Date | string | null
    updatedby?: IntNullableFilter<"service"> | number | null
    isactive?: IntFilter<"service"> | number
  }

  export type servicecategoryUpsertWithWhereUniqueWithoutMetatagsInput = {
    where: servicecategoryWhereUniqueInput
    update: XOR<servicecategoryUpdateWithoutMetatagsInput, servicecategoryUncheckedUpdateWithoutMetatagsInput>
    create: XOR<servicecategoryCreateWithoutMetatagsInput, servicecategoryUncheckedCreateWithoutMetatagsInput>
  }

  export type servicecategoryUpdateWithWhereUniqueWithoutMetatagsInput = {
    where: servicecategoryWhereUniqueInput
    data: XOR<servicecategoryUpdateWithoutMetatagsInput, servicecategoryUncheckedUpdateWithoutMetatagsInput>
  }

  export type servicecategoryUpdateManyWithWhereWithoutMetatagsInput = {
    where: servicecategoryScalarWhereInput
    data: XOR<servicecategoryUpdateManyMutationInput, servicecategoryUncheckedUpdateManyWithoutMetatagsInput>
  }

  export type servicecategoryScalarWhereInput = {
    AND?: servicecategoryScalarWhereInput | servicecategoryScalarWhereInput[]
    OR?: servicecategoryScalarWhereInput[]
    NOT?: servicecategoryScalarWhereInput | servicecategoryScalarWhereInput[]
    id?: IntFilter<"servicecategory"> | number
    name?: StringFilter<"servicecategory"> | string
    description?: StringFilter<"servicecategory"> | string
    metaid?: IntFilter<"servicecategory"> | number
    createdat?: DateTimeFilter<"servicecategory"> | Date | string
    createdby?: IntFilter<"servicecategory"> | number
    updatedat?: DateTimeNullableFilter<"servicecategory"> | Date | string | null
    updatedby?: IntNullableFilter<"servicecategory"> | number | null
    isactive?: IntFilter<"servicecategory"> | number
  }

  export type blogcategoryUpsertWithWhereUniqueWithoutBlogcategorymetaInput = {
    where: blogcategoryWhereUniqueInput
    update: XOR<blogcategoryUpdateWithoutBlogcategorymetaInput, blogcategoryUncheckedUpdateWithoutBlogcategorymetaInput>
    create: XOR<blogcategoryCreateWithoutBlogcategorymetaInput, blogcategoryUncheckedCreateWithoutBlogcategorymetaInput>
  }

  export type blogcategoryUpdateWithWhereUniqueWithoutBlogcategorymetaInput = {
    where: blogcategoryWhereUniqueInput
    data: XOR<blogcategoryUpdateWithoutBlogcategorymetaInput, blogcategoryUncheckedUpdateWithoutBlogcategorymetaInput>
  }

  export type blogcategoryUpdateManyWithWhereWithoutBlogcategorymetaInput = {
    where: blogcategoryScalarWhereInput
    data: XOR<blogcategoryUpdateManyMutationInput, blogcategoryUncheckedUpdateManyWithoutBlogcategorymetaInput>
  }

  export type blogcategoryScalarWhereInput = {
    AND?: blogcategoryScalarWhereInput | blogcategoryScalarWhereInput[]
    OR?: blogcategoryScalarWhereInput[]
    NOT?: blogcategoryScalarWhereInput | blogcategoryScalarWhereInput[]
    id?: IntFilter<"blogcategory"> | number
    name?: StringFilter<"blogcategory"> | string
    description?: StringFilter<"blogcategory"> | string
    featuredimage?: StringFilter<"blogcategory"> | string
    metaid?: IntFilter<"blogcategory"> | number
    createdat?: DateTimeFilter<"blogcategory"> | Date | string
    createdby?: IntFilter<"blogcategory"> | number
    updatedat?: DateTimeNullableFilter<"blogcategory"> | Date | string | null
    updatedby?: IntNullableFilter<"blogcategory"> | number | null
    isactive?: IntFilter<"blogcategory"> | number
  }

  export type serviceCreateWithoutOffersInput = {
    name: string
    description: JsonNullValueInput | InputJsonValue
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    servicecategory: servicecategoryCreateNestedOneWithoutServicesInput
    pages?: pageCreateNestedManyWithoutServiceInput
    contacts?: contactCreateNestedManyWithoutServiceInput
    userservice?: userCreateNestedOneWithoutUserserviceInput
    metatags?: metaCreateNestedOneWithoutServicesInput
  }

  export type serviceUncheckedCreateWithoutOffersInput = {
    id?: number
    name: string
    description: JsonNullValueInput | InputJsonValue
    servicecategoryid: number
    metaid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    pages?: pageUncheckedCreateNestedManyWithoutServiceInput
    contacts?: contactUncheckedCreateNestedManyWithoutServiceInput
  }

  export type serviceCreateOrConnectWithoutOffersInput = {
    where: serviceWhereUniqueInput
    create: XOR<serviceCreateWithoutOffersInput, serviceUncheckedCreateWithoutOffersInput>
  }

  export type userCreateWithoutUseroffersInput = {
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    usercontacts?: contactCreateNestedManyWithoutUsercontactsInput
    userpages?: pageCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceCreateNestedManyWithoutUserserviceInput
  }

  export type userUncheckedCreateWithoutUseroffersInput = {
    id?: number
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    usercontacts?: contactUncheckedCreateNestedManyWithoutUsercontactsInput
    userpages?: pageUncheckedCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryUncheckedCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceUncheckedCreateNestedManyWithoutUserserviceInput
  }

  export type userCreateOrConnectWithoutUseroffersInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUseroffersInput, userUncheckedCreateWithoutUseroffersInput>
  }

  export type serviceUpsertWithoutOffersInput = {
    update: XOR<serviceUpdateWithoutOffersInput, serviceUncheckedUpdateWithoutOffersInput>
    create: XOR<serviceCreateWithoutOffersInput, serviceUncheckedCreateWithoutOffersInput>
    where?: serviceWhereInput
  }

  export type serviceUpdateToOneWithWhereWithoutOffersInput = {
    where?: serviceWhereInput
    data: XOR<serviceUpdateWithoutOffersInput, serviceUncheckedUpdateWithoutOffersInput>
  }

  export type serviceUpdateWithoutOffersInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: JsonNullValueInput | InputJsonValue
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    servicecategory?: servicecategoryUpdateOneRequiredWithoutServicesNestedInput
    pages?: pageUpdateManyWithoutServiceNestedInput
    contacts?: contactUpdateManyWithoutServiceNestedInput
    userservice?: userUpdateOneWithoutUserserviceNestedInput
    metatags?: metaUpdateOneWithoutServicesNestedInput
  }

  export type serviceUncheckedUpdateWithoutOffersInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: JsonNullValueInput | InputJsonValue
    servicecategoryid?: IntFieldUpdateOperationsInput | number
    metaid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    pages?: pageUncheckedUpdateManyWithoutServiceNestedInput
    contacts?: contactUncheckedUpdateManyWithoutServiceNestedInput
  }

  export type userUpsertWithoutUseroffersInput = {
    update: XOR<userUpdateWithoutUseroffersInput, userUncheckedUpdateWithoutUseroffersInput>
    create: XOR<userCreateWithoutUseroffersInput, userUncheckedCreateWithoutUseroffersInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUseroffersInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUseroffersInput, userUncheckedUpdateWithoutUseroffersInput>
  }

  export type userUpdateWithoutUseroffersInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    usercontacts?: contactUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUpdateManyWithoutUserserviceNestedInput
  }

  export type userUncheckedUpdateWithoutUseroffersInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    usercontacts?: contactUncheckedUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUncheckedUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUncheckedUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUncheckedUpdateManyWithoutUserserviceNestedInput
  }

  export type servicecategoryCreateWithoutContactsInput = {
    name: string
    description: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    services?: serviceCreateNestedManyWithoutServicecategoryInput
    userservicecategory?: userCreateNestedOneWithoutUserservicecategoryInput
    metatags?: metaCreateNestedOneWithoutServicecategoryInput
  }

  export type servicecategoryUncheckedCreateWithoutContactsInput = {
    id?: number
    name: string
    description: string
    metaid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    services?: serviceUncheckedCreateNestedManyWithoutServicecategoryInput
  }

  export type servicecategoryCreateOrConnectWithoutContactsInput = {
    where: servicecategoryWhereUniqueInput
    create: XOR<servicecategoryCreateWithoutContactsInput, servicecategoryUncheckedCreateWithoutContactsInput>
  }

  export type serviceCreateWithoutContactsInput = {
    name: string
    description: JsonNullValueInput | InputJsonValue
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    servicecategory: servicecategoryCreateNestedOneWithoutServicesInput
    pages?: pageCreateNestedManyWithoutServiceInput
    offers?: offerCreateNestedManyWithoutServiceInput
    userservice?: userCreateNestedOneWithoutUserserviceInput
    metatags?: metaCreateNestedOneWithoutServicesInput
  }

  export type serviceUncheckedCreateWithoutContactsInput = {
    id?: number
    name: string
    description: JsonNullValueInput | InputJsonValue
    servicecategoryid: number
    metaid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    pages?: pageUncheckedCreateNestedManyWithoutServiceInput
    offers?: offerUncheckedCreateNestedManyWithoutServiceInput
  }

  export type serviceCreateOrConnectWithoutContactsInput = {
    where: serviceWhereUniqueInput
    create: XOR<serviceCreateWithoutContactsInput, serviceUncheckedCreateWithoutContactsInput>
  }

  export type userCreateWithoutUsercontactsInput = {
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    useroffers?: offerCreateNestedManyWithoutUseroffersInput
    userpages?: pageCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceCreateNestedManyWithoutUserserviceInput
  }

  export type userUncheckedCreateWithoutUsercontactsInput = {
    id?: number
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    useroffers?: offerUncheckedCreateNestedManyWithoutUseroffersInput
    userpages?: pageUncheckedCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryUncheckedCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceUncheckedCreateNestedManyWithoutUserserviceInput
  }

  export type userCreateOrConnectWithoutUsercontactsInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUsercontactsInput, userUncheckedCreateWithoutUsercontactsInput>
  }

  export type servicecategoryUpsertWithoutContactsInput = {
    update: XOR<servicecategoryUpdateWithoutContactsInput, servicecategoryUncheckedUpdateWithoutContactsInput>
    create: XOR<servicecategoryCreateWithoutContactsInput, servicecategoryUncheckedCreateWithoutContactsInput>
    where?: servicecategoryWhereInput
  }

  export type servicecategoryUpdateToOneWithWhereWithoutContactsInput = {
    where?: servicecategoryWhereInput
    data: XOR<servicecategoryUpdateWithoutContactsInput, servicecategoryUncheckedUpdateWithoutContactsInput>
  }

  export type servicecategoryUpdateWithoutContactsInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    services?: serviceUpdateManyWithoutServicecategoryNestedInput
    userservicecategory?: userUpdateOneWithoutUserservicecategoryNestedInput
    metatags?: metaUpdateOneWithoutServicecategoryNestedInput
  }

  export type servicecategoryUncheckedUpdateWithoutContactsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    metaid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    services?: serviceUncheckedUpdateManyWithoutServicecategoryNestedInput
  }

  export type serviceUpsertWithoutContactsInput = {
    update: XOR<serviceUpdateWithoutContactsInput, serviceUncheckedUpdateWithoutContactsInput>
    create: XOR<serviceCreateWithoutContactsInput, serviceUncheckedCreateWithoutContactsInput>
    where?: serviceWhereInput
  }

  export type serviceUpdateToOneWithWhereWithoutContactsInput = {
    where?: serviceWhereInput
    data: XOR<serviceUpdateWithoutContactsInput, serviceUncheckedUpdateWithoutContactsInput>
  }

  export type serviceUpdateWithoutContactsInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: JsonNullValueInput | InputJsonValue
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    servicecategory?: servicecategoryUpdateOneRequiredWithoutServicesNestedInput
    pages?: pageUpdateManyWithoutServiceNestedInput
    offers?: offerUpdateManyWithoutServiceNestedInput
    userservice?: userUpdateOneWithoutUserserviceNestedInput
    metatags?: metaUpdateOneWithoutServicesNestedInput
  }

  export type serviceUncheckedUpdateWithoutContactsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: JsonNullValueInput | InputJsonValue
    servicecategoryid?: IntFieldUpdateOperationsInput | number
    metaid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    pages?: pageUncheckedUpdateManyWithoutServiceNestedInput
    offers?: offerUncheckedUpdateManyWithoutServiceNestedInput
  }

  export type userUpsertWithoutUsercontactsInput = {
    update: XOR<userUpdateWithoutUsercontactsInput, userUncheckedUpdateWithoutUsercontactsInput>
    create: XOR<userCreateWithoutUsercontactsInput, userUncheckedCreateWithoutUsercontactsInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUsercontactsInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUsercontactsInput, userUncheckedUpdateWithoutUsercontactsInput>
  }

  export type userUpdateWithoutUsercontactsInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    useroffers?: offerUpdateManyWithoutUseroffersNestedInput
    userpages?: pageUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUpdateManyWithoutUserserviceNestedInput
  }

  export type userUncheckedUpdateWithoutUsercontactsInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    useroffers?: offerUncheckedUpdateManyWithoutUseroffersNestedInput
    userpages?: pageUncheckedUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUncheckedUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUncheckedUpdateManyWithoutUserserviceNestedInput
  }

  export type serviceCreateWithoutPagesInput = {
    name: string
    description: JsonNullValueInput | InputJsonValue
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    servicecategory: servicecategoryCreateNestedOneWithoutServicesInput
    contacts?: contactCreateNestedManyWithoutServiceInput
    offers?: offerCreateNestedManyWithoutServiceInput
    userservice?: userCreateNestedOneWithoutUserserviceInput
    metatags?: metaCreateNestedOneWithoutServicesInput
  }

  export type serviceUncheckedCreateWithoutPagesInput = {
    id?: number
    name: string
    description: JsonNullValueInput | InputJsonValue
    servicecategoryid: number
    metaid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    contacts?: contactUncheckedCreateNestedManyWithoutServiceInput
    offers?: offerUncheckedCreateNestedManyWithoutServiceInput
  }

  export type serviceCreateOrConnectWithoutPagesInput = {
    where: serviceWhereUniqueInput
    create: XOR<serviceCreateWithoutPagesInput, serviceUncheckedCreateWithoutPagesInput>
  }

  export type userCreateWithoutUserpagesInput = {
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    useroffers?: offerCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactCreateNestedManyWithoutUsercontactsInput
    userservicecategory?: servicecategoryCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceCreateNestedManyWithoutUserserviceInput
  }

  export type userUncheckedCreateWithoutUserpagesInput = {
    id?: number
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    useroffers?: offerUncheckedCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactUncheckedCreateNestedManyWithoutUsercontactsInput
    userservicecategory?: servicecategoryUncheckedCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceUncheckedCreateNestedManyWithoutUserserviceInput
  }

  export type userCreateOrConnectWithoutUserpagesInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUserpagesInput, userUncheckedCreateWithoutUserpagesInput>
  }

  export type metaCreateWithoutPagesInput = {
    metatitle: string
    metadescription: string
    metakeywords: string
    metarobots: string
    metahttpequiv: string
    metalanguage: string
    metaauthor: string
    metarevisit: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    services?: serviceCreateNestedManyWithoutMetatagsInput
    servicecategory?: servicecategoryCreateNestedManyWithoutMetatagsInput
    blogcategory?: blogcategoryCreateNestedManyWithoutBlogcategorymetaInput
  }

  export type metaUncheckedCreateWithoutPagesInput = {
    id?: number
    metatitle: string
    metadescription: string
    metakeywords: string
    metarobots: string
    metahttpequiv: string
    metalanguage: string
    metaauthor: string
    metarevisit: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    services?: serviceUncheckedCreateNestedManyWithoutMetatagsInput
    servicecategory?: servicecategoryUncheckedCreateNestedManyWithoutMetatagsInput
    blogcategory?: blogcategoryUncheckedCreateNestedManyWithoutBlogcategorymetaInput
  }

  export type metaCreateOrConnectWithoutPagesInput = {
    where: metaWhereUniqueInput
    create: XOR<metaCreateWithoutPagesInput, metaUncheckedCreateWithoutPagesInput>
  }

  export type serviceUpsertWithoutPagesInput = {
    update: XOR<serviceUpdateWithoutPagesInput, serviceUncheckedUpdateWithoutPagesInput>
    create: XOR<serviceCreateWithoutPagesInput, serviceUncheckedCreateWithoutPagesInput>
    where?: serviceWhereInput
  }

  export type serviceUpdateToOneWithWhereWithoutPagesInput = {
    where?: serviceWhereInput
    data: XOR<serviceUpdateWithoutPagesInput, serviceUncheckedUpdateWithoutPagesInput>
  }

  export type serviceUpdateWithoutPagesInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: JsonNullValueInput | InputJsonValue
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    servicecategory?: servicecategoryUpdateOneRequiredWithoutServicesNestedInput
    contacts?: contactUpdateManyWithoutServiceNestedInput
    offers?: offerUpdateManyWithoutServiceNestedInput
    userservice?: userUpdateOneWithoutUserserviceNestedInput
    metatags?: metaUpdateOneWithoutServicesNestedInput
  }

  export type serviceUncheckedUpdateWithoutPagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: JsonNullValueInput | InputJsonValue
    servicecategoryid?: IntFieldUpdateOperationsInput | number
    metaid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    contacts?: contactUncheckedUpdateManyWithoutServiceNestedInput
    offers?: offerUncheckedUpdateManyWithoutServiceNestedInput
  }

  export type userUpsertWithoutUserpagesInput = {
    update: XOR<userUpdateWithoutUserpagesInput, userUncheckedUpdateWithoutUserpagesInput>
    create: XOR<userCreateWithoutUserpagesInput, userUncheckedCreateWithoutUserpagesInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUserpagesInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUserpagesInput, userUncheckedUpdateWithoutUserpagesInput>
  }

  export type userUpdateWithoutUserpagesInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    useroffers?: offerUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUpdateManyWithoutUsercontactsNestedInput
    userservicecategory?: servicecategoryUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUpdateManyWithoutUserserviceNestedInput
  }

  export type userUncheckedUpdateWithoutUserpagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    useroffers?: offerUncheckedUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUncheckedUpdateManyWithoutUsercontactsNestedInput
    userservicecategory?: servicecategoryUncheckedUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUncheckedUpdateManyWithoutUserserviceNestedInput
  }

  export type metaUpsertWithoutPagesInput = {
    update: XOR<metaUpdateWithoutPagesInput, metaUncheckedUpdateWithoutPagesInput>
    create: XOR<metaCreateWithoutPagesInput, metaUncheckedCreateWithoutPagesInput>
    where?: metaWhereInput
  }

  export type metaUpdateToOneWithWhereWithoutPagesInput = {
    where?: metaWhereInput
    data: XOR<metaUpdateWithoutPagesInput, metaUncheckedUpdateWithoutPagesInput>
  }

  export type metaUpdateWithoutPagesInput = {
    metatitle?: StringFieldUpdateOperationsInput | string
    metadescription?: StringFieldUpdateOperationsInput | string
    metakeywords?: StringFieldUpdateOperationsInput | string
    metarobots?: StringFieldUpdateOperationsInput | string
    metahttpequiv?: StringFieldUpdateOperationsInput | string
    metalanguage?: StringFieldUpdateOperationsInput | string
    metaauthor?: StringFieldUpdateOperationsInput | string
    metarevisit?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    services?: serviceUpdateManyWithoutMetatagsNestedInput
    servicecategory?: servicecategoryUpdateManyWithoutMetatagsNestedInput
    blogcategory?: blogcategoryUpdateManyWithoutBlogcategorymetaNestedInput
  }

  export type metaUncheckedUpdateWithoutPagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    metatitle?: StringFieldUpdateOperationsInput | string
    metadescription?: StringFieldUpdateOperationsInput | string
    metakeywords?: StringFieldUpdateOperationsInput | string
    metarobots?: StringFieldUpdateOperationsInput | string
    metahttpequiv?: StringFieldUpdateOperationsInput | string
    metalanguage?: StringFieldUpdateOperationsInput | string
    metaauthor?: StringFieldUpdateOperationsInput | string
    metarevisit?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    services?: serviceUncheckedUpdateManyWithoutMetatagsNestedInput
    servicecategory?: servicecategoryUncheckedUpdateManyWithoutMetatagsNestedInput
    blogcategory?: blogcategoryUncheckedUpdateManyWithoutBlogcategorymetaNestedInput
  }

  export type serviceCreateWithoutServicecategoryInput = {
    name: string
    description: JsonNullValueInput | InputJsonValue
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    pages?: pageCreateNestedManyWithoutServiceInput
    contacts?: contactCreateNestedManyWithoutServiceInput
    offers?: offerCreateNestedManyWithoutServiceInput
    userservice?: userCreateNestedOneWithoutUserserviceInput
    metatags?: metaCreateNestedOneWithoutServicesInput
  }

  export type serviceUncheckedCreateWithoutServicecategoryInput = {
    id?: number
    name: string
    description: JsonNullValueInput | InputJsonValue
    metaid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    pages?: pageUncheckedCreateNestedManyWithoutServiceInput
    contacts?: contactUncheckedCreateNestedManyWithoutServiceInput
    offers?: offerUncheckedCreateNestedManyWithoutServiceInput
  }

  export type serviceCreateOrConnectWithoutServicecategoryInput = {
    where: serviceWhereUniqueInput
    create: XOR<serviceCreateWithoutServicecategoryInput, serviceUncheckedCreateWithoutServicecategoryInput>
  }

  export type serviceCreateManyServicecategoryInputEnvelope = {
    data: serviceCreateManyServicecategoryInput | serviceCreateManyServicecategoryInput[]
    skipDuplicates?: boolean
  }

  export type contactCreateWithoutServicecategoryInput = {
    name: string
    email: string
    phone: string
    message: string
    attachment?: string | null
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isclosed: number
    service?: serviceCreateNestedOneWithoutContactsInput
    usercontacts?: userCreateNestedOneWithoutUsercontactsInput
  }

  export type contactUncheckedCreateWithoutServicecategoryInput = {
    id?: number
    name: string
    email: string
    phone: string
    message: string
    attachment?: string | null
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isclosed: number
    serviceid: number
  }

  export type contactCreateOrConnectWithoutServicecategoryInput = {
    where: contactWhereUniqueInput
    create: XOR<contactCreateWithoutServicecategoryInput, contactUncheckedCreateWithoutServicecategoryInput>
  }

  export type contactCreateManyServicecategoryInputEnvelope = {
    data: contactCreateManyServicecategoryInput | contactCreateManyServicecategoryInput[]
    skipDuplicates?: boolean
  }

  export type userCreateWithoutUserservicecategoryInput = {
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    useroffers?: offerCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactCreateNestedManyWithoutUsercontactsInput
    userpages?: pageCreateNestedManyWithoutUserpagesInput
    userservice?: serviceCreateNestedManyWithoutUserserviceInput
  }

  export type userUncheckedCreateWithoutUserservicecategoryInput = {
    id?: number
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    useroffers?: offerUncheckedCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactUncheckedCreateNestedManyWithoutUsercontactsInput
    userpages?: pageUncheckedCreateNestedManyWithoutUserpagesInput
    userservice?: serviceUncheckedCreateNestedManyWithoutUserserviceInput
  }

  export type userCreateOrConnectWithoutUserservicecategoryInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUserservicecategoryInput, userUncheckedCreateWithoutUserservicecategoryInput>
  }

  export type metaCreateWithoutServicecategoryInput = {
    metatitle: string
    metadescription: string
    metakeywords: string
    metarobots: string
    metahttpequiv: string
    metalanguage: string
    metaauthor: string
    metarevisit: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    pages?: pageCreateNestedManyWithoutMetatagsInput
    services?: serviceCreateNestedManyWithoutMetatagsInput
    blogcategory?: blogcategoryCreateNestedManyWithoutBlogcategorymetaInput
  }

  export type metaUncheckedCreateWithoutServicecategoryInput = {
    id?: number
    metatitle: string
    metadescription: string
    metakeywords: string
    metarobots: string
    metahttpequiv: string
    metalanguage: string
    metaauthor: string
    metarevisit: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    pages?: pageUncheckedCreateNestedManyWithoutMetatagsInput
    services?: serviceUncheckedCreateNestedManyWithoutMetatagsInput
    blogcategory?: blogcategoryUncheckedCreateNestedManyWithoutBlogcategorymetaInput
  }

  export type metaCreateOrConnectWithoutServicecategoryInput = {
    where: metaWhereUniqueInput
    create: XOR<metaCreateWithoutServicecategoryInput, metaUncheckedCreateWithoutServicecategoryInput>
  }

  export type serviceUpsertWithWhereUniqueWithoutServicecategoryInput = {
    where: serviceWhereUniqueInput
    update: XOR<serviceUpdateWithoutServicecategoryInput, serviceUncheckedUpdateWithoutServicecategoryInput>
    create: XOR<serviceCreateWithoutServicecategoryInput, serviceUncheckedCreateWithoutServicecategoryInput>
  }

  export type serviceUpdateWithWhereUniqueWithoutServicecategoryInput = {
    where: serviceWhereUniqueInput
    data: XOR<serviceUpdateWithoutServicecategoryInput, serviceUncheckedUpdateWithoutServicecategoryInput>
  }

  export type serviceUpdateManyWithWhereWithoutServicecategoryInput = {
    where: serviceScalarWhereInput
    data: XOR<serviceUpdateManyMutationInput, serviceUncheckedUpdateManyWithoutServicecategoryInput>
  }

  export type contactUpsertWithWhereUniqueWithoutServicecategoryInput = {
    where: contactWhereUniqueInput
    update: XOR<contactUpdateWithoutServicecategoryInput, contactUncheckedUpdateWithoutServicecategoryInput>
    create: XOR<contactCreateWithoutServicecategoryInput, contactUncheckedCreateWithoutServicecategoryInput>
  }

  export type contactUpdateWithWhereUniqueWithoutServicecategoryInput = {
    where: contactWhereUniqueInput
    data: XOR<contactUpdateWithoutServicecategoryInput, contactUncheckedUpdateWithoutServicecategoryInput>
  }

  export type contactUpdateManyWithWhereWithoutServicecategoryInput = {
    where: contactScalarWhereInput
    data: XOR<contactUpdateManyMutationInput, contactUncheckedUpdateManyWithoutServicecategoryInput>
  }

  export type contactScalarWhereInput = {
    AND?: contactScalarWhereInput | contactScalarWhereInput[]
    OR?: contactScalarWhereInput[]
    NOT?: contactScalarWhereInput | contactScalarWhereInput[]
    id?: IntFilter<"contact"> | number
    name?: StringFilter<"contact"> | string
    email?: StringFilter<"contact"> | string
    phone?: StringFilter<"contact"> | string
    message?: StringFilter<"contact"> | string
    attachment?: StringNullableFilter<"contact"> | string | null
    createdat?: DateTimeFilter<"contact"> | Date | string
    createdby?: IntFilter<"contact"> | number
    updatedat?: DateTimeNullableFilter<"contact"> | Date | string | null
    updatedby?: IntNullableFilter<"contact"> | number | null
    isclosed?: IntFilter<"contact"> | number
    servicecategoryid?: IntFilter<"contact"> | number
    serviceid?: IntFilter<"contact"> | number
  }

  export type userUpsertWithoutUserservicecategoryInput = {
    update: XOR<userUpdateWithoutUserservicecategoryInput, userUncheckedUpdateWithoutUserservicecategoryInput>
    create: XOR<userCreateWithoutUserservicecategoryInput, userUncheckedCreateWithoutUserservicecategoryInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUserservicecategoryInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUserservicecategoryInput, userUncheckedUpdateWithoutUserservicecategoryInput>
  }

  export type userUpdateWithoutUserservicecategoryInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    useroffers?: offerUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUpdateManyWithoutUserpagesNestedInput
    userservice?: serviceUpdateManyWithoutUserserviceNestedInput
  }

  export type userUncheckedUpdateWithoutUserservicecategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    useroffers?: offerUncheckedUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUncheckedUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUncheckedUpdateManyWithoutUserpagesNestedInput
    userservice?: serviceUncheckedUpdateManyWithoutUserserviceNestedInput
  }

  export type metaUpsertWithoutServicecategoryInput = {
    update: XOR<metaUpdateWithoutServicecategoryInput, metaUncheckedUpdateWithoutServicecategoryInput>
    create: XOR<metaCreateWithoutServicecategoryInput, metaUncheckedCreateWithoutServicecategoryInput>
    where?: metaWhereInput
  }

  export type metaUpdateToOneWithWhereWithoutServicecategoryInput = {
    where?: metaWhereInput
    data: XOR<metaUpdateWithoutServicecategoryInput, metaUncheckedUpdateWithoutServicecategoryInput>
  }

  export type metaUpdateWithoutServicecategoryInput = {
    metatitle?: StringFieldUpdateOperationsInput | string
    metadescription?: StringFieldUpdateOperationsInput | string
    metakeywords?: StringFieldUpdateOperationsInput | string
    metarobots?: StringFieldUpdateOperationsInput | string
    metahttpequiv?: StringFieldUpdateOperationsInput | string
    metalanguage?: StringFieldUpdateOperationsInput | string
    metaauthor?: StringFieldUpdateOperationsInput | string
    metarevisit?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    pages?: pageUpdateManyWithoutMetatagsNestedInput
    services?: serviceUpdateManyWithoutMetatagsNestedInput
    blogcategory?: blogcategoryUpdateManyWithoutBlogcategorymetaNestedInput
  }

  export type metaUncheckedUpdateWithoutServicecategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    metatitle?: StringFieldUpdateOperationsInput | string
    metadescription?: StringFieldUpdateOperationsInput | string
    metakeywords?: StringFieldUpdateOperationsInput | string
    metarobots?: StringFieldUpdateOperationsInput | string
    metahttpequiv?: StringFieldUpdateOperationsInput | string
    metalanguage?: StringFieldUpdateOperationsInput | string
    metaauthor?: StringFieldUpdateOperationsInput | string
    metarevisit?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    pages?: pageUncheckedUpdateManyWithoutMetatagsNestedInput
    services?: serviceUncheckedUpdateManyWithoutMetatagsNestedInput
    blogcategory?: blogcategoryUncheckedUpdateManyWithoutBlogcategorymetaNestedInput
  }

  export type servicecategoryCreateWithoutServicesInput = {
    name: string
    description: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    contacts?: contactCreateNestedManyWithoutServicecategoryInput
    userservicecategory?: userCreateNestedOneWithoutUserservicecategoryInput
    metatags?: metaCreateNestedOneWithoutServicecategoryInput
  }

  export type servicecategoryUncheckedCreateWithoutServicesInput = {
    id?: number
    name: string
    description: string
    metaid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    contacts?: contactUncheckedCreateNestedManyWithoutServicecategoryInput
  }

  export type servicecategoryCreateOrConnectWithoutServicesInput = {
    where: servicecategoryWhereUniqueInput
    create: XOR<servicecategoryCreateWithoutServicesInput, servicecategoryUncheckedCreateWithoutServicesInput>
  }

  export type pageCreateWithoutServiceInput = {
    name: string
    content: string
    slug: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    userpages?: userCreateNestedOneWithoutUserpagesInput
    metatags?: metaCreateNestedOneWithoutPagesInput
  }

  export type pageUncheckedCreateWithoutServiceInput = {
    id?: number
    metaid: number
    name: string
    content: string
    slug: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
  }

  export type pageCreateOrConnectWithoutServiceInput = {
    where: pageWhereUniqueInput
    create: XOR<pageCreateWithoutServiceInput, pageUncheckedCreateWithoutServiceInput>
  }

  export type pageCreateManyServiceInputEnvelope = {
    data: pageCreateManyServiceInput | pageCreateManyServiceInput[]
    skipDuplicates?: boolean
  }

  export type contactCreateWithoutServiceInput = {
    name: string
    email: string
    phone: string
    message: string
    attachment?: string | null
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isclosed: number
    servicecategory?: servicecategoryCreateNestedOneWithoutContactsInput
    usercontacts?: userCreateNestedOneWithoutUsercontactsInput
  }

  export type contactUncheckedCreateWithoutServiceInput = {
    id?: number
    name: string
    email: string
    phone: string
    message: string
    attachment?: string | null
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isclosed: number
    servicecategoryid: number
  }

  export type contactCreateOrConnectWithoutServiceInput = {
    where: contactWhereUniqueInput
    create: XOR<contactCreateWithoutServiceInput, contactUncheckedCreateWithoutServiceInput>
  }

  export type contactCreateManyServiceInputEnvelope = {
    data: contactCreateManyServiceInput | contactCreateManyServiceInput[]
    skipDuplicates?: boolean
  }

  export type offerCreateWithoutServiceInput = {
    name: string
    description: string
    saleprice: number
    salepricecurrency: string
    salepriceperiod: string
    discountprice: number
    discountamount: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    useroffers?: userCreateNestedOneWithoutUseroffersInput
  }

  export type offerUncheckedCreateWithoutServiceInput = {
    id?: number
    name: string
    description: string
    saleprice: number
    salepricecurrency: string
    salepriceperiod: string
    discountprice: number
    discountamount: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
  }

  export type offerCreateOrConnectWithoutServiceInput = {
    where: offerWhereUniqueInput
    create: XOR<offerCreateWithoutServiceInput, offerUncheckedCreateWithoutServiceInput>
  }

  export type offerCreateManyServiceInputEnvelope = {
    data: offerCreateManyServiceInput | offerCreateManyServiceInput[]
    skipDuplicates?: boolean
  }

  export type userCreateWithoutUserserviceInput = {
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    useroffers?: offerCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactCreateNestedManyWithoutUsercontactsInput
    userpages?: pageCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryCreateNestedManyWithoutUserservicecategoryInput
  }

  export type userUncheckedCreateWithoutUserserviceInput = {
    id?: number
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    useroffers?: offerUncheckedCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactUncheckedCreateNestedManyWithoutUsercontactsInput
    userpages?: pageUncheckedCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryUncheckedCreateNestedManyWithoutUserservicecategoryInput
  }

  export type userCreateOrConnectWithoutUserserviceInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUserserviceInput, userUncheckedCreateWithoutUserserviceInput>
  }

  export type metaCreateWithoutServicesInput = {
    metatitle: string
    metadescription: string
    metakeywords: string
    metarobots: string
    metahttpequiv: string
    metalanguage: string
    metaauthor: string
    metarevisit: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    pages?: pageCreateNestedManyWithoutMetatagsInput
    servicecategory?: servicecategoryCreateNestedManyWithoutMetatagsInput
    blogcategory?: blogcategoryCreateNestedManyWithoutBlogcategorymetaInput
  }

  export type metaUncheckedCreateWithoutServicesInput = {
    id?: number
    metatitle: string
    metadescription: string
    metakeywords: string
    metarobots: string
    metahttpequiv: string
    metalanguage: string
    metaauthor: string
    metarevisit: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    pages?: pageUncheckedCreateNestedManyWithoutMetatagsInput
    servicecategory?: servicecategoryUncheckedCreateNestedManyWithoutMetatagsInput
    blogcategory?: blogcategoryUncheckedCreateNestedManyWithoutBlogcategorymetaInput
  }

  export type metaCreateOrConnectWithoutServicesInput = {
    where: metaWhereUniqueInput
    create: XOR<metaCreateWithoutServicesInput, metaUncheckedCreateWithoutServicesInput>
  }

  export type servicecategoryUpsertWithoutServicesInput = {
    update: XOR<servicecategoryUpdateWithoutServicesInput, servicecategoryUncheckedUpdateWithoutServicesInput>
    create: XOR<servicecategoryCreateWithoutServicesInput, servicecategoryUncheckedCreateWithoutServicesInput>
    where?: servicecategoryWhereInput
  }

  export type servicecategoryUpdateToOneWithWhereWithoutServicesInput = {
    where?: servicecategoryWhereInput
    data: XOR<servicecategoryUpdateWithoutServicesInput, servicecategoryUncheckedUpdateWithoutServicesInput>
  }

  export type servicecategoryUpdateWithoutServicesInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    contacts?: contactUpdateManyWithoutServicecategoryNestedInput
    userservicecategory?: userUpdateOneWithoutUserservicecategoryNestedInput
    metatags?: metaUpdateOneWithoutServicecategoryNestedInput
  }

  export type servicecategoryUncheckedUpdateWithoutServicesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    metaid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    contacts?: contactUncheckedUpdateManyWithoutServicecategoryNestedInput
  }

  export type pageUpsertWithWhereUniqueWithoutServiceInput = {
    where: pageWhereUniqueInput
    update: XOR<pageUpdateWithoutServiceInput, pageUncheckedUpdateWithoutServiceInput>
    create: XOR<pageCreateWithoutServiceInput, pageUncheckedCreateWithoutServiceInput>
  }

  export type pageUpdateWithWhereUniqueWithoutServiceInput = {
    where: pageWhereUniqueInput
    data: XOR<pageUpdateWithoutServiceInput, pageUncheckedUpdateWithoutServiceInput>
  }

  export type pageUpdateManyWithWhereWithoutServiceInput = {
    where: pageScalarWhereInput
    data: XOR<pageUpdateManyMutationInput, pageUncheckedUpdateManyWithoutServiceInput>
  }

  export type contactUpsertWithWhereUniqueWithoutServiceInput = {
    where: contactWhereUniqueInput
    update: XOR<contactUpdateWithoutServiceInput, contactUncheckedUpdateWithoutServiceInput>
    create: XOR<contactCreateWithoutServiceInput, contactUncheckedCreateWithoutServiceInput>
  }

  export type contactUpdateWithWhereUniqueWithoutServiceInput = {
    where: contactWhereUniqueInput
    data: XOR<contactUpdateWithoutServiceInput, contactUncheckedUpdateWithoutServiceInput>
  }

  export type contactUpdateManyWithWhereWithoutServiceInput = {
    where: contactScalarWhereInput
    data: XOR<contactUpdateManyMutationInput, contactUncheckedUpdateManyWithoutServiceInput>
  }

  export type offerUpsertWithWhereUniqueWithoutServiceInput = {
    where: offerWhereUniqueInput
    update: XOR<offerUpdateWithoutServiceInput, offerUncheckedUpdateWithoutServiceInput>
    create: XOR<offerCreateWithoutServiceInput, offerUncheckedCreateWithoutServiceInput>
  }

  export type offerUpdateWithWhereUniqueWithoutServiceInput = {
    where: offerWhereUniqueInput
    data: XOR<offerUpdateWithoutServiceInput, offerUncheckedUpdateWithoutServiceInput>
  }

  export type offerUpdateManyWithWhereWithoutServiceInput = {
    where: offerScalarWhereInput
    data: XOR<offerUpdateManyMutationInput, offerUncheckedUpdateManyWithoutServiceInput>
  }

  export type offerScalarWhereInput = {
    AND?: offerScalarWhereInput | offerScalarWhereInput[]
    OR?: offerScalarWhereInput[]
    NOT?: offerScalarWhereInput | offerScalarWhereInput[]
    id?: IntFilter<"offer"> | number
    name?: StringFilter<"offer"> | string
    description?: StringFilter<"offer"> | string
    saleprice?: FloatFilter<"offer"> | number
    salepricecurrency?: StringFilter<"offer"> | string
    salepriceperiod?: StringFilter<"offer"> | string
    discountprice?: FloatFilter<"offer"> | number
    discountamount?: StringFilter<"offer"> | string
    createdat?: DateTimeFilter<"offer"> | Date | string
    createdby?: IntFilter<"offer"> | number
    updatedat?: DateTimeNullableFilter<"offer"> | Date | string | null
    updatedby?: IntNullableFilter<"offer"> | number | null
    isactive?: IntFilter<"offer"> | number
    serviceid?: IntFilter<"offer"> | number
  }

  export type userUpsertWithoutUserserviceInput = {
    update: XOR<userUpdateWithoutUserserviceInput, userUncheckedUpdateWithoutUserserviceInput>
    create: XOR<userCreateWithoutUserserviceInput, userUncheckedCreateWithoutUserserviceInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUserserviceInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUserserviceInput, userUncheckedUpdateWithoutUserserviceInput>
  }

  export type userUpdateWithoutUserserviceInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    useroffers?: offerUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUpdateManyWithoutUserservicecategoryNestedInput
  }

  export type userUncheckedUpdateWithoutUserserviceInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    useroffers?: offerUncheckedUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUncheckedUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUncheckedUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUncheckedUpdateManyWithoutUserservicecategoryNestedInput
  }

  export type metaUpsertWithoutServicesInput = {
    update: XOR<metaUpdateWithoutServicesInput, metaUncheckedUpdateWithoutServicesInput>
    create: XOR<metaCreateWithoutServicesInput, metaUncheckedCreateWithoutServicesInput>
    where?: metaWhereInput
  }

  export type metaUpdateToOneWithWhereWithoutServicesInput = {
    where?: metaWhereInput
    data: XOR<metaUpdateWithoutServicesInput, metaUncheckedUpdateWithoutServicesInput>
  }

  export type metaUpdateWithoutServicesInput = {
    metatitle?: StringFieldUpdateOperationsInput | string
    metadescription?: StringFieldUpdateOperationsInput | string
    metakeywords?: StringFieldUpdateOperationsInput | string
    metarobots?: StringFieldUpdateOperationsInput | string
    metahttpequiv?: StringFieldUpdateOperationsInput | string
    metalanguage?: StringFieldUpdateOperationsInput | string
    metaauthor?: StringFieldUpdateOperationsInput | string
    metarevisit?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    pages?: pageUpdateManyWithoutMetatagsNestedInput
    servicecategory?: servicecategoryUpdateManyWithoutMetatagsNestedInput
    blogcategory?: blogcategoryUpdateManyWithoutBlogcategorymetaNestedInput
  }

  export type metaUncheckedUpdateWithoutServicesInput = {
    id?: IntFieldUpdateOperationsInput | number
    metatitle?: StringFieldUpdateOperationsInput | string
    metadescription?: StringFieldUpdateOperationsInput | string
    metakeywords?: StringFieldUpdateOperationsInput | string
    metarobots?: StringFieldUpdateOperationsInput | string
    metahttpequiv?: StringFieldUpdateOperationsInput | string
    metalanguage?: StringFieldUpdateOperationsInput | string
    metaauthor?: StringFieldUpdateOperationsInput | string
    metarevisit?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    pages?: pageUncheckedUpdateManyWithoutMetatagsNestedInput
    servicecategory?: servicecategoryUncheckedUpdateManyWithoutMetatagsNestedInput
    blogcategory?: blogcategoryUncheckedUpdateManyWithoutBlogcategorymetaNestedInput
  }

  export type userCreateWithoutCreatedapiclientsInput = {
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationCreateNestedManyWithoutToInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    useroffers?: offerCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactCreateNestedManyWithoutUsercontactsInput
    userpages?: pageCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceCreateNestedManyWithoutUserserviceInput
  }

  export type userUncheckedCreateWithoutCreatedapiclientsInput = {
    id?: number
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    useroffers?: offerUncheckedCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactUncheckedCreateNestedManyWithoutUsercontactsInput
    userpages?: pageUncheckedCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryUncheckedCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceUncheckedCreateNestedManyWithoutUserserviceInput
  }

  export type userCreateOrConnectWithoutCreatedapiclientsInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutCreatedapiclientsInput, userUncheckedCreateWithoutCreatedapiclientsInput>
  }

  export type userCreateWithoutUpdatedapiclientsInput = {
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    useroffers?: offerCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactCreateNestedManyWithoutUsercontactsInput
    userpages?: pageCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceCreateNestedManyWithoutUserserviceInput
  }

  export type userUncheckedCreateWithoutUpdatedapiclientsInput = {
    id?: number
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    useroffers?: offerUncheckedCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactUncheckedCreateNestedManyWithoutUsercontactsInput
    userpages?: pageUncheckedCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryUncheckedCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceUncheckedCreateNestedManyWithoutUserserviceInput
  }

  export type userCreateOrConnectWithoutUpdatedapiclientsInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUpdatedapiclientsInput, userUncheckedCreateWithoutUpdatedapiclientsInput>
  }

  export type userUpsertWithoutCreatedapiclientsInput = {
    update: XOR<userUpdateWithoutCreatedapiclientsInput, userUncheckedUpdateWithoutCreatedapiclientsInput>
    create: XOR<userCreateWithoutCreatedapiclientsInput, userUncheckedCreateWithoutCreatedapiclientsInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutCreatedapiclientsInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutCreatedapiclientsInput, userUncheckedUpdateWithoutCreatedapiclientsInput>
  }

  export type userUpdateWithoutCreatedapiclientsInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    useroffers?: offerUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUpdateManyWithoutUserserviceNestedInput
  }

  export type userUncheckedUpdateWithoutCreatedapiclientsInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    useroffers?: offerUncheckedUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUncheckedUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUncheckedUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUncheckedUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUncheckedUpdateManyWithoutUserserviceNestedInput
  }

  export type userUpsertWithoutUpdatedapiclientsInput = {
    update: XOR<userUpdateWithoutUpdatedapiclientsInput, userUncheckedUpdateWithoutUpdatedapiclientsInput>
    create: XOR<userCreateWithoutUpdatedapiclientsInput, userUncheckedCreateWithoutUpdatedapiclientsInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUpdatedapiclientsInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUpdatedapiclientsInput, userUncheckedUpdateWithoutUpdatedapiclientsInput>
  }

  export type userUpdateWithoutUpdatedapiclientsInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    useroffers?: offerUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUpdateManyWithoutUserserviceNestedInput
  }

  export type userUncheckedUpdateWithoutUpdatedapiclientsInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    useroffers?: offerUncheckedUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUncheckedUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUncheckedUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUncheckedUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUncheckedUpdateManyWithoutUserserviceNestedInput
  }

  export type userCreateWithoutRefreshtokensInput = {
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    useroffers?: offerCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactCreateNestedManyWithoutUsercontactsInput
    userpages?: pageCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceCreateNestedManyWithoutUserserviceInput
  }

  export type userUncheckedCreateWithoutRefreshtokensInput = {
    id?: number
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    useroffers?: offerUncheckedCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactUncheckedCreateNestedManyWithoutUsercontactsInput
    userpages?: pageUncheckedCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryUncheckedCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceUncheckedCreateNestedManyWithoutUserserviceInput
  }

  export type userCreateOrConnectWithoutRefreshtokensInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutRefreshtokensInput, userUncheckedCreateWithoutRefreshtokensInput>
  }

  export type userUpsertWithoutRefreshtokensInput = {
    update: XOR<userUpdateWithoutRefreshtokensInput, userUncheckedUpdateWithoutRefreshtokensInput>
    create: XOR<userCreateWithoutRefreshtokensInput, userUncheckedCreateWithoutRefreshtokensInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutRefreshtokensInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutRefreshtokensInput, userUncheckedUpdateWithoutRefreshtokensInput>
  }

  export type userUpdateWithoutRefreshtokensInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    useroffers?: offerUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUpdateManyWithoutUserserviceNestedInput
  }

  export type userUncheckedUpdateWithoutRefreshtokensInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    useroffers?: offerUncheckedUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUncheckedUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUncheckedUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUncheckedUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUncheckedUpdateManyWithoutUserserviceNestedInput
  }

  export type userCreateWithoutCreatedrolesInput = {
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    useroffers?: offerCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactCreateNestedManyWithoutUsercontactsInput
    userpages?: pageCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceCreateNestedManyWithoutUserserviceInput
  }

  export type userUncheckedCreateWithoutCreatedrolesInput = {
    id?: number
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    useroffers?: offerUncheckedCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactUncheckedCreateNestedManyWithoutUsercontactsInput
    userpages?: pageUncheckedCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryUncheckedCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceUncheckedCreateNestedManyWithoutUserserviceInput
  }

  export type userCreateOrConnectWithoutCreatedrolesInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutCreatedrolesInput, userUncheckedCreateWithoutCreatedrolesInput>
  }

  export type userCreateWithoutUpdatedrolesInput = {
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    useroffers?: offerCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactCreateNestedManyWithoutUsercontactsInput
    userpages?: pageCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceCreateNestedManyWithoutUserserviceInput
  }

  export type userUncheckedCreateWithoutUpdatedrolesInput = {
    id?: number
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    useroffers?: offerUncheckedCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactUncheckedCreateNestedManyWithoutUsercontactsInput
    userpages?: pageUncheckedCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryUncheckedCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceUncheckedCreateNestedManyWithoutUserserviceInput
  }

  export type userCreateOrConnectWithoutUpdatedrolesInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUpdatedrolesInput, userUncheckedCreateWithoutUpdatedrolesInput>
  }

  export type rolepermissionCreateWithoutRoleInput = {
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreatedrolepermissionsInput
    permission: permissionCreateNestedOneWithoutRolepermissionsInput
    updateduser?: userCreateNestedOneWithoutUpdatedrolepermissionsInput
  }

  export type rolepermissionUncheckedCreateWithoutRoleInput = {
    id?: number
    permissionid: number
    createdat?: Date | string
    createdby: number
    updatedby?: number | null
    updatedat?: Date | string | null
  }

  export type rolepermissionCreateOrConnectWithoutRoleInput = {
    where: rolepermissionWhereUniqueInput
    create: XOR<rolepermissionCreateWithoutRoleInput, rolepermissionUncheckedCreateWithoutRoleInput>
  }

  export type rolepermissionCreateManyRoleInputEnvelope = {
    data: rolepermissionCreateManyRoleInput | rolepermissionCreateManyRoleInput[]
    skipDuplicates?: boolean
  }

  export type userroleCreateWithoutRoleInput = {
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreateduserrolesInput
    updateduser?: userCreateNestedOneWithoutUpdateduserrolesInput
    user: userCreateNestedOneWithoutUserrolesInput
  }

  export type userroleUncheckedCreateWithoutRoleInput = {
    id?: number
    userid: number
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
  }

  export type userroleCreateOrConnectWithoutRoleInput = {
    where: userroleWhereUniqueInput
    create: XOR<userroleCreateWithoutRoleInput, userroleUncheckedCreateWithoutRoleInput>
  }

  export type userroleCreateManyRoleInputEnvelope = {
    data: userroleCreateManyRoleInput | userroleCreateManyRoleInput[]
    skipDuplicates?: boolean
  }

  export type userUpsertWithoutCreatedrolesInput = {
    update: XOR<userUpdateWithoutCreatedrolesInput, userUncheckedUpdateWithoutCreatedrolesInput>
    create: XOR<userCreateWithoutCreatedrolesInput, userUncheckedCreateWithoutCreatedrolesInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutCreatedrolesInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutCreatedrolesInput, userUncheckedUpdateWithoutCreatedrolesInput>
  }

  export type userUpdateWithoutCreatedrolesInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    useroffers?: offerUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUpdateManyWithoutUserserviceNestedInput
  }

  export type userUncheckedUpdateWithoutCreatedrolesInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    useroffers?: offerUncheckedUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUncheckedUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUncheckedUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUncheckedUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUncheckedUpdateManyWithoutUserserviceNestedInput
  }

  export type userUpsertWithoutUpdatedrolesInput = {
    update: XOR<userUpdateWithoutUpdatedrolesInput, userUncheckedUpdateWithoutUpdatedrolesInput>
    create: XOR<userCreateWithoutUpdatedrolesInput, userUncheckedCreateWithoutUpdatedrolesInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUpdatedrolesInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUpdatedrolesInput, userUncheckedUpdateWithoutUpdatedrolesInput>
  }

  export type userUpdateWithoutUpdatedrolesInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    useroffers?: offerUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUpdateManyWithoutUserserviceNestedInput
  }

  export type userUncheckedUpdateWithoutUpdatedrolesInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    useroffers?: offerUncheckedUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUncheckedUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUncheckedUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUncheckedUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUncheckedUpdateManyWithoutUserserviceNestedInput
  }

  export type rolepermissionUpsertWithWhereUniqueWithoutRoleInput = {
    where: rolepermissionWhereUniqueInput
    update: XOR<rolepermissionUpdateWithoutRoleInput, rolepermissionUncheckedUpdateWithoutRoleInput>
    create: XOR<rolepermissionCreateWithoutRoleInput, rolepermissionUncheckedCreateWithoutRoleInput>
  }

  export type rolepermissionUpdateWithWhereUniqueWithoutRoleInput = {
    where: rolepermissionWhereUniqueInput
    data: XOR<rolepermissionUpdateWithoutRoleInput, rolepermissionUncheckedUpdateWithoutRoleInput>
  }

  export type rolepermissionUpdateManyWithWhereWithoutRoleInput = {
    where: rolepermissionScalarWhereInput
    data: XOR<rolepermissionUpdateManyMutationInput, rolepermissionUncheckedUpdateManyWithoutRoleInput>
  }

  export type rolepermissionScalarWhereInput = {
    AND?: rolepermissionScalarWhereInput | rolepermissionScalarWhereInput[]
    OR?: rolepermissionScalarWhereInput[]
    NOT?: rolepermissionScalarWhereInput | rolepermissionScalarWhereInput[]
    id?: IntFilter<"rolepermission"> | number
    roleid?: IntFilter<"rolepermission"> | number
    permissionid?: IntFilter<"rolepermission"> | number
    createdat?: DateTimeFilter<"rolepermission"> | Date | string
    createdby?: IntFilter<"rolepermission"> | number
    updatedby?: IntNullableFilter<"rolepermission"> | number | null
    updatedat?: DateTimeNullableFilter<"rolepermission"> | Date | string | null
  }

  export type userroleUpsertWithWhereUniqueWithoutRoleInput = {
    where: userroleWhereUniqueInput
    update: XOR<userroleUpdateWithoutRoleInput, userroleUncheckedUpdateWithoutRoleInput>
    create: XOR<userroleCreateWithoutRoleInput, userroleUncheckedCreateWithoutRoleInput>
  }

  export type userroleUpdateWithWhereUniqueWithoutRoleInput = {
    where: userroleWhereUniqueInput
    data: XOR<userroleUpdateWithoutRoleInput, userroleUncheckedUpdateWithoutRoleInput>
  }

  export type userroleUpdateManyWithWhereWithoutRoleInput = {
    where: userroleScalarWhereInput
    data: XOR<userroleUpdateManyMutationInput, userroleUncheckedUpdateManyWithoutRoleInput>
  }

  export type userroleScalarWhereInput = {
    AND?: userroleScalarWhereInput | userroleScalarWhereInput[]
    OR?: userroleScalarWhereInput[]
    NOT?: userroleScalarWhereInput | userroleScalarWhereInput[]
    id?: IntFilter<"userrole"> | number
    userid?: IntFilter<"userrole"> | number
    roleid?: IntFilter<"userrole"> | number
    createdby?: IntFilter<"userrole"> | number
    createdat?: DateTimeFilter<"userrole"> | Date | string
    updatedby?: IntNullableFilter<"userrole"> | number | null
    updatedat?: DateTimeNullableFilter<"userrole"> | Date | string | null
  }

  export type userCreateWithoutNotificationuserInput = {
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    useroffers?: offerCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactCreateNestedManyWithoutUsercontactsInput
    userpages?: pageCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceCreateNestedManyWithoutUserserviceInput
  }

  export type userUncheckedCreateWithoutNotificationuserInput = {
    id?: number
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    status?: number
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    useroffers?: offerUncheckedCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactUncheckedCreateNestedManyWithoutUsercontactsInput
    userpages?: pageUncheckedCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryUncheckedCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceUncheckedCreateNestedManyWithoutUserserviceInput
  }

  export type userCreateOrConnectWithoutNotificationuserInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutNotificationuserInput, userUncheckedCreateWithoutNotificationuserInput>
  }

  export type userUpsertWithoutNotificationuserInput = {
    update: XOR<userUpdateWithoutNotificationuserInput, userUncheckedUpdateWithoutNotificationuserInput>
    create: XOR<userCreateWithoutNotificationuserInput, userUncheckedCreateWithoutNotificationuserInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutNotificationuserInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutNotificationuserInput, userUncheckedUpdateWithoutNotificationuserInput>
  }

  export type userUpdateWithoutNotificationuserInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    useroffers?: offerUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUpdateManyWithoutUserserviceNestedInput
  }

  export type userUncheckedUpdateWithoutNotificationuserInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    useroffers?: offerUncheckedUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUncheckedUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUncheckedUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUncheckedUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUncheckedUpdateManyWithoutUserserviceNestedInput
  }

  export type userCreateWithoutCreatedpermissionsInput = {
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    useroffers?: offerCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactCreateNestedManyWithoutUsercontactsInput
    userpages?: pageCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceCreateNestedManyWithoutUserserviceInput
  }

  export type userUncheckedCreateWithoutCreatedpermissionsInput = {
    id?: number
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    useroffers?: offerUncheckedCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactUncheckedCreateNestedManyWithoutUsercontactsInput
    userpages?: pageUncheckedCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryUncheckedCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceUncheckedCreateNestedManyWithoutUserserviceInput
  }

  export type userCreateOrConnectWithoutCreatedpermissionsInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutCreatedpermissionsInput, userUncheckedCreateWithoutCreatedpermissionsInput>
  }

  export type userCreateWithoutUpdatedpermissionsInput = {
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    useroffers?: offerCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactCreateNestedManyWithoutUsercontactsInput
    userpages?: pageCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceCreateNestedManyWithoutUserserviceInput
  }

  export type userUncheckedCreateWithoutUpdatedpermissionsInput = {
    id?: number
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    useroffers?: offerUncheckedCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactUncheckedCreateNestedManyWithoutUsercontactsInput
    userpages?: pageUncheckedCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryUncheckedCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceUncheckedCreateNestedManyWithoutUserserviceInput
  }

  export type userCreateOrConnectWithoutUpdatedpermissionsInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUpdatedpermissionsInput, userUncheckedCreateWithoutUpdatedpermissionsInput>
  }

  export type rolepermissionCreateWithoutPermissionInput = {
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreatedrolepermissionsInput
    role: roleCreateNestedOneWithoutRolepermissionsInput
    updateduser?: userCreateNestedOneWithoutUpdatedrolepermissionsInput
  }

  export type rolepermissionUncheckedCreateWithoutPermissionInput = {
    id?: number
    roleid: number
    createdat?: Date | string
    createdby: number
    updatedby?: number | null
    updatedat?: Date | string | null
  }

  export type rolepermissionCreateOrConnectWithoutPermissionInput = {
    where: rolepermissionWhereUniqueInput
    create: XOR<rolepermissionCreateWithoutPermissionInput, rolepermissionUncheckedCreateWithoutPermissionInput>
  }

  export type rolepermissionCreateManyPermissionInputEnvelope = {
    data: rolepermissionCreateManyPermissionInput | rolepermissionCreateManyPermissionInput[]
    skipDuplicates?: boolean
  }

  export type userpermissionCreateWithoutPermissionInput = {
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreateduserpermissionsInput
    updateduser?: userCreateNestedOneWithoutUpdateduserpermissionsInput
    user: userCreateNestedOneWithoutUserpermissionsInput
  }

  export type userpermissionUncheckedCreateWithoutPermissionInput = {
    id?: number
    userid: number
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
  }

  export type userpermissionCreateOrConnectWithoutPermissionInput = {
    where: userpermissionWhereUniqueInput
    create: XOR<userpermissionCreateWithoutPermissionInput, userpermissionUncheckedCreateWithoutPermissionInput>
  }

  export type userpermissionCreateManyPermissionInputEnvelope = {
    data: userpermissionCreateManyPermissionInput | userpermissionCreateManyPermissionInput[]
    skipDuplicates?: boolean
  }

  export type userUpsertWithoutCreatedpermissionsInput = {
    update: XOR<userUpdateWithoutCreatedpermissionsInput, userUncheckedUpdateWithoutCreatedpermissionsInput>
    create: XOR<userCreateWithoutCreatedpermissionsInput, userUncheckedCreateWithoutCreatedpermissionsInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutCreatedpermissionsInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutCreatedpermissionsInput, userUncheckedUpdateWithoutCreatedpermissionsInput>
  }

  export type userUpdateWithoutCreatedpermissionsInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    useroffers?: offerUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUpdateManyWithoutUserserviceNestedInput
  }

  export type userUncheckedUpdateWithoutCreatedpermissionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    useroffers?: offerUncheckedUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUncheckedUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUncheckedUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUncheckedUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUncheckedUpdateManyWithoutUserserviceNestedInput
  }

  export type userUpsertWithoutUpdatedpermissionsInput = {
    update: XOR<userUpdateWithoutUpdatedpermissionsInput, userUncheckedUpdateWithoutUpdatedpermissionsInput>
    create: XOR<userCreateWithoutUpdatedpermissionsInput, userUncheckedCreateWithoutUpdatedpermissionsInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUpdatedpermissionsInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUpdatedpermissionsInput, userUncheckedUpdateWithoutUpdatedpermissionsInput>
  }

  export type userUpdateWithoutUpdatedpermissionsInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    useroffers?: offerUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUpdateManyWithoutUserserviceNestedInput
  }

  export type userUncheckedUpdateWithoutUpdatedpermissionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    useroffers?: offerUncheckedUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUncheckedUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUncheckedUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUncheckedUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUncheckedUpdateManyWithoutUserserviceNestedInput
  }

  export type rolepermissionUpsertWithWhereUniqueWithoutPermissionInput = {
    where: rolepermissionWhereUniqueInput
    update: XOR<rolepermissionUpdateWithoutPermissionInput, rolepermissionUncheckedUpdateWithoutPermissionInput>
    create: XOR<rolepermissionCreateWithoutPermissionInput, rolepermissionUncheckedCreateWithoutPermissionInput>
  }

  export type rolepermissionUpdateWithWhereUniqueWithoutPermissionInput = {
    where: rolepermissionWhereUniqueInput
    data: XOR<rolepermissionUpdateWithoutPermissionInput, rolepermissionUncheckedUpdateWithoutPermissionInput>
  }

  export type rolepermissionUpdateManyWithWhereWithoutPermissionInput = {
    where: rolepermissionScalarWhereInput
    data: XOR<rolepermissionUpdateManyMutationInput, rolepermissionUncheckedUpdateManyWithoutPermissionInput>
  }

  export type userpermissionUpsertWithWhereUniqueWithoutPermissionInput = {
    where: userpermissionWhereUniqueInput
    update: XOR<userpermissionUpdateWithoutPermissionInput, userpermissionUncheckedUpdateWithoutPermissionInput>
    create: XOR<userpermissionCreateWithoutPermissionInput, userpermissionUncheckedCreateWithoutPermissionInput>
  }

  export type userpermissionUpdateWithWhereUniqueWithoutPermissionInput = {
    where: userpermissionWhereUniqueInput
    data: XOR<userpermissionUpdateWithoutPermissionInput, userpermissionUncheckedUpdateWithoutPermissionInput>
  }

  export type userpermissionUpdateManyWithWhereWithoutPermissionInput = {
    where: userpermissionScalarWhereInput
    data: XOR<userpermissionUpdateManyMutationInput, userpermissionUncheckedUpdateManyWithoutPermissionInput>
  }

  export type userpermissionScalarWhereInput = {
    AND?: userpermissionScalarWhereInput | userpermissionScalarWhereInput[]
    OR?: userpermissionScalarWhereInput[]
    NOT?: userpermissionScalarWhereInput | userpermissionScalarWhereInput[]
    id?: IntFilter<"userpermission"> | number
    userid?: IntFilter<"userpermission"> | number
    permissionid?: IntFilter<"userpermission"> | number
    createdby?: IntFilter<"userpermission"> | number
    createdat?: DateTimeFilter<"userpermission"> | Date | string
    updatedby?: IntNullableFilter<"userpermission"> | number | null
    updatedat?: DateTimeNullableFilter<"userpermission"> | Date | string | null
  }

  export type userCreateWithoutCreatedrolepermissionsInput = {
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    useroffers?: offerCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactCreateNestedManyWithoutUsercontactsInput
    userpages?: pageCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceCreateNestedManyWithoutUserserviceInput
  }

  export type userUncheckedCreateWithoutCreatedrolepermissionsInput = {
    id?: number
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    useroffers?: offerUncheckedCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactUncheckedCreateNestedManyWithoutUsercontactsInput
    userpages?: pageUncheckedCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryUncheckedCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceUncheckedCreateNestedManyWithoutUserserviceInput
  }

  export type userCreateOrConnectWithoutCreatedrolepermissionsInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutCreatedrolepermissionsInput, userUncheckedCreateWithoutCreatedrolepermissionsInput>
  }

  export type permissionCreateWithoutRolepermissionsInput = {
    name: string
    value: string
    group: string
    description: string
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreatedpermissionsInput
    updateduser?: userCreateNestedOneWithoutUpdatedpermissionsInput
    userpermissions?: userpermissionCreateNestedManyWithoutPermissionInput
  }

  export type permissionUncheckedCreateWithoutRolepermissionsInput = {
    id?: number
    name: string
    value: string
    group: string
    description: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutPermissionInput
  }

  export type permissionCreateOrConnectWithoutRolepermissionsInput = {
    where: permissionWhereUniqueInput
    create: XOR<permissionCreateWithoutRolepermissionsInput, permissionUncheckedCreateWithoutRolepermissionsInput>
  }

  export type roleCreateWithoutRolepermissionsInput = {
    name: string
    createdat?: Date | string
    updatedat?: Date | string | null
    issystemrole?: boolean
    createduser: userCreateNestedOneWithoutCreatedrolesInput
    updateduser?: userCreateNestedOneWithoutUpdatedrolesInput
    userroles?: userroleCreateNestedManyWithoutRoleInput
  }

  export type roleUncheckedCreateWithoutRolepermissionsInput = {
    id?: number
    name: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    issystemrole?: boolean
    userroles?: userroleUncheckedCreateNestedManyWithoutRoleInput
  }

  export type roleCreateOrConnectWithoutRolepermissionsInput = {
    where: roleWhereUniqueInput
    create: XOR<roleCreateWithoutRolepermissionsInput, roleUncheckedCreateWithoutRolepermissionsInput>
  }

  export type userCreateWithoutUpdatedrolepermissionsInput = {
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    useroffers?: offerCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactCreateNestedManyWithoutUsercontactsInput
    userpages?: pageCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceCreateNestedManyWithoutUserserviceInput
  }

  export type userUncheckedCreateWithoutUpdatedrolepermissionsInput = {
    id?: number
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    useroffers?: offerUncheckedCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactUncheckedCreateNestedManyWithoutUsercontactsInput
    userpages?: pageUncheckedCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryUncheckedCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceUncheckedCreateNestedManyWithoutUserserviceInput
  }

  export type userCreateOrConnectWithoutUpdatedrolepermissionsInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUpdatedrolepermissionsInput, userUncheckedCreateWithoutUpdatedrolepermissionsInput>
  }

  export type userUpsertWithoutCreatedrolepermissionsInput = {
    update: XOR<userUpdateWithoutCreatedrolepermissionsInput, userUncheckedUpdateWithoutCreatedrolepermissionsInput>
    create: XOR<userCreateWithoutCreatedrolepermissionsInput, userUncheckedCreateWithoutCreatedrolepermissionsInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutCreatedrolepermissionsInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutCreatedrolepermissionsInput, userUncheckedUpdateWithoutCreatedrolepermissionsInput>
  }

  export type userUpdateWithoutCreatedrolepermissionsInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    useroffers?: offerUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUpdateManyWithoutUserserviceNestedInput
  }

  export type userUncheckedUpdateWithoutCreatedrolepermissionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    useroffers?: offerUncheckedUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUncheckedUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUncheckedUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUncheckedUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUncheckedUpdateManyWithoutUserserviceNestedInput
  }

  export type permissionUpsertWithoutRolepermissionsInput = {
    update: XOR<permissionUpdateWithoutRolepermissionsInput, permissionUncheckedUpdateWithoutRolepermissionsInput>
    create: XOR<permissionCreateWithoutRolepermissionsInput, permissionUncheckedCreateWithoutRolepermissionsInput>
    where?: permissionWhereInput
  }

  export type permissionUpdateToOneWithWhereWithoutRolepermissionsInput = {
    where?: permissionWhereInput
    data: XOR<permissionUpdateWithoutRolepermissionsInput, permissionUncheckedUpdateWithoutRolepermissionsInput>
  }

  export type permissionUpdateWithoutRolepermissionsInput = {
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    group?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreatedpermissionsNestedInput
    updateduser?: userUpdateOneWithoutUpdatedpermissionsNestedInput
    userpermissions?: userpermissionUpdateManyWithoutPermissionNestedInput
  }

  export type permissionUncheckedUpdateWithoutRolepermissionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    group?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userpermissions?: userpermissionUncheckedUpdateManyWithoutPermissionNestedInput
  }

  export type roleUpsertWithoutRolepermissionsInput = {
    update: XOR<roleUpdateWithoutRolepermissionsInput, roleUncheckedUpdateWithoutRolepermissionsInput>
    create: XOR<roleCreateWithoutRolepermissionsInput, roleUncheckedCreateWithoutRolepermissionsInput>
    where?: roleWhereInput
  }

  export type roleUpdateToOneWithWhereWithoutRolepermissionsInput = {
    where?: roleWhereInput
    data: XOR<roleUpdateWithoutRolepermissionsInput, roleUncheckedUpdateWithoutRolepermissionsInput>
  }

  export type roleUpdateWithoutRolepermissionsInput = {
    name?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    issystemrole?: BoolFieldUpdateOperationsInput | boolean
    createduser?: userUpdateOneRequiredWithoutCreatedrolesNestedInput
    updateduser?: userUpdateOneWithoutUpdatedrolesNestedInput
    userroles?: userroleUpdateManyWithoutRoleNestedInput
  }

  export type roleUncheckedUpdateWithoutRolepermissionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    issystemrole?: BoolFieldUpdateOperationsInput | boolean
    userroles?: userroleUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type userUpsertWithoutUpdatedrolepermissionsInput = {
    update: XOR<userUpdateWithoutUpdatedrolepermissionsInput, userUncheckedUpdateWithoutUpdatedrolepermissionsInput>
    create: XOR<userCreateWithoutUpdatedrolepermissionsInput, userUncheckedCreateWithoutUpdatedrolepermissionsInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUpdatedrolepermissionsInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUpdatedrolepermissionsInput, userUncheckedUpdateWithoutUpdatedrolepermissionsInput>
  }

  export type userUpdateWithoutUpdatedrolepermissionsInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    useroffers?: offerUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUpdateManyWithoutUserserviceNestedInput
  }

  export type userUncheckedUpdateWithoutUpdatedrolepermissionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    useroffers?: offerUncheckedUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUncheckedUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUncheckedUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUncheckedUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUncheckedUpdateManyWithoutUserserviceNestedInput
  }

  export type notificationCreateWithoutToInput = {
    message: string
    url: string
    createdby: number
    createdat?: Date | string
    readedat?: Date | string | null
  }

  export type notificationUncheckedCreateWithoutToInput = {
    id?: number
    message: string
    url: string
    createdby: number
    createdat?: Date | string
    readedat?: Date | string | null
  }

  export type notificationCreateOrConnectWithoutToInput = {
    where: notificationWhereUniqueInput
    create: XOR<notificationCreateWithoutToInput, notificationUncheckedCreateWithoutToInput>
  }

  export type notificationCreateManyToInputEnvelope = {
    data: notificationCreateManyToInput | notificationCreateManyToInput[]
    skipDuplicates?: boolean
  }

  export type apiclientCreateWithoutCreateduserInput = {
    name: string
    key: string
    secret: string
    type: number
    createdat?: Date | string
    updatedat?: Date | string | null
    isactive: boolean
    updateduser?: userCreateNestedOneWithoutUpdatedapiclientsInput
  }

  export type apiclientUncheckedCreateWithoutCreateduserInput = {
    id?: number
    name: string
    key: string
    secret: string
    type: number
    createdat?: Date | string
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: boolean
  }

  export type apiclientCreateOrConnectWithoutCreateduserInput = {
    where: apiclientWhereUniqueInput
    create: XOR<apiclientCreateWithoutCreateduserInput, apiclientUncheckedCreateWithoutCreateduserInput>
  }

  export type apiclientCreateManyCreateduserInputEnvelope = {
    data: apiclientCreateManyCreateduserInput | apiclientCreateManyCreateduserInput[]
    skipDuplicates?: boolean
  }

  export type apiclientCreateWithoutUpdateduserInput = {
    name: string
    key: string
    secret: string
    type: number
    createdat?: Date | string
    updatedat?: Date | string | null
    isactive: boolean
    createduser: userCreateNestedOneWithoutCreatedapiclientsInput
  }

  export type apiclientUncheckedCreateWithoutUpdateduserInput = {
    id?: number
    name: string
    key: string
    secret: string
    type: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    isactive: boolean
  }

  export type apiclientCreateOrConnectWithoutUpdateduserInput = {
    where: apiclientWhereUniqueInput
    create: XOR<apiclientCreateWithoutUpdateduserInput, apiclientUncheckedCreateWithoutUpdateduserInput>
  }

  export type apiclientCreateManyUpdateduserInputEnvelope = {
    data: apiclientCreateManyUpdateduserInput | apiclientCreateManyUpdateduserInput[]
    skipDuplicates?: boolean
  }

  export type permissionCreateWithoutCreateduserInput = {
    name: string
    value: string
    group: string
    description: string
    createdat?: Date | string
    updatedat?: Date | string | null
    updateduser?: userCreateNestedOneWithoutUpdatedpermissionsInput
    rolepermissions?: rolepermissionCreateNestedManyWithoutPermissionInput
    userpermissions?: userpermissionCreateNestedManyWithoutPermissionInput
  }

  export type permissionUncheckedCreateWithoutCreateduserInput = {
    id?: number
    name: string
    value: string
    group: string
    description: string
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    rolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutPermissionInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutPermissionInput
  }

  export type permissionCreateOrConnectWithoutCreateduserInput = {
    where: permissionWhereUniqueInput
    create: XOR<permissionCreateWithoutCreateduserInput, permissionUncheckedCreateWithoutCreateduserInput>
  }

  export type permissionCreateManyCreateduserInputEnvelope = {
    data: permissionCreateManyCreateduserInput | permissionCreateManyCreateduserInput[]
    skipDuplicates?: boolean
  }

  export type permissionCreateWithoutUpdateduserInput = {
    name: string
    value: string
    group: string
    description: string
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreatedpermissionsInput
    rolepermissions?: rolepermissionCreateNestedManyWithoutPermissionInput
    userpermissions?: userpermissionCreateNestedManyWithoutPermissionInput
  }

  export type permissionUncheckedCreateWithoutUpdateduserInput = {
    id?: number
    name: string
    value: string
    group: string
    description: string
    createdby: number
    createdat?: Date | string
    updatedat?: Date | string | null
    rolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutPermissionInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutPermissionInput
  }

  export type permissionCreateOrConnectWithoutUpdateduserInput = {
    where: permissionWhereUniqueInput
    create: XOR<permissionCreateWithoutUpdateduserInput, permissionUncheckedCreateWithoutUpdateduserInput>
  }

  export type permissionCreateManyUpdateduserInputEnvelope = {
    data: permissionCreateManyUpdateduserInput | permissionCreateManyUpdateduserInput[]
    skipDuplicates?: boolean
  }

  export type refreshtokenCreateWithoutUserInput = {
    token: string
    createdat?: Date | string
    updatedat?: Date | string | null
    expiresat?: Date | string | null
  }

  export type refreshtokenUncheckedCreateWithoutUserInput = {
    id?: number
    token: string
    createdat?: Date | string
    updatedat?: Date | string | null
    expiresat?: Date | string | null
  }

  export type refreshtokenCreateOrConnectWithoutUserInput = {
    where: refreshtokenWhereUniqueInput
    create: XOR<refreshtokenCreateWithoutUserInput, refreshtokenUncheckedCreateWithoutUserInput>
  }

  export type refreshtokenCreateManyUserInputEnvelope = {
    data: refreshtokenCreateManyUserInput | refreshtokenCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type roleCreateWithoutCreateduserInput = {
    name: string
    createdat?: Date | string
    updatedat?: Date | string | null
    issystemrole?: boolean
    updateduser?: userCreateNestedOneWithoutUpdatedrolesInput
    rolepermissions?: rolepermissionCreateNestedManyWithoutRoleInput
    userroles?: userroleCreateNestedManyWithoutRoleInput
  }

  export type roleUncheckedCreateWithoutCreateduserInput = {
    id?: number
    name: string
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    issystemrole?: boolean
    rolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutRoleInput
    userroles?: userroleUncheckedCreateNestedManyWithoutRoleInput
  }

  export type roleCreateOrConnectWithoutCreateduserInput = {
    where: roleWhereUniqueInput
    create: XOR<roleCreateWithoutCreateduserInput, roleUncheckedCreateWithoutCreateduserInput>
  }

  export type roleCreateManyCreateduserInputEnvelope = {
    data: roleCreateManyCreateduserInput | roleCreateManyCreateduserInput[]
    skipDuplicates?: boolean
  }

  export type roleCreateWithoutUpdateduserInput = {
    name: string
    createdat?: Date | string
    updatedat?: Date | string | null
    issystemrole?: boolean
    createduser: userCreateNestedOneWithoutCreatedrolesInput
    rolepermissions?: rolepermissionCreateNestedManyWithoutRoleInput
    userroles?: userroleCreateNestedManyWithoutRoleInput
  }

  export type roleUncheckedCreateWithoutUpdateduserInput = {
    id?: number
    name: string
    createdby: number
    createdat?: Date | string
    updatedat?: Date | string | null
    issystemrole?: boolean
    rolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutRoleInput
    userroles?: userroleUncheckedCreateNestedManyWithoutRoleInput
  }

  export type roleCreateOrConnectWithoutUpdateduserInput = {
    where: roleWhereUniqueInput
    create: XOR<roleCreateWithoutUpdateduserInput, roleUncheckedCreateWithoutUpdateduserInput>
  }

  export type roleCreateManyUpdateduserInputEnvelope = {
    data: roleCreateManyUpdateduserInput | roleCreateManyUpdateduserInput[]
    skipDuplicates?: boolean
  }

  export type rolepermissionCreateWithoutCreateduserInput = {
    createdat?: Date | string
    updatedat?: Date | string | null
    permission: permissionCreateNestedOneWithoutRolepermissionsInput
    role: roleCreateNestedOneWithoutRolepermissionsInput
    updateduser?: userCreateNestedOneWithoutUpdatedrolepermissionsInput
  }

  export type rolepermissionUncheckedCreateWithoutCreateduserInput = {
    id?: number
    roleid: number
    permissionid: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
  }

  export type rolepermissionCreateOrConnectWithoutCreateduserInput = {
    where: rolepermissionWhereUniqueInput
    create: XOR<rolepermissionCreateWithoutCreateduserInput, rolepermissionUncheckedCreateWithoutCreateduserInput>
  }

  export type rolepermissionCreateManyCreateduserInputEnvelope = {
    data: rolepermissionCreateManyCreateduserInput | rolepermissionCreateManyCreateduserInput[]
    skipDuplicates?: boolean
  }

  export type rolepermissionCreateWithoutUpdateduserInput = {
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreatedrolepermissionsInput
    permission: permissionCreateNestedOneWithoutRolepermissionsInput
    role: roleCreateNestedOneWithoutRolepermissionsInput
  }

  export type rolepermissionUncheckedCreateWithoutUpdateduserInput = {
    id?: number
    roleid: number
    permissionid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
  }

  export type rolepermissionCreateOrConnectWithoutUpdateduserInput = {
    where: rolepermissionWhereUniqueInput
    create: XOR<rolepermissionCreateWithoutUpdateduserInput, rolepermissionUncheckedCreateWithoutUpdateduserInput>
  }

  export type rolepermissionCreateManyUpdateduserInputEnvelope = {
    data: rolepermissionCreateManyUpdateduserInput | rolepermissionCreateManyUpdateduserInput[]
    skipDuplicates?: boolean
  }

  export type userCreateWithoutCreatedusersInput = {
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    useroffers?: offerCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactCreateNestedManyWithoutUsercontactsInput
    userpages?: pageCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceCreateNestedManyWithoutUserserviceInput
  }

  export type userUncheckedCreateWithoutCreatedusersInput = {
    id?: number
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    useroffers?: offerUncheckedCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactUncheckedCreateNestedManyWithoutUsercontactsInput
    userpages?: pageUncheckedCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryUncheckedCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceUncheckedCreateNestedManyWithoutUserserviceInput
  }

  export type userCreateOrConnectWithoutCreatedusersInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutCreatedusersInput, userUncheckedCreateWithoutCreatedusersInput>
  }

  export type userCreateWithoutCreateduserInput = {
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    useroffers?: offerCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactCreateNestedManyWithoutUsercontactsInput
    userpages?: pageCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceCreateNestedManyWithoutUserserviceInput
  }

  export type userUncheckedCreateWithoutCreateduserInput = {
    id?: number
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    useroffers?: offerUncheckedCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactUncheckedCreateNestedManyWithoutUsercontactsInput
    userpages?: pageUncheckedCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryUncheckedCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceUncheckedCreateNestedManyWithoutUserserviceInput
  }

  export type userCreateOrConnectWithoutCreateduserInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutCreateduserInput, userUncheckedCreateWithoutCreateduserInput>
  }

  export type userCreateManyCreateduserInputEnvelope = {
    data: userCreateManyCreateduserInput | userCreateManyCreateduserInput[]
    skipDuplicates?: boolean
  }

  export type userCreateWithoutUpdatedusersInput = {
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    useroffers?: offerCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactCreateNestedManyWithoutUsercontactsInput
    userpages?: pageCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceCreateNestedManyWithoutUserserviceInput
  }

  export type userUncheckedCreateWithoutUpdatedusersInput = {
    id?: number
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    useroffers?: offerUncheckedCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactUncheckedCreateNestedManyWithoutUsercontactsInput
    userpages?: pageUncheckedCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryUncheckedCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceUncheckedCreateNestedManyWithoutUserserviceInput
  }

  export type userCreateOrConnectWithoutUpdatedusersInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUpdatedusersInput, userUncheckedCreateWithoutUpdatedusersInput>
  }

  export type userCreateWithoutUpdateduserInput = {
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    useroffers?: offerCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactCreateNestedManyWithoutUsercontactsInput
    userpages?: pageCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceCreateNestedManyWithoutUserserviceInput
  }

  export type userUncheckedCreateWithoutUpdateduserInput = {
    id?: number
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdby: number
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    useroffers?: offerUncheckedCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactUncheckedCreateNestedManyWithoutUsercontactsInput
    userpages?: pageUncheckedCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryUncheckedCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceUncheckedCreateNestedManyWithoutUserserviceInput
  }

  export type userCreateOrConnectWithoutUpdateduserInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUpdateduserInput, userUncheckedCreateWithoutUpdateduserInput>
  }

  export type userCreateManyUpdateduserInputEnvelope = {
    data: userCreateManyUpdateduserInput | userCreateManyUpdateduserInput[]
    skipDuplicates?: boolean
  }

  export type userpermissionCreateWithoutCreateduserInput = {
    createdat?: Date | string
    updatedat?: Date | string | null
    permission: permissionCreateNestedOneWithoutUserpermissionsInput
    updateduser?: userCreateNestedOneWithoutUpdateduserpermissionsInput
    user: userCreateNestedOneWithoutUserpermissionsInput
  }

  export type userpermissionUncheckedCreateWithoutCreateduserInput = {
    id?: number
    userid: number
    permissionid: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
  }

  export type userpermissionCreateOrConnectWithoutCreateduserInput = {
    where: userpermissionWhereUniqueInput
    create: XOR<userpermissionCreateWithoutCreateduserInput, userpermissionUncheckedCreateWithoutCreateduserInput>
  }

  export type userpermissionCreateManyCreateduserInputEnvelope = {
    data: userpermissionCreateManyCreateduserInput | userpermissionCreateManyCreateduserInput[]
    skipDuplicates?: boolean
  }

  export type userpermissionCreateWithoutUpdateduserInput = {
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreateduserpermissionsInput
    permission: permissionCreateNestedOneWithoutUserpermissionsInput
    user: userCreateNestedOneWithoutUserpermissionsInput
  }

  export type userpermissionUncheckedCreateWithoutUpdateduserInput = {
    id?: number
    userid: number
    permissionid: number
    createdby: number
    createdat?: Date | string
    updatedat?: Date | string | null
  }

  export type userpermissionCreateOrConnectWithoutUpdateduserInput = {
    where: userpermissionWhereUniqueInput
    create: XOR<userpermissionCreateWithoutUpdateduserInput, userpermissionUncheckedCreateWithoutUpdateduserInput>
  }

  export type userpermissionCreateManyUpdateduserInputEnvelope = {
    data: userpermissionCreateManyUpdateduserInput | userpermissionCreateManyUpdateduserInput[]
    skipDuplicates?: boolean
  }

  export type userpermissionCreateWithoutUserInput = {
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreateduserpermissionsInput
    permission: permissionCreateNestedOneWithoutUserpermissionsInput
    updateduser?: userCreateNestedOneWithoutUpdateduserpermissionsInput
  }

  export type userpermissionUncheckedCreateWithoutUserInput = {
    id?: number
    permissionid: number
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
  }

  export type userpermissionCreateOrConnectWithoutUserInput = {
    where: userpermissionWhereUniqueInput
    create: XOR<userpermissionCreateWithoutUserInput, userpermissionUncheckedCreateWithoutUserInput>
  }

  export type userpermissionCreateManyUserInputEnvelope = {
    data: userpermissionCreateManyUserInput | userpermissionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type userroleCreateWithoutCreateduserInput = {
    createdat?: Date | string
    updatedat?: Date | string | null
    role: roleCreateNestedOneWithoutUserrolesInput
    updateduser?: userCreateNestedOneWithoutUpdateduserrolesInput
    user: userCreateNestedOneWithoutUserrolesInput
  }

  export type userroleUncheckedCreateWithoutCreateduserInput = {
    id?: number
    userid: number
    roleid: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
  }

  export type userroleCreateOrConnectWithoutCreateduserInput = {
    where: userroleWhereUniqueInput
    create: XOR<userroleCreateWithoutCreateduserInput, userroleUncheckedCreateWithoutCreateduserInput>
  }

  export type userroleCreateManyCreateduserInputEnvelope = {
    data: userroleCreateManyCreateduserInput | userroleCreateManyCreateduserInput[]
    skipDuplicates?: boolean
  }

  export type userroleCreateWithoutUpdateduserInput = {
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreateduserrolesInput
    role: roleCreateNestedOneWithoutUserrolesInput
    user: userCreateNestedOneWithoutUserrolesInput
  }

  export type userroleUncheckedCreateWithoutUpdateduserInput = {
    id?: number
    userid: number
    roleid: number
    createdby: number
    createdat?: Date | string
    updatedat?: Date | string | null
  }

  export type userroleCreateOrConnectWithoutUpdateduserInput = {
    where: userroleWhereUniqueInput
    create: XOR<userroleCreateWithoutUpdateduserInput, userroleUncheckedCreateWithoutUpdateduserInput>
  }

  export type userroleCreateManyUpdateduserInputEnvelope = {
    data: userroleCreateManyUpdateduserInput | userroleCreateManyUpdateduserInput[]
    skipDuplicates?: boolean
  }

  export type userroleCreateWithoutUserInput = {
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreateduserrolesInput
    role: roleCreateNestedOneWithoutUserrolesInput
    updateduser?: userCreateNestedOneWithoutUpdateduserrolesInput
  }

  export type userroleUncheckedCreateWithoutUserInput = {
    id?: number
    roleid: number
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
  }

  export type userroleCreateOrConnectWithoutUserInput = {
    where: userroleWhereUniqueInput
    create: XOR<userroleCreateWithoutUserInput, userroleUncheckedCreateWithoutUserInput>
  }

  export type userroleCreateManyUserInputEnvelope = {
    data: userroleCreateManyUserInput | userroleCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type offerCreateWithoutUseroffersInput = {
    name: string
    description: string
    saleprice: number
    salepricecurrency: string
    salepriceperiod: string
    discountprice: number
    discountamount: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    service?: serviceCreateNestedOneWithoutOffersInput
  }

  export type offerUncheckedCreateWithoutUseroffersInput = {
    name: string
    description: string
    saleprice: number
    salepricecurrency: string
    salepriceperiod: string
    discountprice: number
    discountamount: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    serviceid: number
  }

  export type offerCreateOrConnectWithoutUseroffersInput = {
    where: offerWhereUniqueInput
    create: XOR<offerCreateWithoutUseroffersInput, offerUncheckedCreateWithoutUseroffersInput>
  }

  export type offerCreateManyUseroffersInputEnvelope = {
    data: offerCreateManyUseroffersInput | offerCreateManyUseroffersInput[]
    skipDuplicates?: boolean
  }

  export type contactCreateWithoutUsercontactsInput = {
    name: string
    email: string
    phone: string
    message: string
    attachment?: string | null
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isclosed: number
    servicecategory?: servicecategoryCreateNestedOneWithoutContactsInput
    service?: serviceCreateNestedOneWithoutContactsInput
  }

  export type contactUncheckedCreateWithoutUsercontactsInput = {
    name: string
    email: string
    phone: string
    message: string
    attachment?: string | null
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isclosed: number
    servicecategoryid: number
    serviceid: number
  }

  export type contactCreateOrConnectWithoutUsercontactsInput = {
    where: contactWhereUniqueInput
    create: XOR<contactCreateWithoutUsercontactsInput, contactUncheckedCreateWithoutUsercontactsInput>
  }

  export type contactCreateManyUsercontactsInputEnvelope = {
    data: contactCreateManyUsercontactsInput | contactCreateManyUsercontactsInput[]
    skipDuplicates?: boolean
  }

  export type pageCreateWithoutUserpagesInput = {
    name: string
    content: string
    slug: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    service?: serviceCreateNestedOneWithoutPagesInput
    metatags?: metaCreateNestedOneWithoutPagesInput
  }

  export type pageUncheckedCreateWithoutUserpagesInput = {
    metaid: number
    name: string
    content: string
    slug: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    serviceid: number
  }

  export type pageCreateOrConnectWithoutUserpagesInput = {
    where: pageWhereUniqueInput
    create: XOR<pageCreateWithoutUserpagesInput, pageUncheckedCreateWithoutUserpagesInput>
  }

  export type pageCreateManyUserpagesInputEnvelope = {
    data: pageCreateManyUserpagesInput | pageCreateManyUserpagesInput[]
    skipDuplicates?: boolean
  }

  export type servicecategoryCreateWithoutUserservicecategoryInput = {
    name: string
    description: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    services?: serviceCreateNestedManyWithoutServicecategoryInput
    contacts?: contactCreateNestedManyWithoutServicecategoryInput
    metatags?: metaCreateNestedOneWithoutServicecategoryInput
  }

  export type servicecategoryUncheckedCreateWithoutUserservicecategoryInput = {
    name: string
    description: string
    metaid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    services?: serviceUncheckedCreateNestedManyWithoutServicecategoryInput
    contacts?: contactUncheckedCreateNestedManyWithoutServicecategoryInput
  }

  export type servicecategoryCreateOrConnectWithoutUserservicecategoryInput = {
    where: servicecategoryWhereUniqueInput
    create: XOR<servicecategoryCreateWithoutUserservicecategoryInput, servicecategoryUncheckedCreateWithoutUserservicecategoryInput>
  }

  export type servicecategoryCreateManyUserservicecategoryInputEnvelope = {
    data: servicecategoryCreateManyUserservicecategoryInput | servicecategoryCreateManyUserservicecategoryInput[]
    skipDuplicates?: boolean
  }

  export type serviceCreateWithoutUserserviceInput = {
    name: string
    description: JsonNullValueInput | InputJsonValue
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    servicecategory: servicecategoryCreateNestedOneWithoutServicesInput
    pages?: pageCreateNestedManyWithoutServiceInput
    contacts?: contactCreateNestedManyWithoutServiceInput
    offers?: offerCreateNestedManyWithoutServiceInput
    metatags?: metaCreateNestedOneWithoutServicesInput
  }

  export type serviceUncheckedCreateWithoutUserserviceInput = {
    name: string
    description: JsonNullValueInput | InputJsonValue
    servicecategoryid: number
    metaid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    pages?: pageUncheckedCreateNestedManyWithoutServiceInput
    contacts?: contactUncheckedCreateNestedManyWithoutServiceInput
    offers?: offerUncheckedCreateNestedManyWithoutServiceInput
  }

  export type serviceCreateOrConnectWithoutUserserviceInput = {
    where: serviceWhereUniqueInput
    create: XOR<serviceCreateWithoutUserserviceInput, serviceUncheckedCreateWithoutUserserviceInput>
  }

  export type serviceCreateManyUserserviceInputEnvelope = {
    data: serviceCreateManyUserserviceInput | serviceCreateManyUserserviceInput[]
    skipDuplicates?: boolean
  }

  export type notificationUpsertWithWhereUniqueWithoutToInput = {
    where: notificationWhereUniqueInput
    update: XOR<notificationUpdateWithoutToInput, notificationUncheckedUpdateWithoutToInput>
    create: XOR<notificationCreateWithoutToInput, notificationUncheckedCreateWithoutToInput>
  }

  export type notificationUpdateWithWhereUniqueWithoutToInput = {
    where: notificationWhereUniqueInput
    data: XOR<notificationUpdateWithoutToInput, notificationUncheckedUpdateWithoutToInput>
  }

  export type notificationUpdateManyWithWhereWithoutToInput = {
    where: notificationScalarWhereInput
    data: XOR<notificationUpdateManyMutationInput, notificationUncheckedUpdateManyWithoutToInput>
  }

  export type notificationScalarWhereInput = {
    AND?: notificationScalarWhereInput | notificationScalarWhereInput[]
    OR?: notificationScalarWhereInput[]
    NOT?: notificationScalarWhereInput | notificationScalarWhereInput[]
    id?: IntFilter<"notification"> | number
    touserid?: IntFilter<"notification"> | number
    message?: StringFilter<"notification"> | string
    url?: StringFilter<"notification"> | string
    createdby?: IntFilter<"notification"> | number
    createdat?: DateTimeFilter<"notification"> | Date | string
    readedat?: DateTimeNullableFilter<"notification"> | Date | string | null
  }

  export type apiclientUpsertWithWhereUniqueWithoutCreateduserInput = {
    where: apiclientWhereUniqueInput
    update: XOR<apiclientUpdateWithoutCreateduserInput, apiclientUncheckedUpdateWithoutCreateduserInput>
    create: XOR<apiclientCreateWithoutCreateduserInput, apiclientUncheckedCreateWithoutCreateduserInput>
  }

  export type apiclientUpdateWithWhereUniqueWithoutCreateduserInput = {
    where: apiclientWhereUniqueInput
    data: XOR<apiclientUpdateWithoutCreateduserInput, apiclientUncheckedUpdateWithoutCreateduserInput>
  }

  export type apiclientUpdateManyWithWhereWithoutCreateduserInput = {
    where: apiclientScalarWhereInput
    data: XOR<apiclientUpdateManyMutationInput, apiclientUncheckedUpdateManyWithoutCreateduserInput>
  }

  export type apiclientScalarWhereInput = {
    AND?: apiclientScalarWhereInput | apiclientScalarWhereInput[]
    OR?: apiclientScalarWhereInput[]
    NOT?: apiclientScalarWhereInput | apiclientScalarWhereInput[]
    id?: IntFilter<"apiclient"> | number
    name?: StringFilter<"apiclient"> | string
    key?: StringFilter<"apiclient"> | string
    secret?: StringFilter<"apiclient"> | string
    type?: IntFilter<"apiclient"> | number
    createdat?: DateTimeFilter<"apiclient"> | Date | string
    createdby?: IntFilter<"apiclient"> | number
    updatedat?: DateTimeNullableFilter<"apiclient"> | Date | string | null
    updatedby?: IntNullableFilter<"apiclient"> | number | null
    isactive?: BoolFilter<"apiclient"> | boolean
  }

  export type apiclientUpsertWithWhereUniqueWithoutUpdateduserInput = {
    where: apiclientWhereUniqueInput
    update: XOR<apiclientUpdateWithoutUpdateduserInput, apiclientUncheckedUpdateWithoutUpdateduserInput>
    create: XOR<apiclientCreateWithoutUpdateduserInput, apiclientUncheckedCreateWithoutUpdateduserInput>
  }

  export type apiclientUpdateWithWhereUniqueWithoutUpdateduserInput = {
    where: apiclientWhereUniqueInput
    data: XOR<apiclientUpdateWithoutUpdateduserInput, apiclientUncheckedUpdateWithoutUpdateduserInput>
  }

  export type apiclientUpdateManyWithWhereWithoutUpdateduserInput = {
    where: apiclientScalarWhereInput
    data: XOR<apiclientUpdateManyMutationInput, apiclientUncheckedUpdateManyWithoutUpdateduserInput>
  }

  export type permissionUpsertWithWhereUniqueWithoutCreateduserInput = {
    where: permissionWhereUniqueInput
    update: XOR<permissionUpdateWithoutCreateduserInput, permissionUncheckedUpdateWithoutCreateduserInput>
    create: XOR<permissionCreateWithoutCreateduserInput, permissionUncheckedCreateWithoutCreateduserInput>
  }

  export type permissionUpdateWithWhereUniqueWithoutCreateduserInput = {
    where: permissionWhereUniqueInput
    data: XOR<permissionUpdateWithoutCreateduserInput, permissionUncheckedUpdateWithoutCreateduserInput>
  }

  export type permissionUpdateManyWithWhereWithoutCreateduserInput = {
    where: permissionScalarWhereInput
    data: XOR<permissionUpdateManyMutationInput, permissionUncheckedUpdateManyWithoutCreateduserInput>
  }

  export type permissionScalarWhereInput = {
    AND?: permissionScalarWhereInput | permissionScalarWhereInput[]
    OR?: permissionScalarWhereInput[]
    NOT?: permissionScalarWhereInput | permissionScalarWhereInput[]
    id?: IntFilter<"permission"> | number
    name?: StringFilter<"permission"> | string
    value?: StringFilter<"permission"> | string
    group?: StringFilter<"permission"> | string
    description?: StringFilter<"permission"> | string
    createdby?: IntFilter<"permission"> | number
    createdat?: DateTimeFilter<"permission"> | Date | string
    updatedby?: IntNullableFilter<"permission"> | number | null
    updatedat?: DateTimeNullableFilter<"permission"> | Date | string | null
  }

  export type permissionUpsertWithWhereUniqueWithoutUpdateduserInput = {
    where: permissionWhereUniqueInput
    update: XOR<permissionUpdateWithoutUpdateduserInput, permissionUncheckedUpdateWithoutUpdateduserInput>
    create: XOR<permissionCreateWithoutUpdateduserInput, permissionUncheckedCreateWithoutUpdateduserInput>
  }

  export type permissionUpdateWithWhereUniqueWithoutUpdateduserInput = {
    where: permissionWhereUniqueInput
    data: XOR<permissionUpdateWithoutUpdateduserInput, permissionUncheckedUpdateWithoutUpdateduserInput>
  }

  export type permissionUpdateManyWithWhereWithoutUpdateduserInput = {
    where: permissionScalarWhereInput
    data: XOR<permissionUpdateManyMutationInput, permissionUncheckedUpdateManyWithoutUpdateduserInput>
  }

  export type refreshtokenUpsertWithWhereUniqueWithoutUserInput = {
    where: refreshtokenWhereUniqueInput
    update: XOR<refreshtokenUpdateWithoutUserInput, refreshtokenUncheckedUpdateWithoutUserInput>
    create: XOR<refreshtokenCreateWithoutUserInput, refreshtokenUncheckedCreateWithoutUserInput>
  }

  export type refreshtokenUpdateWithWhereUniqueWithoutUserInput = {
    where: refreshtokenWhereUniqueInput
    data: XOR<refreshtokenUpdateWithoutUserInput, refreshtokenUncheckedUpdateWithoutUserInput>
  }

  export type refreshtokenUpdateManyWithWhereWithoutUserInput = {
    where: refreshtokenScalarWhereInput
    data: XOR<refreshtokenUpdateManyMutationInput, refreshtokenUncheckedUpdateManyWithoutUserInput>
  }

  export type refreshtokenScalarWhereInput = {
    AND?: refreshtokenScalarWhereInput | refreshtokenScalarWhereInput[]
    OR?: refreshtokenScalarWhereInput[]
    NOT?: refreshtokenScalarWhereInput | refreshtokenScalarWhereInput[]
    id?: IntFilter<"refreshtoken"> | number
    userid?: IntFilter<"refreshtoken"> | number
    token?: StringFilter<"refreshtoken"> | string
    createdat?: DateTimeFilter<"refreshtoken"> | Date | string
    updatedat?: DateTimeNullableFilter<"refreshtoken"> | Date | string | null
    expiresat?: DateTimeNullableFilter<"refreshtoken"> | Date | string | null
  }

  export type roleUpsertWithWhereUniqueWithoutCreateduserInput = {
    where: roleWhereUniqueInput
    update: XOR<roleUpdateWithoutCreateduserInput, roleUncheckedUpdateWithoutCreateduserInput>
    create: XOR<roleCreateWithoutCreateduserInput, roleUncheckedCreateWithoutCreateduserInput>
  }

  export type roleUpdateWithWhereUniqueWithoutCreateduserInput = {
    where: roleWhereUniqueInput
    data: XOR<roleUpdateWithoutCreateduserInput, roleUncheckedUpdateWithoutCreateduserInput>
  }

  export type roleUpdateManyWithWhereWithoutCreateduserInput = {
    where: roleScalarWhereInput
    data: XOR<roleUpdateManyMutationInput, roleUncheckedUpdateManyWithoutCreateduserInput>
  }

  export type roleScalarWhereInput = {
    AND?: roleScalarWhereInput | roleScalarWhereInput[]
    OR?: roleScalarWhereInput[]
    NOT?: roleScalarWhereInput | roleScalarWhereInput[]
    id?: IntFilter<"role"> | number
    name?: StringFilter<"role"> | string
    createdby?: IntFilter<"role"> | number
    createdat?: DateTimeFilter<"role"> | Date | string
    updatedby?: IntNullableFilter<"role"> | number | null
    updatedat?: DateTimeNullableFilter<"role"> | Date | string | null
    issystemrole?: BoolFilter<"role"> | boolean
  }

  export type roleUpsertWithWhereUniqueWithoutUpdateduserInput = {
    where: roleWhereUniqueInput
    update: XOR<roleUpdateWithoutUpdateduserInput, roleUncheckedUpdateWithoutUpdateduserInput>
    create: XOR<roleCreateWithoutUpdateduserInput, roleUncheckedCreateWithoutUpdateduserInput>
  }

  export type roleUpdateWithWhereUniqueWithoutUpdateduserInput = {
    where: roleWhereUniqueInput
    data: XOR<roleUpdateWithoutUpdateduserInput, roleUncheckedUpdateWithoutUpdateduserInput>
  }

  export type roleUpdateManyWithWhereWithoutUpdateduserInput = {
    where: roleScalarWhereInput
    data: XOR<roleUpdateManyMutationInput, roleUncheckedUpdateManyWithoutUpdateduserInput>
  }

  export type rolepermissionUpsertWithWhereUniqueWithoutCreateduserInput = {
    where: rolepermissionWhereUniqueInput
    update: XOR<rolepermissionUpdateWithoutCreateduserInput, rolepermissionUncheckedUpdateWithoutCreateduserInput>
    create: XOR<rolepermissionCreateWithoutCreateduserInput, rolepermissionUncheckedCreateWithoutCreateduserInput>
  }

  export type rolepermissionUpdateWithWhereUniqueWithoutCreateduserInput = {
    where: rolepermissionWhereUniqueInput
    data: XOR<rolepermissionUpdateWithoutCreateduserInput, rolepermissionUncheckedUpdateWithoutCreateduserInput>
  }

  export type rolepermissionUpdateManyWithWhereWithoutCreateduserInput = {
    where: rolepermissionScalarWhereInput
    data: XOR<rolepermissionUpdateManyMutationInput, rolepermissionUncheckedUpdateManyWithoutCreateduserInput>
  }

  export type rolepermissionUpsertWithWhereUniqueWithoutUpdateduserInput = {
    where: rolepermissionWhereUniqueInput
    update: XOR<rolepermissionUpdateWithoutUpdateduserInput, rolepermissionUncheckedUpdateWithoutUpdateduserInput>
    create: XOR<rolepermissionCreateWithoutUpdateduserInput, rolepermissionUncheckedCreateWithoutUpdateduserInput>
  }

  export type rolepermissionUpdateWithWhereUniqueWithoutUpdateduserInput = {
    where: rolepermissionWhereUniqueInput
    data: XOR<rolepermissionUpdateWithoutUpdateduserInput, rolepermissionUncheckedUpdateWithoutUpdateduserInput>
  }

  export type rolepermissionUpdateManyWithWhereWithoutUpdateduserInput = {
    where: rolepermissionScalarWhereInput
    data: XOR<rolepermissionUpdateManyMutationInput, rolepermissionUncheckedUpdateManyWithoutUpdateduserInput>
  }

  export type userUpsertWithoutCreatedusersInput = {
    update: XOR<userUpdateWithoutCreatedusersInput, userUncheckedUpdateWithoutCreatedusersInput>
    create: XOR<userCreateWithoutCreatedusersInput, userUncheckedCreateWithoutCreatedusersInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutCreatedusersInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutCreatedusersInput, userUncheckedUpdateWithoutCreatedusersInput>
  }

  export type userUpdateWithoutCreatedusersInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    useroffers?: offerUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUpdateManyWithoutUserserviceNestedInput
  }

  export type userUncheckedUpdateWithoutCreatedusersInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    useroffers?: offerUncheckedUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUncheckedUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUncheckedUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUncheckedUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUncheckedUpdateManyWithoutUserserviceNestedInput
  }

  export type userUpsertWithWhereUniqueWithoutCreateduserInput = {
    where: userWhereUniqueInput
    update: XOR<userUpdateWithoutCreateduserInput, userUncheckedUpdateWithoutCreateduserInput>
    create: XOR<userCreateWithoutCreateduserInput, userUncheckedCreateWithoutCreateduserInput>
  }

  export type userUpdateWithWhereUniqueWithoutCreateduserInput = {
    where: userWhereUniqueInput
    data: XOR<userUpdateWithoutCreateduserInput, userUncheckedUpdateWithoutCreateduserInput>
  }

  export type userUpdateManyWithWhereWithoutCreateduserInput = {
    where: userScalarWhereInput
    data: XOR<userUpdateManyMutationInput, userUncheckedUpdateManyWithoutCreateduserInput>
  }

  export type userScalarWhereInput = {
    AND?: userScalarWhereInput | userScalarWhereInput[]
    OR?: userScalarWhereInput[]
    NOT?: userScalarWhereInput | userScalarWhereInput[]
    id?: IntFilter<"user"> | number
    firstname?: StringFilter<"user"> | string
    lastname?: StringFilter<"user"> | string
    phone?: StringNullableFilter<"user"> | string | null
    email?: StringFilter<"user"> | string
    password?: StringFilter<"user"> | string
    createdby?: IntFilter<"user"> | number
    createdat?: DateTimeFilter<"user"> | Date | string
    updatedby?: IntNullableFilter<"user"> | number | null
    updatedat?: DateTimeNullableFilter<"user"> | Date | string | null
    status?: IntFilter<"user"> | number
  }

  export type userUpsertWithoutUpdatedusersInput = {
    update: XOR<userUpdateWithoutUpdatedusersInput, userUncheckedUpdateWithoutUpdatedusersInput>
    create: XOR<userCreateWithoutUpdatedusersInput, userUncheckedCreateWithoutUpdatedusersInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUpdatedusersInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUpdatedusersInput, userUncheckedUpdateWithoutUpdatedusersInput>
  }

  export type userUpdateWithoutUpdatedusersInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    useroffers?: offerUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUpdateManyWithoutUserserviceNestedInput
  }

  export type userUncheckedUpdateWithoutUpdatedusersInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    useroffers?: offerUncheckedUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUncheckedUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUncheckedUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUncheckedUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUncheckedUpdateManyWithoutUserserviceNestedInput
  }

  export type userUpsertWithWhereUniqueWithoutUpdateduserInput = {
    where: userWhereUniqueInput
    update: XOR<userUpdateWithoutUpdateduserInput, userUncheckedUpdateWithoutUpdateduserInput>
    create: XOR<userCreateWithoutUpdateduserInput, userUncheckedCreateWithoutUpdateduserInput>
  }

  export type userUpdateWithWhereUniqueWithoutUpdateduserInput = {
    where: userWhereUniqueInput
    data: XOR<userUpdateWithoutUpdateduserInput, userUncheckedUpdateWithoutUpdateduserInput>
  }

  export type userUpdateManyWithWhereWithoutUpdateduserInput = {
    where: userScalarWhereInput
    data: XOR<userUpdateManyMutationInput, userUncheckedUpdateManyWithoutUpdateduserInput>
  }

  export type userpermissionUpsertWithWhereUniqueWithoutCreateduserInput = {
    where: userpermissionWhereUniqueInput
    update: XOR<userpermissionUpdateWithoutCreateduserInput, userpermissionUncheckedUpdateWithoutCreateduserInput>
    create: XOR<userpermissionCreateWithoutCreateduserInput, userpermissionUncheckedCreateWithoutCreateduserInput>
  }

  export type userpermissionUpdateWithWhereUniqueWithoutCreateduserInput = {
    where: userpermissionWhereUniqueInput
    data: XOR<userpermissionUpdateWithoutCreateduserInput, userpermissionUncheckedUpdateWithoutCreateduserInput>
  }

  export type userpermissionUpdateManyWithWhereWithoutCreateduserInput = {
    where: userpermissionScalarWhereInput
    data: XOR<userpermissionUpdateManyMutationInput, userpermissionUncheckedUpdateManyWithoutCreateduserInput>
  }

  export type userpermissionUpsertWithWhereUniqueWithoutUpdateduserInput = {
    where: userpermissionWhereUniqueInput
    update: XOR<userpermissionUpdateWithoutUpdateduserInput, userpermissionUncheckedUpdateWithoutUpdateduserInput>
    create: XOR<userpermissionCreateWithoutUpdateduserInput, userpermissionUncheckedCreateWithoutUpdateduserInput>
  }

  export type userpermissionUpdateWithWhereUniqueWithoutUpdateduserInput = {
    where: userpermissionWhereUniqueInput
    data: XOR<userpermissionUpdateWithoutUpdateduserInput, userpermissionUncheckedUpdateWithoutUpdateduserInput>
  }

  export type userpermissionUpdateManyWithWhereWithoutUpdateduserInput = {
    where: userpermissionScalarWhereInput
    data: XOR<userpermissionUpdateManyMutationInput, userpermissionUncheckedUpdateManyWithoutUpdateduserInput>
  }

  export type userpermissionUpsertWithWhereUniqueWithoutUserInput = {
    where: userpermissionWhereUniqueInput
    update: XOR<userpermissionUpdateWithoutUserInput, userpermissionUncheckedUpdateWithoutUserInput>
    create: XOR<userpermissionCreateWithoutUserInput, userpermissionUncheckedCreateWithoutUserInput>
  }

  export type userpermissionUpdateWithWhereUniqueWithoutUserInput = {
    where: userpermissionWhereUniqueInput
    data: XOR<userpermissionUpdateWithoutUserInput, userpermissionUncheckedUpdateWithoutUserInput>
  }

  export type userpermissionUpdateManyWithWhereWithoutUserInput = {
    where: userpermissionScalarWhereInput
    data: XOR<userpermissionUpdateManyMutationInput, userpermissionUncheckedUpdateManyWithoutUserInput>
  }

  export type userroleUpsertWithWhereUniqueWithoutCreateduserInput = {
    where: userroleWhereUniqueInput
    update: XOR<userroleUpdateWithoutCreateduserInput, userroleUncheckedUpdateWithoutCreateduserInput>
    create: XOR<userroleCreateWithoutCreateduserInput, userroleUncheckedCreateWithoutCreateduserInput>
  }

  export type userroleUpdateWithWhereUniqueWithoutCreateduserInput = {
    where: userroleWhereUniqueInput
    data: XOR<userroleUpdateWithoutCreateduserInput, userroleUncheckedUpdateWithoutCreateduserInput>
  }

  export type userroleUpdateManyWithWhereWithoutCreateduserInput = {
    where: userroleScalarWhereInput
    data: XOR<userroleUpdateManyMutationInput, userroleUncheckedUpdateManyWithoutCreateduserInput>
  }

  export type userroleUpsertWithWhereUniqueWithoutUpdateduserInput = {
    where: userroleWhereUniqueInput
    update: XOR<userroleUpdateWithoutUpdateduserInput, userroleUncheckedUpdateWithoutUpdateduserInput>
    create: XOR<userroleCreateWithoutUpdateduserInput, userroleUncheckedCreateWithoutUpdateduserInput>
  }

  export type userroleUpdateWithWhereUniqueWithoutUpdateduserInput = {
    where: userroleWhereUniqueInput
    data: XOR<userroleUpdateWithoutUpdateduserInput, userroleUncheckedUpdateWithoutUpdateduserInput>
  }

  export type userroleUpdateManyWithWhereWithoutUpdateduserInput = {
    where: userroleScalarWhereInput
    data: XOR<userroleUpdateManyMutationInput, userroleUncheckedUpdateManyWithoutUpdateduserInput>
  }

  export type userroleUpsertWithWhereUniqueWithoutUserInput = {
    where: userroleWhereUniqueInput
    update: XOR<userroleUpdateWithoutUserInput, userroleUncheckedUpdateWithoutUserInput>
    create: XOR<userroleCreateWithoutUserInput, userroleUncheckedCreateWithoutUserInput>
  }

  export type userroleUpdateWithWhereUniqueWithoutUserInput = {
    where: userroleWhereUniqueInput
    data: XOR<userroleUpdateWithoutUserInput, userroleUncheckedUpdateWithoutUserInput>
  }

  export type userroleUpdateManyWithWhereWithoutUserInput = {
    where: userroleScalarWhereInput
    data: XOR<userroleUpdateManyMutationInput, userroleUncheckedUpdateManyWithoutUserInput>
  }

  export type offerUpsertWithWhereUniqueWithoutUseroffersInput = {
    where: offerWhereUniqueInput
    update: XOR<offerUpdateWithoutUseroffersInput, offerUncheckedUpdateWithoutUseroffersInput>
    create: XOR<offerCreateWithoutUseroffersInput, offerUncheckedCreateWithoutUseroffersInput>
  }

  export type offerUpdateWithWhereUniqueWithoutUseroffersInput = {
    where: offerWhereUniqueInput
    data: XOR<offerUpdateWithoutUseroffersInput, offerUncheckedUpdateWithoutUseroffersInput>
  }

  export type offerUpdateManyWithWhereWithoutUseroffersInput = {
    where: offerScalarWhereInput
    data: XOR<offerUpdateManyMutationInput, offerUncheckedUpdateManyWithoutUseroffersInput>
  }

  export type contactUpsertWithWhereUniqueWithoutUsercontactsInput = {
    where: contactWhereUniqueInput
    update: XOR<contactUpdateWithoutUsercontactsInput, contactUncheckedUpdateWithoutUsercontactsInput>
    create: XOR<contactCreateWithoutUsercontactsInput, contactUncheckedCreateWithoutUsercontactsInput>
  }

  export type contactUpdateWithWhereUniqueWithoutUsercontactsInput = {
    where: contactWhereUniqueInput
    data: XOR<contactUpdateWithoutUsercontactsInput, contactUncheckedUpdateWithoutUsercontactsInput>
  }

  export type contactUpdateManyWithWhereWithoutUsercontactsInput = {
    where: contactScalarWhereInput
    data: XOR<contactUpdateManyMutationInput, contactUncheckedUpdateManyWithoutUsercontactsInput>
  }

  export type pageUpsertWithWhereUniqueWithoutUserpagesInput = {
    where: pageWhereUniqueInput
    update: XOR<pageUpdateWithoutUserpagesInput, pageUncheckedUpdateWithoutUserpagesInput>
    create: XOR<pageCreateWithoutUserpagesInput, pageUncheckedCreateWithoutUserpagesInput>
  }

  export type pageUpdateWithWhereUniqueWithoutUserpagesInput = {
    where: pageWhereUniqueInput
    data: XOR<pageUpdateWithoutUserpagesInput, pageUncheckedUpdateWithoutUserpagesInput>
  }

  export type pageUpdateManyWithWhereWithoutUserpagesInput = {
    where: pageScalarWhereInput
    data: XOR<pageUpdateManyMutationInput, pageUncheckedUpdateManyWithoutUserpagesInput>
  }

  export type servicecategoryUpsertWithWhereUniqueWithoutUserservicecategoryInput = {
    where: servicecategoryWhereUniqueInput
    update: XOR<servicecategoryUpdateWithoutUserservicecategoryInput, servicecategoryUncheckedUpdateWithoutUserservicecategoryInput>
    create: XOR<servicecategoryCreateWithoutUserservicecategoryInput, servicecategoryUncheckedCreateWithoutUserservicecategoryInput>
  }

  export type servicecategoryUpdateWithWhereUniqueWithoutUserservicecategoryInput = {
    where: servicecategoryWhereUniqueInput
    data: XOR<servicecategoryUpdateWithoutUserservicecategoryInput, servicecategoryUncheckedUpdateWithoutUserservicecategoryInput>
  }

  export type servicecategoryUpdateManyWithWhereWithoutUserservicecategoryInput = {
    where: servicecategoryScalarWhereInput
    data: XOR<servicecategoryUpdateManyMutationInput, servicecategoryUncheckedUpdateManyWithoutUserservicecategoryInput>
  }

  export type serviceUpsertWithWhereUniqueWithoutUserserviceInput = {
    where: serviceWhereUniqueInput
    update: XOR<serviceUpdateWithoutUserserviceInput, serviceUncheckedUpdateWithoutUserserviceInput>
    create: XOR<serviceCreateWithoutUserserviceInput, serviceUncheckedCreateWithoutUserserviceInput>
  }

  export type serviceUpdateWithWhereUniqueWithoutUserserviceInput = {
    where: serviceWhereUniqueInput
    data: XOR<serviceUpdateWithoutUserserviceInput, serviceUncheckedUpdateWithoutUserserviceInput>
  }

  export type serviceUpdateManyWithWhereWithoutUserserviceInput = {
    where: serviceScalarWhereInput
    data: XOR<serviceUpdateManyMutationInput, serviceUncheckedUpdateManyWithoutUserserviceInput>
  }

  export type userCreateWithoutCreateduserpermissionsInput = {
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    useroffers?: offerCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactCreateNestedManyWithoutUsercontactsInput
    userpages?: pageCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceCreateNestedManyWithoutUserserviceInput
  }

  export type userUncheckedCreateWithoutCreateduserpermissionsInput = {
    id?: number
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    useroffers?: offerUncheckedCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactUncheckedCreateNestedManyWithoutUsercontactsInput
    userpages?: pageUncheckedCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryUncheckedCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceUncheckedCreateNestedManyWithoutUserserviceInput
  }

  export type userCreateOrConnectWithoutCreateduserpermissionsInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutCreateduserpermissionsInput, userUncheckedCreateWithoutCreateduserpermissionsInput>
  }

  export type permissionCreateWithoutUserpermissionsInput = {
    name: string
    value: string
    group: string
    description: string
    createdat?: Date | string
    updatedat?: Date | string | null
    createduser: userCreateNestedOneWithoutCreatedpermissionsInput
    updateduser?: userCreateNestedOneWithoutUpdatedpermissionsInput
    rolepermissions?: rolepermissionCreateNestedManyWithoutPermissionInput
  }

  export type permissionUncheckedCreateWithoutUserpermissionsInput = {
    id?: number
    name: string
    value: string
    group: string
    description: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    rolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutPermissionInput
  }

  export type permissionCreateOrConnectWithoutUserpermissionsInput = {
    where: permissionWhereUniqueInput
    create: XOR<permissionCreateWithoutUserpermissionsInput, permissionUncheckedCreateWithoutUserpermissionsInput>
  }

  export type userCreateWithoutUpdateduserpermissionsInput = {
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    useroffers?: offerCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactCreateNestedManyWithoutUsercontactsInput
    userpages?: pageCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceCreateNestedManyWithoutUserserviceInput
  }

  export type userUncheckedCreateWithoutUpdateduserpermissionsInput = {
    id?: number
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    useroffers?: offerUncheckedCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactUncheckedCreateNestedManyWithoutUsercontactsInput
    userpages?: pageUncheckedCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryUncheckedCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceUncheckedCreateNestedManyWithoutUserserviceInput
  }

  export type userCreateOrConnectWithoutUpdateduserpermissionsInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUpdateduserpermissionsInput, userUncheckedCreateWithoutUpdateduserpermissionsInput>
  }

  export type userCreateWithoutUserpermissionsInput = {
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    useroffers?: offerCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactCreateNestedManyWithoutUsercontactsInput
    userpages?: pageCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceCreateNestedManyWithoutUserserviceInput
  }

  export type userUncheckedCreateWithoutUserpermissionsInput = {
    id?: number
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    useroffers?: offerUncheckedCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactUncheckedCreateNestedManyWithoutUsercontactsInput
    userpages?: pageUncheckedCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryUncheckedCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceUncheckedCreateNestedManyWithoutUserserviceInput
  }

  export type userCreateOrConnectWithoutUserpermissionsInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUserpermissionsInput, userUncheckedCreateWithoutUserpermissionsInput>
  }

  export type userUpsertWithoutCreateduserpermissionsInput = {
    update: XOR<userUpdateWithoutCreateduserpermissionsInput, userUncheckedUpdateWithoutCreateduserpermissionsInput>
    create: XOR<userCreateWithoutCreateduserpermissionsInput, userUncheckedCreateWithoutCreateduserpermissionsInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutCreateduserpermissionsInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutCreateduserpermissionsInput, userUncheckedUpdateWithoutCreateduserpermissionsInput>
  }

  export type userUpdateWithoutCreateduserpermissionsInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    useroffers?: offerUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUpdateManyWithoutUserserviceNestedInput
  }

  export type userUncheckedUpdateWithoutCreateduserpermissionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    useroffers?: offerUncheckedUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUncheckedUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUncheckedUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUncheckedUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUncheckedUpdateManyWithoutUserserviceNestedInput
  }

  export type permissionUpsertWithoutUserpermissionsInput = {
    update: XOR<permissionUpdateWithoutUserpermissionsInput, permissionUncheckedUpdateWithoutUserpermissionsInput>
    create: XOR<permissionCreateWithoutUserpermissionsInput, permissionUncheckedCreateWithoutUserpermissionsInput>
    where?: permissionWhereInput
  }

  export type permissionUpdateToOneWithWhereWithoutUserpermissionsInput = {
    where?: permissionWhereInput
    data: XOR<permissionUpdateWithoutUserpermissionsInput, permissionUncheckedUpdateWithoutUserpermissionsInput>
  }

  export type permissionUpdateWithoutUserpermissionsInput = {
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    group?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreatedpermissionsNestedInput
    updateduser?: userUpdateOneWithoutUpdatedpermissionsNestedInput
    rolepermissions?: rolepermissionUpdateManyWithoutPermissionNestedInput
  }

  export type permissionUncheckedUpdateWithoutUserpermissionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    group?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rolepermissions?: rolepermissionUncheckedUpdateManyWithoutPermissionNestedInput
  }

  export type userUpsertWithoutUpdateduserpermissionsInput = {
    update: XOR<userUpdateWithoutUpdateduserpermissionsInput, userUncheckedUpdateWithoutUpdateduserpermissionsInput>
    create: XOR<userCreateWithoutUpdateduserpermissionsInput, userUncheckedCreateWithoutUpdateduserpermissionsInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUpdateduserpermissionsInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUpdateduserpermissionsInput, userUncheckedUpdateWithoutUpdateduserpermissionsInput>
  }

  export type userUpdateWithoutUpdateduserpermissionsInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    useroffers?: offerUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUpdateManyWithoutUserserviceNestedInput
  }

  export type userUncheckedUpdateWithoutUpdateduserpermissionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    useroffers?: offerUncheckedUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUncheckedUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUncheckedUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUncheckedUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUncheckedUpdateManyWithoutUserserviceNestedInput
  }

  export type userUpsertWithoutUserpermissionsInput = {
    update: XOR<userUpdateWithoutUserpermissionsInput, userUncheckedUpdateWithoutUserpermissionsInput>
    create: XOR<userCreateWithoutUserpermissionsInput, userUncheckedCreateWithoutUserpermissionsInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUserpermissionsInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUserpermissionsInput, userUncheckedUpdateWithoutUserpermissionsInput>
  }

  export type userUpdateWithoutUserpermissionsInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    useroffers?: offerUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUpdateManyWithoutUserserviceNestedInput
  }

  export type userUncheckedUpdateWithoutUserpermissionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    useroffers?: offerUncheckedUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUncheckedUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUncheckedUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUncheckedUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUncheckedUpdateManyWithoutUserserviceNestedInput
  }

  export type userCreateWithoutCreateduserrolesInput = {
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    useroffers?: offerCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactCreateNestedManyWithoutUsercontactsInput
    userpages?: pageCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceCreateNestedManyWithoutUserserviceInput
  }

  export type userUncheckedCreateWithoutCreateduserrolesInput = {
    id?: number
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    useroffers?: offerUncheckedCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactUncheckedCreateNestedManyWithoutUsercontactsInput
    userpages?: pageUncheckedCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryUncheckedCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceUncheckedCreateNestedManyWithoutUserserviceInput
  }

  export type userCreateOrConnectWithoutCreateduserrolesInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutCreateduserrolesInput, userUncheckedCreateWithoutCreateduserrolesInput>
  }

  export type roleCreateWithoutUserrolesInput = {
    name: string
    createdat?: Date | string
    updatedat?: Date | string | null
    issystemrole?: boolean
    createduser: userCreateNestedOneWithoutCreatedrolesInput
    updateduser?: userCreateNestedOneWithoutUpdatedrolesInput
    rolepermissions?: rolepermissionCreateNestedManyWithoutRoleInput
  }

  export type roleUncheckedCreateWithoutUserrolesInput = {
    id?: number
    name: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    issystemrole?: boolean
    rolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutRoleInput
  }

  export type roleCreateOrConnectWithoutUserrolesInput = {
    where: roleWhereUniqueInput
    create: XOR<roleCreateWithoutUserrolesInput, roleUncheckedCreateWithoutUserrolesInput>
  }

  export type userCreateWithoutUpdateduserrolesInput = {
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    userroles?: userroleCreateNestedManyWithoutUserInput
    useroffers?: offerCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactCreateNestedManyWithoutUsercontactsInput
    userpages?: pageCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceCreateNestedManyWithoutUserserviceInput
  }

  export type userUncheckedCreateWithoutUpdateduserrolesInput = {
    id?: number
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    userroles?: userroleUncheckedCreateNestedManyWithoutUserInput
    useroffers?: offerUncheckedCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactUncheckedCreateNestedManyWithoutUsercontactsInput
    userpages?: pageUncheckedCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryUncheckedCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceUncheckedCreateNestedManyWithoutUserserviceInput
  }

  export type userCreateOrConnectWithoutUpdateduserrolesInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUpdateduserrolesInput, userUncheckedCreateWithoutUpdateduserrolesInput>
  }

  export type userCreateWithoutUserrolesInput = {
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationCreateNestedManyWithoutToInput
    createdapiclients?: apiclientCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenCreateNestedManyWithoutUserInput
    createdroles?: roleCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionCreateNestedManyWithoutUpdateduserInput
    createduser: userCreateNestedOneWithoutCreatedusersInput
    createdusers?: userCreateNestedManyWithoutCreateduserInput
    updateduser?: userCreateNestedOneWithoutUpdatedusersInput
    updatedusers?: userCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionCreateNestedManyWithoutUserInput
    createduserroles?: userroleCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleCreateNestedManyWithoutUpdateduserInput
    useroffers?: offerCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactCreateNestedManyWithoutUsercontactsInput
    userpages?: pageCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceCreateNestedManyWithoutUserserviceInput
  }

  export type userUncheckedCreateWithoutUserrolesInput = {
    id?: number
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    status?: number
    notificationuser?: notificationUncheckedCreateNestedManyWithoutToInput
    createdapiclients?: apiclientUncheckedCreateNestedManyWithoutCreateduserInput
    updatedapiclients?: apiclientUncheckedCreateNestedManyWithoutUpdateduserInput
    createdpermissions?: permissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedpermissions?: permissionUncheckedCreateNestedManyWithoutUpdateduserInput
    refreshtokens?: refreshtokenUncheckedCreateNestedManyWithoutUserInput
    createdroles?: roleUncheckedCreateNestedManyWithoutCreateduserInput
    updatedroles?: roleUncheckedCreateNestedManyWithoutUpdateduserInput
    createdrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updatedrolepermissions?: rolepermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    createdusers?: userUncheckedCreateNestedManyWithoutCreateduserInput
    updatedusers?: userUncheckedCreateNestedManyWithoutUpdateduserInput
    createduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserpermissions?: userpermissionUncheckedCreateNestedManyWithoutUpdateduserInput
    userpermissions?: userpermissionUncheckedCreateNestedManyWithoutUserInput
    createduserroles?: userroleUncheckedCreateNestedManyWithoutCreateduserInput
    updateduserroles?: userroleUncheckedCreateNestedManyWithoutUpdateduserInput
    useroffers?: offerUncheckedCreateNestedManyWithoutUseroffersInput
    usercontacts?: contactUncheckedCreateNestedManyWithoutUsercontactsInput
    userpages?: pageUncheckedCreateNestedManyWithoutUserpagesInput
    userservicecategory?: servicecategoryUncheckedCreateNestedManyWithoutUserservicecategoryInput
    userservice?: serviceUncheckedCreateNestedManyWithoutUserserviceInput
  }

  export type userCreateOrConnectWithoutUserrolesInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUserrolesInput, userUncheckedCreateWithoutUserrolesInput>
  }

  export type userUpsertWithoutCreateduserrolesInput = {
    update: XOR<userUpdateWithoutCreateduserrolesInput, userUncheckedUpdateWithoutCreateduserrolesInput>
    create: XOR<userCreateWithoutCreateduserrolesInput, userUncheckedCreateWithoutCreateduserrolesInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutCreateduserrolesInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutCreateduserrolesInput, userUncheckedUpdateWithoutCreateduserrolesInput>
  }

  export type userUpdateWithoutCreateduserrolesInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    useroffers?: offerUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUpdateManyWithoutUserserviceNestedInput
  }

  export type userUncheckedUpdateWithoutCreateduserrolesInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    useroffers?: offerUncheckedUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUncheckedUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUncheckedUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUncheckedUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUncheckedUpdateManyWithoutUserserviceNestedInput
  }

  export type roleUpsertWithoutUserrolesInput = {
    update: XOR<roleUpdateWithoutUserrolesInput, roleUncheckedUpdateWithoutUserrolesInput>
    create: XOR<roleCreateWithoutUserrolesInput, roleUncheckedCreateWithoutUserrolesInput>
    where?: roleWhereInput
  }

  export type roleUpdateToOneWithWhereWithoutUserrolesInput = {
    where?: roleWhereInput
    data: XOR<roleUpdateWithoutUserrolesInput, roleUncheckedUpdateWithoutUserrolesInput>
  }

  export type roleUpdateWithoutUserrolesInput = {
    name?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    issystemrole?: BoolFieldUpdateOperationsInput | boolean
    createduser?: userUpdateOneRequiredWithoutCreatedrolesNestedInput
    updateduser?: userUpdateOneWithoutUpdatedrolesNestedInput
    rolepermissions?: rolepermissionUpdateManyWithoutRoleNestedInput
  }

  export type roleUncheckedUpdateWithoutUserrolesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    issystemrole?: BoolFieldUpdateOperationsInput | boolean
    rolepermissions?: rolepermissionUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type userUpsertWithoutUpdateduserrolesInput = {
    update: XOR<userUpdateWithoutUpdateduserrolesInput, userUncheckedUpdateWithoutUpdateduserrolesInput>
    create: XOR<userCreateWithoutUpdateduserrolesInput, userUncheckedCreateWithoutUpdateduserrolesInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUpdateduserrolesInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUpdateduserrolesInput, userUncheckedUpdateWithoutUpdateduserrolesInput>
  }

  export type userUpdateWithoutUpdateduserrolesInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    useroffers?: offerUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUpdateManyWithoutUserserviceNestedInput
  }

  export type userUncheckedUpdateWithoutUpdateduserrolesInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    useroffers?: offerUncheckedUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUncheckedUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUncheckedUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUncheckedUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUncheckedUpdateManyWithoutUserserviceNestedInput
  }

  export type userUpsertWithoutUserrolesInput = {
    update: XOR<userUpdateWithoutUserrolesInput, userUncheckedUpdateWithoutUserrolesInput>
    create: XOR<userCreateWithoutUserrolesInput, userUncheckedCreateWithoutUserrolesInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUserrolesInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUserrolesInput, userUncheckedUpdateWithoutUserrolesInput>
  }

  export type userUpdateWithoutUserrolesInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    useroffers?: offerUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUpdateManyWithoutUserserviceNestedInput
  }

  export type userUncheckedUpdateWithoutUserrolesInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    useroffers?: offerUncheckedUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUncheckedUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUncheckedUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUncheckedUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUncheckedUpdateManyWithoutUserserviceNestedInput
  }

  export type blogcommentCreateManyBlogInput = {
    id?: number
    name: string
    email: string
    comment: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
  }

  export type blogcommentUpdateWithoutBlogInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    comment?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
  }

  export type blogcommentUncheckedUpdateWithoutBlogInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    comment?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
  }

  export type blogcommentUncheckedUpdateManyWithoutBlogInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    comment?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
  }

  export type blogCreateManyBlogcategoryInput = {
    id?: number
    title: string
    content: string
    slug: string
    featuredimage: string
    metaid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
  }

  export type blogUpdateWithoutBlogcategoryInput = {
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    featuredimage?: StringFieldUpdateOperationsInput | string
    metaid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    blogcomments?: blogcommentUpdateManyWithoutBlogNestedInput
  }

  export type blogUncheckedUpdateWithoutBlogcategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    featuredimage?: StringFieldUpdateOperationsInput | string
    metaid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    blogcomments?: blogcommentUncheckedUpdateManyWithoutBlogNestedInput
  }

  export type blogUncheckedUpdateManyWithoutBlogcategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    featuredimage?: StringFieldUpdateOperationsInput | string
    metaid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
  }

  export type pageCreateManyMetatagsInput = {
    id?: number
    name: string
    content: string
    slug: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    serviceid: number
  }

  export type serviceCreateManyMetatagsInput = {
    id?: number
    name: string
    description: JsonNullValueInput | InputJsonValue
    servicecategoryid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
  }

  export type servicecategoryCreateManyMetatagsInput = {
    id?: number
    name: string
    description: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
  }

  export type blogcategoryCreateManyBlogcategorymetaInput = {
    id?: number
    name: string
    description: string
    featuredimage: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
  }

  export type pageUpdateWithoutMetatagsInput = {
    name?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    service?: serviceUpdateOneWithoutPagesNestedInput
    userpages?: userUpdateOneWithoutUserpagesNestedInput
  }

  export type pageUncheckedUpdateWithoutMetatagsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    serviceid?: IntFieldUpdateOperationsInput | number
  }

  export type pageUncheckedUpdateManyWithoutMetatagsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    serviceid?: IntFieldUpdateOperationsInput | number
  }

  export type serviceUpdateWithoutMetatagsInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: JsonNullValueInput | InputJsonValue
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    servicecategory?: servicecategoryUpdateOneRequiredWithoutServicesNestedInput
    pages?: pageUpdateManyWithoutServiceNestedInput
    contacts?: contactUpdateManyWithoutServiceNestedInput
    offers?: offerUpdateManyWithoutServiceNestedInput
    userservice?: userUpdateOneWithoutUserserviceNestedInput
  }

  export type serviceUncheckedUpdateWithoutMetatagsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: JsonNullValueInput | InputJsonValue
    servicecategoryid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    pages?: pageUncheckedUpdateManyWithoutServiceNestedInput
    contacts?: contactUncheckedUpdateManyWithoutServiceNestedInput
    offers?: offerUncheckedUpdateManyWithoutServiceNestedInput
  }

  export type serviceUncheckedUpdateManyWithoutMetatagsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: JsonNullValueInput | InputJsonValue
    servicecategoryid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
  }

  export type servicecategoryUpdateWithoutMetatagsInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    services?: serviceUpdateManyWithoutServicecategoryNestedInput
    contacts?: contactUpdateManyWithoutServicecategoryNestedInput
    userservicecategory?: userUpdateOneWithoutUserservicecategoryNestedInput
  }

  export type servicecategoryUncheckedUpdateWithoutMetatagsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    services?: serviceUncheckedUpdateManyWithoutServicecategoryNestedInput
    contacts?: contactUncheckedUpdateManyWithoutServicecategoryNestedInput
  }

  export type servicecategoryUncheckedUpdateManyWithoutMetatagsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
  }

  export type blogcategoryUpdateWithoutBlogcategorymetaInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    featuredimage?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    blogs?: blogUpdateManyWithoutBlogcategoryNestedInput
  }

  export type blogcategoryUncheckedUpdateWithoutBlogcategorymetaInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    featuredimage?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    blogs?: blogUncheckedUpdateManyWithoutBlogcategoryNestedInput
  }

  export type blogcategoryUncheckedUpdateManyWithoutBlogcategorymetaInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    featuredimage?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
  }

  export type serviceCreateManyServicecategoryInput = {
    id?: number
    name: string
    description: JsonNullValueInput | InputJsonValue
    metaid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
  }

  export type contactCreateManyServicecategoryInput = {
    id?: number
    name: string
    email: string
    phone: string
    message: string
    attachment?: string | null
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isclosed: number
    serviceid: number
  }

  export type serviceUpdateWithoutServicecategoryInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: JsonNullValueInput | InputJsonValue
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    pages?: pageUpdateManyWithoutServiceNestedInput
    contacts?: contactUpdateManyWithoutServiceNestedInput
    offers?: offerUpdateManyWithoutServiceNestedInput
    userservice?: userUpdateOneWithoutUserserviceNestedInput
    metatags?: metaUpdateOneWithoutServicesNestedInput
  }

  export type serviceUncheckedUpdateWithoutServicecategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: JsonNullValueInput | InputJsonValue
    metaid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    pages?: pageUncheckedUpdateManyWithoutServiceNestedInput
    contacts?: contactUncheckedUpdateManyWithoutServiceNestedInput
    offers?: offerUncheckedUpdateManyWithoutServiceNestedInput
  }

  export type serviceUncheckedUpdateManyWithoutServicecategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: JsonNullValueInput | InputJsonValue
    metaid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
  }

  export type contactUpdateWithoutServicecategoryInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isclosed?: IntFieldUpdateOperationsInput | number
    service?: serviceUpdateOneWithoutContactsNestedInput
    usercontacts?: userUpdateOneWithoutUsercontactsNestedInput
  }

  export type contactUncheckedUpdateWithoutServicecategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isclosed?: IntFieldUpdateOperationsInput | number
    serviceid?: IntFieldUpdateOperationsInput | number
  }

  export type contactUncheckedUpdateManyWithoutServicecategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isclosed?: IntFieldUpdateOperationsInput | number
    serviceid?: IntFieldUpdateOperationsInput | number
  }

  export type pageCreateManyServiceInput = {
    id?: number
    metaid: number
    name: string
    content: string
    slug: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
  }

  export type contactCreateManyServiceInput = {
    id?: number
    name: string
    email: string
    phone: string
    message: string
    attachment?: string | null
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isclosed: number
    servicecategoryid: number
  }

  export type offerCreateManyServiceInput = {
    id?: number
    name: string
    description: string
    saleprice: number
    salepricecurrency: string
    salepriceperiod: string
    discountprice: number
    discountamount: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
  }

  export type pageUpdateWithoutServiceInput = {
    name?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    userpages?: userUpdateOneWithoutUserpagesNestedInput
    metatags?: metaUpdateOneWithoutPagesNestedInput
  }

  export type pageUncheckedUpdateWithoutServiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    metaid?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
  }

  export type pageUncheckedUpdateManyWithoutServiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    metaid?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
  }

  export type contactUpdateWithoutServiceInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isclosed?: IntFieldUpdateOperationsInput | number
    servicecategory?: servicecategoryUpdateOneWithoutContactsNestedInput
    usercontacts?: userUpdateOneWithoutUsercontactsNestedInput
  }

  export type contactUncheckedUpdateWithoutServiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isclosed?: IntFieldUpdateOperationsInput | number
    servicecategoryid?: IntFieldUpdateOperationsInput | number
  }

  export type contactUncheckedUpdateManyWithoutServiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isclosed?: IntFieldUpdateOperationsInput | number
    servicecategoryid?: IntFieldUpdateOperationsInput | number
  }

  export type offerUpdateWithoutServiceInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    saleprice?: FloatFieldUpdateOperationsInput | number
    salepricecurrency?: StringFieldUpdateOperationsInput | string
    salepriceperiod?: StringFieldUpdateOperationsInput | string
    discountprice?: FloatFieldUpdateOperationsInput | number
    discountamount?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    useroffers?: userUpdateOneWithoutUseroffersNestedInput
  }

  export type offerUncheckedUpdateWithoutServiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    saleprice?: FloatFieldUpdateOperationsInput | number
    salepricecurrency?: StringFieldUpdateOperationsInput | string
    salepriceperiod?: StringFieldUpdateOperationsInput | string
    discountprice?: FloatFieldUpdateOperationsInput | number
    discountamount?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
  }

  export type offerUncheckedUpdateManyWithoutServiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    saleprice?: FloatFieldUpdateOperationsInput | number
    salepricecurrency?: StringFieldUpdateOperationsInput | string
    salepriceperiod?: StringFieldUpdateOperationsInput | string
    discountprice?: FloatFieldUpdateOperationsInput | number
    discountamount?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
  }

  export type rolepermissionCreateManyRoleInput = {
    id?: number
    permissionid: number
    createdat?: Date | string
    createdby: number
    updatedby?: number | null
    updatedat?: Date | string | null
  }

  export type userroleCreateManyRoleInput = {
    id?: number
    userid: number
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
  }

  export type rolepermissionUpdateWithoutRoleInput = {
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreatedrolepermissionsNestedInput
    permission?: permissionUpdateOneRequiredWithoutRolepermissionsNestedInput
    updateduser?: userUpdateOneWithoutUpdatedrolepermissionsNestedInput
  }

  export type rolepermissionUncheckedUpdateWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    permissionid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type rolepermissionUncheckedUpdateManyWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    permissionid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userroleUpdateWithoutRoleInput = {
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreateduserrolesNestedInput
    updateduser?: userUpdateOneWithoutUpdateduserrolesNestedInput
    user?: userUpdateOneRequiredWithoutUserrolesNestedInput
  }

  export type userroleUncheckedUpdateWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    userid?: IntFieldUpdateOperationsInput | number
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userroleUncheckedUpdateManyWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    userid?: IntFieldUpdateOperationsInput | number
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type rolepermissionCreateManyPermissionInput = {
    id?: number
    roleid: number
    createdat?: Date | string
    createdby: number
    updatedby?: number | null
    updatedat?: Date | string | null
  }

  export type userpermissionCreateManyPermissionInput = {
    id?: number
    userid: number
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
  }

  export type rolepermissionUpdateWithoutPermissionInput = {
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreatedrolepermissionsNestedInput
    role?: roleUpdateOneRequiredWithoutRolepermissionsNestedInput
    updateduser?: userUpdateOneWithoutUpdatedrolepermissionsNestedInput
  }

  export type rolepermissionUncheckedUpdateWithoutPermissionInput = {
    id?: IntFieldUpdateOperationsInput | number
    roleid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type rolepermissionUncheckedUpdateManyWithoutPermissionInput = {
    id?: IntFieldUpdateOperationsInput | number
    roleid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userpermissionUpdateWithoutPermissionInput = {
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreateduserpermissionsNestedInput
    updateduser?: userUpdateOneWithoutUpdateduserpermissionsNestedInput
    user?: userUpdateOneRequiredWithoutUserpermissionsNestedInput
  }

  export type userpermissionUncheckedUpdateWithoutPermissionInput = {
    id?: IntFieldUpdateOperationsInput | number
    userid?: IntFieldUpdateOperationsInput | number
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userpermissionUncheckedUpdateManyWithoutPermissionInput = {
    id?: IntFieldUpdateOperationsInput | number
    userid?: IntFieldUpdateOperationsInput | number
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type notificationCreateManyToInput = {
    id?: number
    message: string
    url: string
    createdby: number
    createdat?: Date | string
    readedat?: Date | string | null
  }

  export type apiclientCreateManyCreateduserInput = {
    id?: number
    name: string
    key: string
    secret: string
    type: number
    createdat?: Date | string
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: boolean
  }

  export type apiclientCreateManyUpdateduserInput = {
    id?: number
    name: string
    key: string
    secret: string
    type: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    isactive: boolean
  }

  export type permissionCreateManyCreateduserInput = {
    id?: number
    name: string
    value: string
    group: string
    description: string
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
  }

  export type permissionCreateManyUpdateduserInput = {
    id?: number
    name: string
    value: string
    group: string
    description: string
    createdby: number
    createdat?: Date | string
    updatedat?: Date | string | null
  }

  export type refreshtokenCreateManyUserInput = {
    id?: number
    token: string
    createdat?: Date | string
    updatedat?: Date | string | null
    expiresat?: Date | string | null
  }

  export type roleCreateManyCreateduserInput = {
    id?: number
    name: string
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    issystemrole?: boolean
  }

  export type roleCreateManyUpdateduserInput = {
    id?: number
    name: string
    createdby: number
    createdat?: Date | string
    updatedat?: Date | string | null
    issystemrole?: boolean
  }

  export type rolepermissionCreateManyCreateduserInput = {
    id?: number
    roleid: number
    permissionid: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
  }

  export type rolepermissionCreateManyUpdateduserInput = {
    id?: number
    roleid: number
    permissionid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
  }

  export type userCreateManyCreateduserInput = {
    id?: number
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
    status?: number
  }

  export type userCreateManyUpdateduserInput = {
    id?: number
    firstname: string
    lastname: string
    phone?: string | null
    email: string
    password: string
    createdby: number
    createdat?: Date | string
    updatedat?: Date | string | null
    status?: number
  }

  export type userpermissionCreateManyCreateduserInput = {
    id?: number
    userid: number
    permissionid: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
  }

  export type userpermissionCreateManyUpdateduserInput = {
    id?: number
    userid: number
    permissionid: number
    createdby: number
    createdat?: Date | string
    updatedat?: Date | string | null
  }

  export type userpermissionCreateManyUserInput = {
    id?: number
    permissionid: number
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
  }

  export type userroleCreateManyCreateduserInput = {
    id?: number
    userid: number
    roleid: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
  }

  export type userroleCreateManyUpdateduserInput = {
    id?: number
    userid: number
    roleid: number
    createdby: number
    createdat?: Date | string
    updatedat?: Date | string | null
  }

  export type userroleCreateManyUserInput = {
    id?: number
    roleid: number
    createdby: number
    createdat?: Date | string
    updatedby?: number | null
    updatedat?: Date | string | null
  }

  export type offerCreateManyUseroffersInput = {
    name: string
    description: string
    saleprice: number
    salepricecurrency: string
    salepriceperiod: string
    discountprice: number
    discountamount: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    serviceid: number
  }

  export type contactCreateManyUsercontactsInput = {
    name: string
    email: string
    phone: string
    message: string
    attachment?: string | null
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isclosed: number
    servicecategoryid: number
    serviceid: number
  }

  export type pageCreateManyUserpagesInput = {
    metaid: number
    name: string
    content: string
    slug: string
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
    serviceid: number
  }

  export type servicecategoryCreateManyUserservicecategoryInput = {
    name: string
    description: string
    metaid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
  }

  export type serviceCreateManyUserserviceInput = {
    name: string
    description: JsonNullValueInput | InputJsonValue
    servicecategoryid: number
    metaid: number
    createdat?: Date | string
    createdby: number
    updatedat?: Date | string | null
    updatedby?: number | null
    isactive: number
  }

  export type notificationUpdateWithoutToInput = {
    message?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    readedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type notificationUncheckedUpdateWithoutToInput = {
    id?: IntFieldUpdateOperationsInput | number
    message?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    readedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type notificationUncheckedUpdateManyWithoutToInput = {
    id?: IntFieldUpdateOperationsInput | number
    message?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    readedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type apiclientUpdateWithoutCreateduserInput = {
    name?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    secret?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: BoolFieldUpdateOperationsInput | boolean
    updateduser?: userUpdateOneWithoutUpdatedapiclientsNestedInput
  }

  export type apiclientUncheckedUpdateWithoutCreateduserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    secret?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type apiclientUncheckedUpdateManyWithoutCreateduserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    secret?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type apiclientUpdateWithoutUpdateduserInput = {
    name?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    secret?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: BoolFieldUpdateOperationsInput | boolean
    createduser?: userUpdateOneRequiredWithoutCreatedapiclientsNestedInput
  }

  export type apiclientUncheckedUpdateWithoutUpdateduserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    secret?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type apiclientUncheckedUpdateManyWithoutUpdateduserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    secret?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isactive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type permissionUpdateWithoutCreateduserInput = {
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    group?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updateduser?: userUpdateOneWithoutUpdatedpermissionsNestedInput
    rolepermissions?: rolepermissionUpdateManyWithoutPermissionNestedInput
    userpermissions?: userpermissionUpdateManyWithoutPermissionNestedInput
  }

  export type permissionUncheckedUpdateWithoutCreateduserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    group?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rolepermissions?: rolepermissionUncheckedUpdateManyWithoutPermissionNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutPermissionNestedInput
  }

  export type permissionUncheckedUpdateManyWithoutCreateduserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    group?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type permissionUpdateWithoutUpdateduserInput = {
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    group?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreatedpermissionsNestedInput
    rolepermissions?: rolepermissionUpdateManyWithoutPermissionNestedInput
    userpermissions?: userpermissionUpdateManyWithoutPermissionNestedInput
  }

  export type permissionUncheckedUpdateWithoutUpdateduserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    group?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rolepermissions?: rolepermissionUncheckedUpdateManyWithoutPermissionNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutPermissionNestedInput
  }

  export type permissionUncheckedUpdateManyWithoutUpdateduserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    group?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type refreshtokenUpdateWithoutUserInput = {
    token?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type refreshtokenUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type refreshtokenUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type roleUpdateWithoutCreateduserInput = {
    name?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    issystemrole?: BoolFieldUpdateOperationsInput | boolean
    updateduser?: userUpdateOneWithoutUpdatedrolesNestedInput
    rolepermissions?: rolepermissionUpdateManyWithoutRoleNestedInput
    userroles?: userroleUpdateManyWithoutRoleNestedInput
  }

  export type roleUncheckedUpdateWithoutCreateduserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    issystemrole?: BoolFieldUpdateOperationsInput | boolean
    rolepermissions?: rolepermissionUncheckedUpdateManyWithoutRoleNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type roleUncheckedUpdateManyWithoutCreateduserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    issystemrole?: BoolFieldUpdateOperationsInput | boolean
  }

  export type roleUpdateWithoutUpdateduserInput = {
    name?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    issystemrole?: BoolFieldUpdateOperationsInput | boolean
    createduser?: userUpdateOneRequiredWithoutCreatedrolesNestedInput
    rolepermissions?: rolepermissionUpdateManyWithoutRoleNestedInput
    userroles?: userroleUpdateManyWithoutRoleNestedInput
  }

  export type roleUncheckedUpdateWithoutUpdateduserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    issystemrole?: BoolFieldUpdateOperationsInput | boolean
    rolepermissions?: rolepermissionUncheckedUpdateManyWithoutRoleNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type roleUncheckedUpdateManyWithoutUpdateduserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    issystemrole?: BoolFieldUpdateOperationsInput | boolean
  }

  export type rolepermissionUpdateWithoutCreateduserInput = {
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    permission?: permissionUpdateOneRequiredWithoutRolepermissionsNestedInput
    role?: roleUpdateOneRequiredWithoutRolepermissionsNestedInput
    updateduser?: userUpdateOneWithoutUpdatedrolepermissionsNestedInput
  }

  export type rolepermissionUncheckedUpdateWithoutCreateduserInput = {
    id?: IntFieldUpdateOperationsInput | number
    roleid?: IntFieldUpdateOperationsInput | number
    permissionid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type rolepermissionUncheckedUpdateManyWithoutCreateduserInput = {
    id?: IntFieldUpdateOperationsInput | number
    roleid?: IntFieldUpdateOperationsInput | number
    permissionid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type rolepermissionUpdateWithoutUpdateduserInput = {
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreatedrolepermissionsNestedInput
    permission?: permissionUpdateOneRequiredWithoutRolepermissionsNestedInput
    role?: roleUpdateOneRequiredWithoutRolepermissionsNestedInput
  }

  export type rolepermissionUncheckedUpdateWithoutUpdateduserInput = {
    id?: IntFieldUpdateOperationsInput | number
    roleid?: IntFieldUpdateOperationsInput | number
    permissionid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type rolepermissionUncheckedUpdateManyWithoutUpdateduserInput = {
    id?: IntFieldUpdateOperationsInput | number
    roleid?: IntFieldUpdateOperationsInput | number
    permissionid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userUpdateWithoutCreateduserInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updateduser?: userUpdateOneWithoutUpdatedusersNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    useroffers?: offerUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUpdateManyWithoutUserserviceNestedInput
  }

  export type userUncheckedUpdateWithoutCreateduserInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    useroffers?: offerUncheckedUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUncheckedUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUncheckedUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUncheckedUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUncheckedUpdateManyWithoutUserserviceNestedInput
  }

  export type userUncheckedUpdateManyWithoutCreateduserInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
  }

  export type userUpdateWithoutUpdateduserInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUpdateManyWithoutUserNestedInput
    createdroles?: roleUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUpdateManyWithoutUpdateduserNestedInput
    createduser?: userUpdateOneRequiredWithoutCreatedusersNestedInput
    createdusers?: userUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUpdateManyWithoutUserNestedInput
    useroffers?: offerUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUpdateManyWithoutUserserviceNestedInput
  }

  export type userUncheckedUpdateWithoutUpdateduserInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
    notificationuser?: notificationUncheckedUpdateManyWithoutToNestedInput
    createdapiclients?: apiclientUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedapiclients?: apiclientUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdpermissions?: permissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedpermissions?: permissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    refreshtokens?: refreshtokenUncheckedUpdateManyWithoutUserNestedInput
    createdroles?: roleUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedroles?: roleUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdrolepermissions?: rolepermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedrolepermissions?: rolepermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    createdusers?: userUncheckedUpdateManyWithoutCreateduserNestedInput
    updatedusers?: userUncheckedUpdateManyWithoutUpdateduserNestedInput
    createduserpermissions?: userpermissionUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserpermissions?: userpermissionUncheckedUpdateManyWithoutUpdateduserNestedInput
    userpermissions?: userpermissionUncheckedUpdateManyWithoutUserNestedInput
    createduserroles?: userroleUncheckedUpdateManyWithoutCreateduserNestedInput
    updateduserroles?: userroleUncheckedUpdateManyWithoutUpdateduserNestedInput
    userroles?: userroleUncheckedUpdateManyWithoutUserNestedInput
    useroffers?: offerUncheckedUpdateManyWithoutUseroffersNestedInput
    usercontacts?: contactUncheckedUpdateManyWithoutUsercontactsNestedInput
    userpages?: pageUncheckedUpdateManyWithoutUserpagesNestedInput
    userservicecategory?: servicecategoryUncheckedUpdateManyWithoutUserservicecategoryNestedInput
    userservice?: serviceUncheckedUpdateManyWithoutUserserviceNestedInput
  }

  export type userUncheckedUpdateManyWithoutUpdateduserInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: IntFieldUpdateOperationsInput | number
  }

  export type userpermissionUpdateWithoutCreateduserInput = {
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    permission?: permissionUpdateOneRequiredWithoutUserpermissionsNestedInput
    updateduser?: userUpdateOneWithoutUpdateduserpermissionsNestedInput
    user?: userUpdateOneRequiredWithoutUserpermissionsNestedInput
  }

  export type userpermissionUncheckedUpdateWithoutCreateduserInput = {
    id?: IntFieldUpdateOperationsInput | number
    userid?: IntFieldUpdateOperationsInput | number
    permissionid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userpermissionUncheckedUpdateManyWithoutCreateduserInput = {
    id?: IntFieldUpdateOperationsInput | number
    userid?: IntFieldUpdateOperationsInput | number
    permissionid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userpermissionUpdateWithoutUpdateduserInput = {
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreateduserpermissionsNestedInput
    permission?: permissionUpdateOneRequiredWithoutUserpermissionsNestedInput
    user?: userUpdateOneRequiredWithoutUserpermissionsNestedInput
  }

  export type userpermissionUncheckedUpdateWithoutUpdateduserInput = {
    id?: IntFieldUpdateOperationsInput | number
    userid?: IntFieldUpdateOperationsInput | number
    permissionid?: IntFieldUpdateOperationsInput | number
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userpermissionUncheckedUpdateManyWithoutUpdateduserInput = {
    id?: IntFieldUpdateOperationsInput | number
    userid?: IntFieldUpdateOperationsInput | number
    permissionid?: IntFieldUpdateOperationsInput | number
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userpermissionUpdateWithoutUserInput = {
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreateduserpermissionsNestedInput
    permission?: permissionUpdateOneRequiredWithoutUserpermissionsNestedInput
    updateduser?: userUpdateOneWithoutUpdateduserpermissionsNestedInput
  }

  export type userpermissionUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    permissionid?: IntFieldUpdateOperationsInput | number
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userpermissionUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    permissionid?: IntFieldUpdateOperationsInput | number
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userroleUpdateWithoutCreateduserInput = {
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: roleUpdateOneRequiredWithoutUserrolesNestedInput
    updateduser?: userUpdateOneWithoutUpdateduserrolesNestedInput
    user?: userUpdateOneRequiredWithoutUserrolesNestedInput
  }

  export type userroleUncheckedUpdateWithoutCreateduserInput = {
    id?: IntFieldUpdateOperationsInput | number
    userid?: IntFieldUpdateOperationsInput | number
    roleid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userroleUncheckedUpdateManyWithoutCreateduserInput = {
    id?: IntFieldUpdateOperationsInput | number
    userid?: IntFieldUpdateOperationsInput | number
    roleid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userroleUpdateWithoutUpdateduserInput = {
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreateduserrolesNestedInput
    role?: roleUpdateOneRequiredWithoutUserrolesNestedInput
    user?: userUpdateOneRequiredWithoutUserrolesNestedInput
  }

  export type userroleUncheckedUpdateWithoutUpdateduserInput = {
    id?: IntFieldUpdateOperationsInput | number
    userid?: IntFieldUpdateOperationsInput | number
    roleid?: IntFieldUpdateOperationsInput | number
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userroleUncheckedUpdateManyWithoutUpdateduserInput = {
    id?: IntFieldUpdateOperationsInput | number
    userid?: IntFieldUpdateOperationsInput | number
    roleid?: IntFieldUpdateOperationsInput | number
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userroleUpdateWithoutUserInput = {
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createduser?: userUpdateOneRequiredWithoutCreateduserrolesNestedInput
    role?: roleUpdateOneRequiredWithoutUserrolesNestedInput
    updateduser?: userUpdateOneWithoutUpdateduserrolesNestedInput
  }

  export type userroleUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    roleid?: IntFieldUpdateOperationsInput | number
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userroleUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    roleid?: IntFieldUpdateOperationsInput | number
    createdby?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type offerUpdateWithoutUseroffersInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    saleprice?: FloatFieldUpdateOperationsInput | number
    salepricecurrency?: StringFieldUpdateOperationsInput | string
    salepriceperiod?: StringFieldUpdateOperationsInput | string
    discountprice?: FloatFieldUpdateOperationsInput | number
    discountamount?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    service?: serviceUpdateOneWithoutOffersNestedInput
  }

  export type offerUncheckedUpdateWithoutUseroffersInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    saleprice?: FloatFieldUpdateOperationsInput | number
    salepricecurrency?: StringFieldUpdateOperationsInput | string
    salepriceperiod?: StringFieldUpdateOperationsInput | string
    discountprice?: FloatFieldUpdateOperationsInput | number
    discountamount?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    serviceid?: IntFieldUpdateOperationsInput | number
  }

  export type offerUncheckedUpdateManyWithoutUseroffersInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    saleprice?: FloatFieldUpdateOperationsInput | number
    salepricecurrency?: StringFieldUpdateOperationsInput | string
    salepriceperiod?: StringFieldUpdateOperationsInput | string
    discountprice?: FloatFieldUpdateOperationsInput | number
    discountamount?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    serviceid?: IntFieldUpdateOperationsInput | number
  }

  export type contactUpdateWithoutUsercontactsInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isclosed?: IntFieldUpdateOperationsInput | number
    servicecategory?: servicecategoryUpdateOneWithoutContactsNestedInput
    service?: serviceUpdateOneWithoutContactsNestedInput
  }

  export type contactUncheckedUpdateWithoutUsercontactsInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isclosed?: IntFieldUpdateOperationsInput | number
    servicecategoryid?: IntFieldUpdateOperationsInput | number
    serviceid?: IntFieldUpdateOperationsInput | number
  }

  export type contactUncheckedUpdateManyWithoutUsercontactsInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isclosed?: IntFieldUpdateOperationsInput | number
    servicecategoryid?: IntFieldUpdateOperationsInput | number
    serviceid?: IntFieldUpdateOperationsInput | number
  }

  export type pageUpdateWithoutUserpagesInput = {
    name?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    service?: serviceUpdateOneWithoutPagesNestedInput
    metatags?: metaUpdateOneWithoutPagesNestedInput
  }

  export type pageUncheckedUpdateWithoutUserpagesInput = {
    metaid?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    serviceid?: IntFieldUpdateOperationsInput | number
  }

  export type pageUncheckedUpdateManyWithoutUserpagesInput = {
    metaid?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    serviceid?: IntFieldUpdateOperationsInput | number
  }

  export type servicecategoryUpdateWithoutUserservicecategoryInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    services?: serviceUpdateManyWithoutServicecategoryNestedInput
    contacts?: contactUpdateManyWithoutServicecategoryNestedInput
    metatags?: metaUpdateOneWithoutServicecategoryNestedInput
  }

  export type servicecategoryUncheckedUpdateWithoutUserservicecategoryInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    metaid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    services?: serviceUncheckedUpdateManyWithoutServicecategoryNestedInput
    contacts?: contactUncheckedUpdateManyWithoutServicecategoryNestedInput
  }

  export type servicecategoryUncheckedUpdateManyWithoutUserservicecategoryInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    metaid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
  }

  export type serviceUpdateWithoutUserserviceInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: JsonNullValueInput | InputJsonValue
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    servicecategory?: servicecategoryUpdateOneRequiredWithoutServicesNestedInput
    pages?: pageUpdateManyWithoutServiceNestedInput
    contacts?: contactUpdateManyWithoutServiceNestedInput
    offers?: offerUpdateManyWithoutServiceNestedInput
    metatags?: metaUpdateOneWithoutServicesNestedInput
  }

  export type serviceUncheckedUpdateWithoutUserserviceInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: JsonNullValueInput | InputJsonValue
    servicecategoryid?: IntFieldUpdateOperationsInput | number
    metaid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
    pages?: pageUncheckedUpdateManyWithoutServiceNestedInput
    contacts?: contactUncheckedUpdateManyWithoutServiceNestedInput
    offers?: offerUncheckedUpdateManyWithoutServiceNestedInput
  }

  export type serviceUncheckedUpdateManyWithoutUserserviceInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: JsonNullValueInput | InputJsonValue
    servicecategoryid?: IntFieldUpdateOperationsInput | number
    metaid?: IntFieldUpdateOperationsInput | number
    createdat?: DateTimeFieldUpdateOperationsInput | Date | string
    createdby?: IntFieldUpdateOperationsInput | number
    updatedat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedby?: NullableIntFieldUpdateOperationsInput | number | null
    isactive?: IntFieldUpdateOperationsInput | number
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use BlogCountOutputTypeDefaultArgs instead
     */
    export type BlogCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BlogCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BlogcategoryCountOutputTypeDefaultArgs instead
     */
    export type BlogcategoryCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BlogcategoryCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MetaCountOutputTypeDefaultArgs instead
     */
    export type MetaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MetaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ServicecategoryCountOutputTypeDefaultArgs instead
     */
    export type ServicecategoryCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ServicecategoryCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ServiceCountOutputTypeDefaultArgs instead
     */
    export type ServiceCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ServiceCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RoleCountOutputTypeDefaultArgs instead
     */
    export type RoleCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RoleCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PermissionCountOutputTypeDefaultArgs instead
     */
    export type PermissionCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PermissionCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserCountOutputTypeDefaultArgs instead
     */
    export type UserCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use blogcommentDefaultArgs instead
     */
    export type blogcommentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = blogcommentDefaultArgs<ExtArgs>
    /**
     * @deprecated Use blogDefaultArgs instead
     */
    export type blogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = blogDefaultArgs<ExtArgs>
    /**
     * @deprecated Use blogcategoryDefaultArgs instead
     */
    export type blogcategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = blogcategoryDefaultArgs<ExtArgs>
    /**
     * @deprecated Use metaDefaultArgs instead
     */
    export type metaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = metaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use offerDefaultArgs instead
     */
    export type offerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = offerDefaultArgs<ExtArgs>
    /**
     * @deprecated Use newsletterDefaultArgs instead
     */
    export type newsletterArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = newsletterDefaultArgs<ExtArgs>
    /**
     * @deprecated Use contactDefaultArgs instead
     */
    export type contactArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = contactDefaultArgs<ExtArgs>
    /**
     * @deprecated Use pageDefaultArgs instead
     */
    export type pageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = pageDefaultArgs<ExtArgs>
    /**
     * @deprecated Use servicecategoryDefaultArgs instead
     */
    export type servicecategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = servicecategoryDefaultArgs<ExtArgs>
    /**
     * @deprecated Use serviceDefaultArgs instead
     */
    export type serviceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = serviceDefaultArgs<ExtArgs>
    /**
     * @deprecated Use entranceDefaultArgs instead
     */
    export type entranceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = entranceDefaultArgs<ExtArgs>
    /**
     * @deprecated Use apiclientDefaultArgs instead
     */
    export type apiclientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = apiclientDefaultArgs<ExtArgs>
    /**
     * @deprecated Use refreshtokenDefaultArgs instead
     */
    export type refreshtokenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = refreshtokenDefaultArgs<ExtArgs>
    /**
     * @deprecated Use revokedtokenDefaultArgs instead
     */
    export type revokedtokenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = revokedtokenDefaultArgs<ExtArgs>
    /**
     * @deprecated Use roleDefaultArgs instead
     */
    export type roleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = roleDefaultArgs<ExtArgs>
    /**
     * @deprecated Use notificationDefaultArgs instead
     */
    export type notificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = notificationDefaultArgs<ExtArgs>
    /**
     * @deprecated Use permissionDefaultArgs instead
     */
    export type permissionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = permissionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use rolepermissionDefaultArgs instead
     */
    export type rolepermissionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = rolepermissionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use userDefaultArgs instead
     */
    export type userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = userDefaultArgs<ExtArgs>
    /**
     * @deprecated Use userpermissionDefaultArgs instead
     */
    export type userpermissionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = userpermissionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use userroleDefaultArgs instead
     */
    export type userroleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = userroleDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}